syntax = "proto3";

package agentInterface;

service Agent {

  rpc Echo(EchoMessage) returns (EchoMessage) {};

  rpc GetGitInfo (InfoRequest) returns (stream PackChunk) {};
  rpc GetGitPackStream (PackRequest) returns (stream PackChunk) {};
  rpc ScanVaults (EmptyMessage) returns (stream PackChunk) {};

  rpc GetRootCertificate (EmptyMessage) returns (CertificateMessage) {};
  rpc RequestCertificateSigning (CertificateMessage) returns (CertificateMessage) {};

  rpc GetClosestLocalNodes (NodeIdMessage) returns (NodeTableMessage) {};

  rpc SynchronizeDHT (EmptyMessage) returns (NodeTableMessage) {};

  rpc RelayHolePunchMessage (ConnectionMessage) returns (EmptyMessage) {};
}

message EmptyMessage {}

message EchoMessage {
  string challenge = 1;
}

// Info Request

message InfoRequest {
  string vault_name = 1;
}

message InfoResponse {
  string vault_name = 1;
  bytes body = 2;
}

// Pack Request

message PackRequest {
  string vault_name = 1;
  bytes body = 2;
}

message PackResponse {
  string vault_name = 1;
  bytes body = 2;
}

message PackChunk {
  bytes chunk = 1;
}

message ConnectionMessage {
  string aId = 1;
  string bId = 2;
  string aIp = 3;
  string bIp = 4;
}

message CertificateMessage {
  string cert = 1;
}

message NodeIdMessage {
  string nodeId = 1;
}

message NodeAddressMessage {
  string ip = 1;
  int32 port = 2;
}

message NodeTableMessage {
  map<string, NodeAddressMessage> nodeTable = 1;
}
