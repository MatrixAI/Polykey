syntax = "proto3";

import "polykey/v1/utils/utils.proto";
import "polykey/v1/nodes/nodes.proto";
import "polykey/v1/vaults/vaults.proto";
import "polykey/v1/notifications/notifications.proto";

package polykey.v1;

service AgentService {

  // Echo
  rpc Echo(polykey.v1.utils.EchoMessage) returns (polykey.v1.utils.EchoMessage);

  // Vaults
  rpc VaultsGitInfoGet (polykey.v1.vaults.InfoRequest) returns (stream polykey.v1.vaults.PackChunk);
  rpc VaultsGitPackGet(stream polykey.v1.vaults.PackChunk) returns (stream polykey.v1.vaults.PackChunk);
  rpc VaultsScan (polykey.v1.nodes.Node) returns (stream polykey.v1.vaults.List);

  // Nodes
  rpc NodesClosestLocalNodesGet (polykey.v1.nodes.Node) returns (polykey.v1.nodes.NodeTable);
  rpc NodesClaimsGet (polykey.v1.nodes.ClaimType) returns (polykey.v1.nodes.Claims);
  rpc NodesChainDataGet (polykey.v1.utils.EmptyMessage) returns (polykey.v1.nodes.ChainData);
  rpc NodesHolePunchMessageSend (polykey.v1.nodes.Relay) returns (polykey.v1.utils.EmptyMessage);
  rpc NodesCrossSignClaim (stream polykey.v1.nodes.CrossSign) returns (stream polykey.v1.nodes.CrossSign);

  // Notifications
  rpc NotificationsSend (polykey.v1.notifications.AgentNotification) returns (polykey.v1.utils.EmptyMessage);
}
