{"version":3,"sources":["webpack://browser-client/webpack/universalModuleDefinition","webpack://browser-client/webpack/bootstrap","webpack://browser-client/./src/lib/agent/PolykeyClient.ts","webpack://browser-client/./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack://browser-client/(webpack)/buildin/global.js","webpack://browser-client/external \"base64-js\"","webpack://browser-client/external \"ieee754\"","webpack://browser-client/external \"isarray\"","webpack://browser-client/./proto/js/Agent.js","webpack://browser-client/external \"protobufjs/minimal\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA,8CAAa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,CAAyB;AACjD,OAAO,4lCAA4lC;AACnmC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA,uBAAuB,QAAQ;AAC/B,yDAAyD,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,aAAa;AACpF;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,6DAA6D,iCAAiC;AAC9F;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,sBAAsB;AAC9E;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,wDAAwD,UAAU;AAClE;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA,qDAAqD,UAAU;AAC/D;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,uCAAuC;AAC9F;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,yDAAyD,0BAA0B;AACnF;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA,0DAA0D,0BAA0B;AACpF;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,0DAA0D,uCAAuC;AACjG;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,YAAY;AACtE;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4CAA4C;AACrG;AACA;AACA,yDAAyD,+CAA+C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,4DAA4D,wBAAwB;AACpF;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,wDAAwD,wBAAwB;AAChF;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4CAA4C;AACrG;AACA;AACA,yDAAyD,+CAA+C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/UA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,CAAW;AAChC,cAAc,mBAAO,CAAC,CAAS;AAC/B,cAAc,mBAAO,CAAC,CAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC5vDA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACnBA,sC;;;;;;ACAA,oC;;;;;;ACAA,oC;;;;;;;ACAA;AACa;;AAEb,gBAAgB,mBAAO,CAAC,CAAoB;;AAE5C;AACA;;AAEA;AACA,0EAA0E;;AAE1E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,4BAA4B;AAClD,sBAAsB,aAAa;AACnC,sBAAsB,YAAY;AAClC,sBAAsB,gBAAgB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;;AAEA;AACA,4EAA4E,uCAAuC;AACnH;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,mBAAmB;AACxC,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;;AAEA;AACA,4EAA4E,uCAAuC;AACnH;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,mBAAmB;AACxC,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,qDAAqD;AAC/I;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,iCAAiC;AACtD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,sDAAsD;AACjJ;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,kCAAkC;AACvD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,gDAAgD;AACrI;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,4BAA4B;AACjD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,iDAAiD;AACvI;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,6BAA6B;AAClD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,kDAAkD;AACzI;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,mDAAmD;AAC3I;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,+BAA+B;AACpD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,iDAAiD;AACvI;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,6BAA6B;AAClD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,kDAAkD;AACzI;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,mDAAmD;AAC3I;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,+BAA+B;AACpD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,oDAAoD;AAC7I;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,gCAAgC;AACrD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,oDAAoD;AAC7I;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,gCAAgC;AACrD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,qDAAqD;AAC/I;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,iCAAiC;AACtD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,oDAAoD;AAC7I;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,gCAAgC;AACrD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,qDAAqD;AAC/I;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,iCAAiC;AACtD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,mDAAmD;AAC3I;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,+BAA+B;AACpD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,oDAAoD;AAC7I;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,gCAAgC;AACrD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,iDAAiD;AACvI;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,6BAA6B;AAClD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,kDAAkD;AACzI;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,qDAAqD;AAC/I;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,iCAAiC;AACtD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,sDAAsD;AACjJ;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,kCAAkC;AACvD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,oDAAoD;AAC7I;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,gCAAgC;AACrD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,qDAAqD;AAC/I;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,iCAAiC;AACtD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,gBAAgB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,qDAAqD;AAC/I;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,iCAAiC;AACtD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,sDAAsD;AACjJ;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,kCAAkC;AACvD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,sDAAsD;AACjJ;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,kCAAkC;AACvD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD,qBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,uDAAuD;AACnJ;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,mCAAmC;AACxD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,kDAAkD;AACzI;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,mDAAmD;AAC3I;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,+BAA+B;AACpD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,kDAAkD;AACzI;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,mDAAmD;AAC3I;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,+BAA+B;AACpD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,iDAAiD;AACvI;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,6BAA6B;AAClD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,kDAAkD;AACzI;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;;AAEA;AACA,oFAAoF,+CAA+C;AACnI;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,2BAA2B;AAChD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,gDAAgD;AACrI;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,4BAA4B;AACjD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA,+FAA+F,0DAA0D;AACzJ;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,gGAAgG,2DAA2D;AAC3J;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,gBAAgB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,qDAAqD;AAC/I;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,iCAAiC;AACtD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,sDAAsD;AACjJ;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,kCAAkC;AACvD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,kDAAkD;AACzI;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iCAAiC;AACpD,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,mDAAmD;AAC3I;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,+BAA+B;AACpD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,CAAC;;AAED;;;;;;;ACztIA,+C","file":"browser-client.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"browser-client\"] = factory();\n\telse\n\t\troot[\"browser-client\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Agent_1 = require(\"../../../proto/js/Agent\");\nconst { AgentMessage, AgentMessageType, CreateSecretRequestMessage, CreateSecretResponseMessage, DecryptFileRequestMessage, DecryptFileResponseMessage, DeleteKeyRequestMessage, DeleteKeyResponseMessage, DeriveKeyRequestMessage, DeriveKeyResponseMessage, DestroySecretRequestMessage, DestroySecretResponseMessage, DestroyVaultRequestMessage, DestroyVaultResponseMessage, EncryptFileRequestMessage, EncryptFileResponseMessage, ErrorMessage, GetPrimaryKeyPairRequestMessage, GetPrimaryKeyPairResponseMessage, GetSecretRequestMessage, GetSecretResponseMessage, GetKeyRequestMessage, GetKeyResponseMessage, ListKeysRequestMessage, ListKeysResponseMessage, ListNodesRequestMessage, ListNodesResponseMessage, ListSecretsRequestMessage, ListSecretsResponseMessage, ListVaultsRequestMessage, ListVaultsResponseMessage, NewNodeRequestMessage, NewNodeResponseMessage, NewVaultRequestMessage, NewVaultResponseMessage, RegisterNodeRequestMessage, RegisterNodeResponseMessage, SignFileRequestMessage, SignFileResponseMessage, UpdateSecretRequestMessage, UpdateSecretResponseMessage, VerifyFileRequestMessage, VerifyFileResponseMessage, } = Agent_1.agent;\nclass PolykeyClient {\n    constructor(getStream) {\n        this.getStream = getStream;\n    }\n    async sendRequestToAgent(request) {\n        const stream = this.getStream();\n        const responseList = await new Promise((resolve, reject) => {\n            try {\n                const responseList = [];\n                stream.on('data', (data) => {\n                    if (data instanceof Uint8Array) {\n                        responseList.push(data);\n                    }\n                    else {\n                        responseList.push(...data);\n                    }\n                });\n                stream.on('error', (err) => {\n                    reject(err);\n                });\n                stream.on('end', () => {\n                    resolve(responseList);\n                });\n                if (!stream.writableEnded) {\n                    stream.write(request);\n                }\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n        return responseList;\n    }\n    async handleAgentCommunication(type, nodePath, request) {\n        // Encode message and sent\n        const agentMessage = AgentMessage.encode({\n            type: type,\n            isResponse: false,\n            nodePath: nodePath,\n            subMessage: request,\n        }).finish();\n        const responseList = await this.sendRequestToAgent(agentMessage);\n        const agentMessageList = [];\n        for (const response of responseList.values()) {\n            const { subMessage, type } = AgentMessage.decode(response);\n            if (type == AgentMessageType.ERROR) {\n                const { error } = ErrorMessage.decode(subMessage);\n                const reason = new Error(`Agent Error: ${error}`);\n                throw reason;\n            }\n            else {\n                agentMessageList.push(AgentMessage.decode(response));\n            }\n        }\n        return agentMessageList;\n    }\n    async registerNode(path, passphrase) {\n        var _a;\n        const registerNodeRequest = RegisterNodeRequestMessage.encode({ passphrase }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.REGISTER_NODE, path, registerNodeRequest);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.REGISTER_NODE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = RegisterNodeResponseMessage.decode(subMessage);\n        return successful;\n    }\n    async newNode(path, name, email, passphrase, nbits) {\n        var _a;\n        const newNodeRequest = NewNodeRequestMessage.encode({ name, email, passphrase, nbits }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.NEW_NODE, path, newNodeRequest);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.NEW_NODE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = NewNodeResponseMessage.decode(subMessage);\n        return successful;\n    }\n    async listNodes(unlockedOnly = true) {\n        var _a;\n        const newNodeRequest = ListNodesRequestMessage.encode({ unlockedOnly }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.LIST_NODES, undefined, newNodeRequest);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.LIST_NODES)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { nodes } = ListNodesResponseMessage.decode(subMessage);\n        return nodes;\n    }\n    /////////////////////\n    // Key commands //\n    /////////////////////\n    async deriveKey(nodePath, keyName, passphrase) {\n        var _a;\n        const request = DeriveKeyRequestMessage.encode({ keyName, passphrase }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.DERIVE_KEY, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.DERIVE_KEY)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = DeriveKeyResponseMessage.decode(subMessage);\n        return successful;\n    }\n    async deleteKey(nodePath, keyName) {\n        var _a;\n        const request = DeleteKeyRequestMessage.encode({ keyName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.DELETE_KEY, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.DELETE_KEY)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = DeleteKeyResponseMessage.decode(subMessage);\n        return successful;\n    }\n    async listKeys(nodePath) {\n        var _a;\n        const request = ListKeysRequestMessage.encode({}).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.LIST_KEYS, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.LIST_KEYS)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { keyNames } = ListKeysResponseMessage.decode(subMessage);\n        return keyNames;\n    }\n    async getKey(nodePath, keyName) {\n        var _a;\n        const request = GetKeyRequestMessage.encode({ keyName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.GET_KEY, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.GET_KEY)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { keyContent } = GetKeyResponseMessage.decode(subMessage);\n        return keyContent;\n    }\n    async getPrimaryKeyPair(nodePath, includePrivateKey = false) {\n        var _a;\n        const request = GetPrimaryKeyPairRequestMessage.encode({ includePrivateKey }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.GET_PRIMARY_KEYPAIR, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.GET_PRIMARY_KEYPAIR)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { publicKey, privateKey } = GetPrimaryKeyPairResponseMessage.decode(subMessage);\n        return { publicKey, privateKey };\n    }\n    /////////////////////\n    // Crypto commands //\n    /////////////////////\n    async signFile(nodePath, filePath, privateKeyPath, passphrase) {\n        var _a;\n        const request = SignFileRequestMessage.encode({ filePath, privateKeyPath, passphrase }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.SIGN_FILE, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.SIGN_FILE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { signaturePath } = SignFileResponseMessage.decode(subMessage);\n        return signaturePath;\n    }\n    async verifyFile(nodePath, filePath, publicKeyPath) {\n        var _a;\n        const request = VerifyFileRequestMessage.encode({ filePath, publicKeyPath }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.VERIFY_FILE, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.VERIFY_FILE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { verified } = VerifyFileResponseMessage.decode(subMessage);\n        return verified;\n    }\n    async encryptFile(nodePath, filePath, publicKeyPath) {\n        var _a;\n        const request = EncryptFileRequestMessage.encode({ filePath, publicKeyPath }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.ENCRYPT_FILE, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.ENCRYPT_FILE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { encryptedPath } = EncryptFileResponseMessage.decode(subMessage);\n        return encryptedPath;\n    }\n    async decryptFile(nodePath, filePath, privateKeyPath, passphrase) {\n        var _a;\n        const request = DecryptFileRequestMessage.encode({ filePath, privateKeyPath, passphrase }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.DECRYPT_FILE, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.DECRYPT_FILE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { decryptedPath } = DecryptFileResponseMessage.decode(subMessage);\n        return decryptedPath;\n    }\n    //////////////////////\n    // Vault Operations //\n    //////////////////////\n    async listVaults(nodePath) {\n        var _a;\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.LIST_VAULTS, nodePath);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.LIST_VAULTS)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { vaultNames } = ListVaultsResponseMessage.decode(subMessage);\n        return vaultNames;\n    }\n    async newVault(nodePath, vaultName) {\n        var _a;\n        const request = NewVaultRequestMessage.encode({ vaultName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.NEW_VAULT, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.NEW_VAULT)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = NewVaultResponseMessage.decode(subMessage);\n        return successful;\n    }\n    async destroyVault(nodePath, vaultName) {\n        var _a;\n        const request = DestroyVaultRequestMessage.encode({ vaultName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.DESTROY_VAULT, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.DESTROY_VAULT)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = DestroyVaultResponseMessage.decode(subMessage);\n        return successful;\n    }\n    ///////////////////////\n    // Secret Operations //\n    ///////////////////////\n    async listSecrets(nodePath, vaultName) {\n        var _a;\n        const request = ListSecretsRequestMessage.encode({ vaultName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.LIST_SECRETS, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.LIST_SECRETS)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { secretNames } = ListSecretsResponseMessage.decode(subMessage);\n        return secretNames;\n    }\n    async createSecret(nodePath, vaultName, secretName, secret) {\n        var _a;\n        let request;\n        if (typeof secret == 'string') {\n            request = CreateSecretRequestMessage.encode({ vaultName, secretName, secretPath: secret }).finish();\n        }\n        else {\n            request = CreateSecretRequestMessage.encode({ vaultName, secretName, secretContent: secret }).finish();\n        }\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.CREATE_SECRET, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.CREATE_SECRET)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = CreateSecretResponseMessage.decode(subMessage);\n        return successful;\n    }\n    async destroySecret(nodePath, vaultName, secretName) {\n        var _a;\n        const request = DestroySecretRequestMessage.encode({ vaultName, secretName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.DESTROY_SECRET, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.DESTROY_SECRET)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = DestroySecretResponseMessage.decode(subMessage);\n        return successful;\n    }\n    async getSecret(nodePath, vaultName, secretName) {\n        var _a;\n        const request = GetSecretRequestMessage.encode({ vaultName, secretName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.GET_SECRET, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.GET_SECRET)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { secret } = GetSecretResponseMessage.decode(subMessage);\n        return Buffer.from(secret);\n    }\n    async updateSecret(nodePath, vaultName, secretName, secret) {\n        var _a;\n        let request;\n        if (typeof secret == 'string') {\n            request = UpdateSecretRequestMessage.encode({ vaultName, secretName, secretPath: secret }).finish();\n        }\n        else {\n            request = UpdateSecretRequestMessage.encode({ vaultName, secretName, secretContent: secret }).finish();\n        }\n        const encodedResponse = await this.handleAgentCommunication(AgentMessageType.UPDATE_SECRET, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.UPDATE_SECRET)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = UpdateSecretResponseMessage.decode(subMessage);\n        return successful;\n    }\n    ///////////////////\n    // Agent control //\n    ///////////////////\n    async getAgentStatus() {\n        var _a;\n        try {\n            const encodedResponse = await this.handleAgentCommunication(AgentMessageType.STATUS);\n            const subMessage = (_a = encodedResponse.find((r) => r.type == AgentMessageType.STATUS)) === null || _a === void 0 ? void 0 : _a.subMessage;\n            if (!subMessage) {\n                throw Error('agent did not respond');\n            }\n            const status = Buffer.from(subMessage).toString();\n            return status;\n        }\n        catch (err) {\n            if (err.toString().match(/ECONNRESET|ENOENT|ECONNRESET/)) {\n                return 'stopped';\n            }\n            throw err;\n        }\n    }\n    async stopAgent() {\n        try {\n            // Tell it to start shutting and wait for response\n            await this.handleAgentCommunication(AgentMessageType.STOP_AGENT);\n            return true;\n        }\n        catch (err) {\n            return (await this.getAgentStatus()) != 'online';\n        }\n    }\n}\nexports.default = PolykeyClient;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = require(\"base64-js\");","module.exports = require(\"ieee754\");","module.exports = require(\"isarray\");","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.agent = (function() {\n\n    /**\n     * Namespace agent.\n     * @exports agent\n     * @namespace\n     */\n    var agent = {};\n\n    /**\n     * AgentMessageType enum.\n     * @name agent.AgentMessageType\n     * @enum {number}\n     * @property {number} ERROR=0 ERROR value\n     * @property {number} STOP_AGENT=1 STOP_AGENT value\n     * @property {number} STATUS=2 STATUS value\n     * @property {number} REGISTER_NODE=3 REGISTER_NODE value\n     * @property {number} NEW_NODE=4 NEW_NODE value\n     * @property {number} LIST_NODES=5 LIST_NODES value\n     * @property {number} DERIVE_KEY=6 DERIVE_KEY value\n     * @property {number} SIGN_FILE=7 SIGN_FILE value\n     * @property {number} VERIFY_FILE=8 VERIFY_FILE value\n     * @property {number} LIST_VAULTS=9 LIST_VAULTS value\n     * @property {number} NEW_VAULT=10 NEW_VAULT value\n     * @property {number} DESTROY_VAULT=11 DESTROY_VAULT value\n     * @property {number} LIST_SECRETS=12 LIST_SECRETS value\n     * @property {number} CREATE_SECRET=13 CREATE_SECRET value\n     * @property {number} DESTROY_SECRET=14 DESTROY_SECRET value\n     * @property {number} GET_SECRET=15 GET_SECRET value\n     * @property {number} LIST_KEYS=16 LIST_KEYS value\n     * @property {number} GET_KEY=17 GET_KEY value\n     * @property {number} DELETE_KEY=18 DELETE_KEY value\n     * @property {number} ENCRYPT_FILE=19 ENCRYPT_FILE value\n     * @property {number} DECRYPT_FILE=20 DECRYPT_FILE value\n     * @property {number} GET_PRIMARY_KEYPAIR=21 GET_PRIMARY_KEYPAIR value\n     * @property {number} UPDATE_SECRET=22 UPDATE_SECRET value\n     */\n    agent.AgentMessageType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"ERROR\"] = 0;\n        values[valuesById[1] = \"STOP_AGENT\"] = 1;\n        values[valuesById[2] = \"STATUS\"] = 2;\n        values[valuesById[3] = \"REGISTER_NODE\"] = 3;\n        values[valuesById[4] = \"NEW_NODE\"] = 4;\n        values[valuesById[5] = \"LIST_NODES\"] = 5;\n        values[valuesById[6] = \"DERIVE_KEY\"] = 6;\n        values[valuesById[7] = \"SIGN_FILE\"] = 7;\n        values[valuesById[8] = \"VERIFY_FILE\"] = 8;\n        values[valuesById[9] = \"LIST_VAULTS\"] = 9;\n        values[valuesById[10] = \"NEW_VAULT\"] = 10;\n        values[valuesById[11] = \"DESTROY_VAULT\"] = 11;\n        values[valuesById[12] = \"LIST_SECRETS\"] = 12;\n        values[valuesById[13] = \"CREATE_SECRET\"] = 13;\n        values[valuesById[14] = \"DESTROY_SECRET\"] = 14;\n        values[valuesById[15] = \"GET_SECRET\"] = 15;\n        values[valuesById[16] = \"LIST_KEYS\"] = 16;\n        values[valuesById[17] = \"GET_KEY\"] = 17;\n        values[valuesById[18] = \"DELETE_KEY\"] = 18;\n        values[valuesById[19] = \"ENCRYPT_FILE\"] = 19;\n        values[valuesById[20] = \"DECRYPT_FILE\"] = 20;\n        values[valuesById[21] = \"GET_PRIMARY_KEYPAIR\"] = 21;\n        values[valuesById[22] = \"UPDATE_SECRET\"] = 22;\n        return values;\n    })();\n\n    agent.AgentMessage = (function() {\n\n        /**\n         * Properties of an AgentMessage.\n         * @memberof agent\n         * @interface IAgentMessage\n         * @property {agent.AgentMessageType|null} [type] AgentMessage type\n         * @property {boolean|null} [isResponse] AgentMessage isResponse\n         * @property {string|null} [nodePath] AgentMessage nodePath\n         * @property {Uint8Array|null} [subMessage] AgentMessage subMessage\n         */\n\n        /**\n         * Constructs a new AgentMessage.\n         * @memberof agent\n         * @classdesc Represents an AgentMessage.\n         * @implements IAgentMessage\n         * @constructor\n         * @param {agent.IAgentMessage=} [p] Properties to set\n         */\n        function AgentMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * AgentMessage type.\n         * @member {agent.AgentMessageType} type\n         * @memberof agent.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.type = 0;\n\n        /**\n         * AgentMessage isResponse.\n         * @member {boolean} isResponse\n         * @memberof agent.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.isResponse = false;\n\n        /**\n         * AgentMessage nodePath.\n         * @member {string} nodePath\n         * @memberof agent.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.nodePath = \"\";\n\n        /**\n         * AgentMessage subMessage.\n         * @member {Uint8Array} subMessage\n         * @memberof agent.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.subMessage = $util.newBuffer([]);\n\n        /**\n         * Creates a new AgentMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.AgentMessage\n         * @static\n         * @param {agent.IAgentMessage=} [properties] Properties to set\n         * @returns {agent.AgentMessage} AgentMessage instance\n         */\n        AgentMessage.create = function create(properties) {\n            return new AgentMessage(properties);\n        };\n\n        /**\n         * Encodes the specified AgentMessage message. Does not implicitly {@link agent.AgentMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.AgentMessage\n         * @static\n         * @param {agent.IAgentMessage} m AgentMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AgentMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.type != null && Object.hasOwnProperty.call(m, \"type\"))\n                w.uint32(8).int32(m.type);\n            if (m.isResponse != null && Object.hasOwnProperty.call(m, \"isResponse\"))\n                w.uint32(16).bool(m.isResponse);\n            if (m.nodePath != null && Object.hasOwnProperty.call(m, \"nodePath\"))\n                w.uint32(26).string(m.nodePath);\n            if (m.subMessage != null && Object.hasOwnProperty.call(m, \"subMessage\"))\n                w.uint32(34).bytes(m.subMessage);\n            return w;\n        };\n\n        /**\n         * Decodes an AgentMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.AgentMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.AgentMessage} AgentMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AgentMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.AgentMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.type = r.int32();\n                    break;\n                case 2:\n                    m.isResponse = r.bool();\n                    break;\n                case 3:\n                    m.nodePath = r.string();\n                    break;\n                case 4:\n                    m.subMessage = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return AgentMessage;\n    })();\n\n    agent.ErrorMessage = (function() {\n\n        /**\n         * Properties of an ErrorMessage.\n         * @memberof agent\n         * @interface IErrorMessage\n         * @property {string|null} [error] ErrorMessage error\n         */\n\n        /**\n         * Constructs a new ErrorMessage.\n         * @memberof agent\n         * @classdesc Represents an ErrorMessage.\n         * @implements IErrorMessage\n         * @constructor\n         * @param {agent.IErrorMessage=} [p] Properties to set\n         */\n        function ErrorMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ErrorMessage error.\n         * @member {string} error\n         * @memberof agent.ErrorMessage\n         * @instance\n         */\n        ErrorMessage.prototype.error = \"\";\n\n        /**\n         * Creates a new ErrorMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ErrorMessage\n         * @static\n         * @param {agent.IErrorMessage=} [properties] Properties to set\n         * @returns {agent.ErrorMessage} ErrorMessage instance\n         */\n        ErrorMessage.create = function create(properties) {\n            return new ErrorMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ErrorMessage message. Does not implicitly {@link agent.ErrorMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ErrorMessage\n         * @static\n         * @param {agent.IErrorMessage} m ErrorMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.error != null && Object.hasOwnProperty.call(m, \"error\"))\n                w.uint32(10).string(m.error);\n            return w;\n        };\n\n        /**\n         * Decodes an ErrorMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ErrorMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ErrorMessage} ErrorMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ErrorMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.error = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ErrorMessage;\n    })();\n\n    agent.RegisterNodeRequestMessage = (function() {\n\n        /**\n         * Properties of a RegisterNodeRequestMessage.\n         * @memberof agent\n         * @interface IRegisterNodeRequestMessage\n         * @property {string|null} [passphrase] RegisterNodeRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new RegisterNodeRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a RegisterNodeRequestMessage.\n         * @implements IRegisterNodeRequestMessage\n         * @constructor\n         * @param {agent.IRegisterNodeRequestMessage=} [p] Properties to set\n         */\n        function RegisterNodeRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RegisterNodeRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agent.RegisterNodeRequestMessage\n         * @instance\n         */\n        RegisterNodeRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new RegisterNodeRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.RegisterNodeRequestMessage\n         * @static\n         * @param {agent.IRegisterNodeRequestMessage=} [properties] Properties to set\n         * @returns {agent.RegisterNodeRequestMessage} RegisterNodeRequestMessage instance\n         */\n        RegisterNodeRequestMessage.create = function create(properties) {\n            return new RegisterNodeRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified RegisterNodeRequestMessage message. Does not implicitly {@link agent.RegisterNodeRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.RegisterNodeRequestMessage\n         * @static\n         * @param {agent.IRegisterNodeRequestMessage} m RegisterNodeRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RegisterNodeRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(10).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Decodes a RegisterNodeRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.RegisterNodeRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.RegisterNodeRequestMessage} RegisterNodeRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RegisterNodeRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.RegisterNodeRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return RegisterNodeRequestMessage;\n    })();\n\n    agent.RegisterNodeResponseMessage = (function() {\n\n        /**\n         * Properties of a RegisterNodeResponseMessage.\n         * @memberof agent\n         * @interface IRegisterNodeResponseMessage\n         * @property {boolean|null} [successful] RegisterNodeResponseMessage successful\n         */\n\n        /**\n         * Constructs a new RegisterNodeResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a RegisterNodeResponseMessage.\n         * @implements IRegisterNodeResponseMessage\n         * @constructor\n         * @param {agent.IRegisterNodeResponseMessage=} [p] Properties to set\n         */\n        function RegisterNodeResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RegisterNodeResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.RegisterNodeResponseMessage\n         * @instance\n         */\n        RegisterNodeResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new RegisterNodeResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.RegisterNodeResponseMessage\n         * @static\n         * @param {agent.IRegisterNodeResponseMessage=} [properties] Properties to set\n         * @returns {agent.RegisterNodeResponseMessage} RegisterNodeResponseMessage instance\n         */\n        RegisterNodeResponseMessage.create = function create(properties) {\n            return new RegisterNodeResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified RegisterNodeResponseMessage message. Does not implicitly {@link agent.RegisterNodeResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.RegisterNodeResponseMessage\n         * @static\n         * @param {agent.IRegisterNodeResponseMessage} m RegisterNodeResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RegisterNodeResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a RegisterNodeResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.RegisterNodeResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.RegisterNodeResponseMessage} RegisterNodeResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RegisterNodeResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.RegisterNodeResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return RegisterNodeResponseMessage;\n    })();\n\n    agent.NewNodeRequestMessage = (function() {\n\n        /**\n         * Properties of a NewNodeRequestMessage.\n         * @memberof agent\n         * @interface INewNodeRequestMessage\n         * @property {string|null} [name] NewNodeRequestMessage name\n         * @property {string|null} [email] NewNodeRequestMessage email\n         * @property {string|null} [passphrase] NewNodeRequestMessage passphrase\n         * @property {number|null} [nbits] NewNodeRequestMessage nbits\n         */\n\n        /**\n         * Constructs a new NewNodeRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a NewNodeRequestMessage.\n         * @implements INewNodeRequestMessage\n         * @constructor\n         * @param {agent.INewNodeRequestMessage=} [p] Properties to set\n         */\n        function NewNodeRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewNodeRequestMessage name.\n         * @member {string} name\n         * @memberof agent.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.name = \"\";\n\n        /**\n         * NewNodeRequestMessage email.\n         * @member {string} email\n         * @memberof agent.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.email = \"\";\n\n        /**\n         * NewNodeRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agent.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * NewNodeRequestMessage nbits.\n         * @member {number} nbits\n         * @memberof agent.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.nbits = 0;\n\n        /**\n         * Creates a new NewNodeRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.NewNodeRequestMessage\n         * @static\n         * @param {agent.INewNodeRequestMessage=} [properties] Properties to set\n         * @returns {agent.NewNodeRequestMessage} NewNodeRequestMessage instance\n         */\n        NewNodeRequestMessage.create = function create(properties) {\n            return new NewNodeRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewNodeRequestMessage message. Does not implicitly {@link agent.NewNodeRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.NewNodeRequestMessage\n         * @static\n         * @param {agent.INewNodeRequestMessage} m NewNodeRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewNodeRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.name != null && Object.hasOwnProperty.call(m, \"name\"))\n                w.uint32(10).string(m.name);\n            if (m.email != null && Object.hasOwnProperty.call(m, \"email\"))\n                w.uint32(18).string(m.email);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(26).string(m.passphrase);\n            if (m.nbits != null && Object.hasOwnProperty.call(m, \"nbits\"))\n                w.uint32(32).int32(m.nbits);\n            return w;\n        };\n\n        /**\n         * Decodes a NewNodeRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.NewNodeRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.NewNodeRequestMessage} NewNodeRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewNodeRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.NewNodeRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.name = r.string();\n                    break;\n                case 2:\n                    m.email = r.string();\n                    break;\n                case 3:\n                    m.passphrase = r.string();\n                    break;\n                case 4:\n                    m.nbits = r.int32();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NewNodeRequestMessage;\n    })();\n\n    agent.NewNodeResponseMessage = (function() {\n\n        /**\n         * Properties of a NewNodeResponseMessage.\n         * @memberof agent\n         * @interface INewNodeResponseMessage\n         * @property {boolean|null} [successful] NewNodeResponseMessage successful\n         */\n\n        /**\n         * Constructs a new NewNodeResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a NewNodeResponseMessage.\n         * @implements INewNodeResponseMessage\n         * @constructor\n         * @param {agent.INewNodeResponseMessage=} [p] Properties to set\n         */\n        function NewNodeResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewNodeResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.NewNodeResponseMessage\n         * @instance\n         */\n        NewNodeResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new NewNodeResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.NewNodeResponseMessage\n         * @static\n         * @param {agent.INewNodeResponseMessage=} [properties] Properties to set\n         * @returns {agent.NewNodeResponseMessage} NewNodeResponseMessage instance\n         */\n        NewNodeResponseMessage.create = function create(properties) {\n            return new NewNodeResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewNodeResponseMessage message. Does not implicitly {@link agent.NewNodeResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.NewNodeResponseMessage\n         * @static\n         * @param {agent.INewNodeResponseMessage} m NewNodeResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewNodeResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a NewNodeResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.NewNodeResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.NewNodeResponseMessage} NewNodeResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewNodeResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.NewNodeResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NewNodeResponseMessage;\n    })();\n\n    agent.ListNodesRequestMessage = (function() {\n\n        /**\n         * Properties of a ListNodesRequestMessage.\n         * @memberof agent\n         * @interface IListNodesRequestMessage\n         * @property {boolean|null} [unlockedOnly] ListNodesRequestMessage unlockedOnly\n         */\n\n        /**\n         * Constructs a new ListNodesRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a ListNodesRequestMessage.\n         * @implements IListNodesRequestMessage\n         * @constructor\n         * @param {agent.IListNodesRequestMessage=} [p] Properties to set\n         */\n        function ListNodesRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListNodesRequestMessage unlockedOnly.\n         * @member {boolean} unlockedOnly\n         * @memberof agent.ListNodesRequestMessage\n         * @instance\n         */\n        ListNodesRequestMessage.prototype.unlockedOnly = false;\n\n        /**\n         * Creates a new ListNodesRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListNodesRequestMessage\n         * @static\n         * @param {agent.IListNodesRequestMessage=} [properties] Properties to set\n         * @returns {agent.ListNodesRequestMessage} ListNodesRequestMessage instance\n         */\n        ListNodesRequestMessage.create = function create(properties) {\n            return new ListNodesRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListNodesRequestMessage message. Does not implicitly {@link agent.ListNodesRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListNodesRequestMessage\n         * @static\n         * @param {agent.IListNodesRequestMessage} m ListNodesRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListNodesRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.unlockedOnly != null && Object.hasOwnProperty.call(m, \"unlockedOnly\"))\n                w.uint32(8).bool(m.unlockedOnly);\n            return w;\n        };\n\n        /**\n         * Decodes a ListNodesRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListNodesRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListNodesRequestMessage} ListNodesRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListNodesRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListNodesRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.unlockedOnly = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListNodesRequestMessage;\n    })();\n\n    agent.ListNodesResponseMessage = (function() {\n\n        /**\n         * Properties of a ListNodesResponseMessage.\n         * @memberof agent\n         * @interface IListNodesResponseMessage\n         * @property {Array.<string>|null} [nodes] ListNodesResponseMessage nodes\n         */\n\n        /**\n         * Constructs a new ListNodesResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a ListNodesResponseMessage.\n         * @implements IListNodesResponseMessage\n         * @constructor\n         * @param {agent.IListNodesResponseMessage=} [p] Properties to set\n         */\n        function ListNodesResponseMessage(p) {\n            this.nodes = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListNodesResponseMessage nodes.\n         * @member {Array.<string>} nodes\n         * @memberof agent.ListNodesResponseMessage\n         * @instance\n         */\n        ListNodesResponseMessage.prototype.nodes = $util.emptyArray;\n\n        /**\n         * Creates a new ListNodesResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListNodesResponseMessage\n         * @static\n         * @param {agent.IListNodesResponseMessage=} [properties] Properties to set\n         * @returns {agent.ListNodesResponseMessage} ListNodesResponseMessage instance\n         */\n        ListNodesResponseMessage.create = function create(properties) {\n            return new ListNodesResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListNodesResponseMessage message. Does not implicitly {@link agent.ListNodesResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListNodesResponseMessage\n         * @static\n         * @param {agent.IListNodesResponseMessage} m ListNodesResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListNodesResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.nodes != null && m.nodes.length) {\n                for (var i = 0; i < m.nodes.length; ++i)\n                    w.uint32(10).string(m.nodes[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Decodes a ListNodesResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListNodesResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListNodesResponseMessage} ListNodesResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListNodesResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListNodesResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.nodes && m.nodes.length))\n                        m.nodes = [];\n                    m.nodes.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListNodesResponseMessage;\n    })();\n\n    agent.SignFileRequestMessage = (function() {\n\n        /**\n         * Properties of a SignFileRequestMessage.\n         * @memberof agent\n         * @interface ISignFileRequestMessage\n         * @property {string|null} [filePath] SignFileRequestMessage filePath\n         * @property {string|null} [privateKeyPath] SignFileRequestMessage privateKeyPath\n         * @property {string|null} [passphrase] SignFileRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new SignFileRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a SignFileRequestMessage.\n         * @implements ISignFileRequestMessage\n         * @constructor\n         * @param {agent.ISignFileRequestMessage=} [p] Properties to set\n         */\n        function SignFileRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * SignFileRequestMessage filePath.\n         * @member {string} filePath\n         * @memberof agent.SignFileRequestMessage\n         * @instance\n         */\n        SignFileRequestMessage.prototype.filePath = \"\";\n\n        /**\n         * SignFileRequestMessage privateKeyPath.\n         * @member {string} privateKeyPath\n         * @memberof agent.SignFileRequestMessage\n         * @instance\n         */\n        SignFileRequestMessage.prototype.privateKeyPath = \"\";\n\n        /**\n         * SignFileRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agent.SignFileRequestMessage\n         * @instance\n         */\n        SignFileRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new SignFileRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.SignFileRequestMessage\n         * @static\n         * @param {agent.ISignFileRequestMessage=} [properties] Properties to set\n         * @returns {agent.SignFileRequestMessage} SignFileRequestMessage instance\n         */\n        SignFileRequestMessage.create = function create(properties) {\n            return new SignFileRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified SignFileRequestMessage message. Does not implicitly {@link agent.SignFileRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.SignFileRequestMessage\n         * @static\n         * @param {agent.ISignFileRequestMessage} m SignFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SignFileRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.filePath != null && Object.hasOwnProperty.call(m, \"filePath\"))\n                w.uint32(10).string(m.filePath);\n            if (m.privateKeyPath != null && Object.hasOwnProperty.call(m, \"privateKeyPath\"))\n                w.uint32(18).string(m.privateKeyPath);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(26).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Decodes a SignFileRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.SignFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.SignFileRequestMessage} SignFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SignFileRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.SignFileRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filePath = r.string();\n                    break;\n                case 2:\n                    m.privateKeyPath = r.string();\n                    break;\n                case 3:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return SignFileRequestMessage;\n    })();\n\n    agent.SignFileResponseMessage = (function() {\n\n        /**\n         * Properties of a SignFileResponseMessage.\n         * @memberof agent\n         * @interface ISignFileResponseMessage\n         * @property {string|null} [signaturePath] SignFileResponseMessage signaturePath\n         */\n\n        /**\n         * Constructs a new SignFileResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a SignFileResponseMessage.\n         * @implements ISignFileResponseMessage\n         * @constructor\n         * @param {agent.ISignFileResponseMessage=} [p] Properties to set\n         */\n        function SignFileResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * SignFileResponseMessage signaturePath.\n         * @member {string} signaturePath\n         * @memberof agent.SignFileResponseMessage\n         * @instance\n         */\n        SignFileResponseMessage.prototype.signaturePath = \"\";\n\n        /**\n         * Creates a new SignFileResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.SignFileResponseMessage\n         * @static\n         * @param {agent.ISignFileResponseMessage=} [properties] Properties to set\n         * @returns {agent.SignFileResponseMessage} SignFileResponseMessage instance\n         */\n        SignFileResponseMessage.create = function create(properties) {\n            return new SignFileResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified SignFileResponseMessage message. Does not implicitly {@link agent.SignFileResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.SignFileResponseMessage\n         * @static\n         * @param {agent.ISignFileResponseMessage} m SignFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SignFileResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.signaturePath != null && Object.hasOwnProperty.call(m, \"signaturePath\"))\n                w.uint32(10).string(m.signaturePath);\n            return w;\n        };\n\n        /**\n         * Decodes a SignFileResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.SignFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.SignFileResponseMessage} SignFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SignFileResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.SignFileResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.signaturePath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return SignFileResponseMessage;\n    })();\n\n    agent.VerifyFileRequestMessage = (function() {\n\n        /**\n         * Properties of a VerifyFileRequestMessage.\n         * @memberof agent\n         * @interface IVerifyFileRequestMessage\n         * @property {string|null} [filePath] VerifyFileRequestMessage filePath\n         * @property {string|null} [publicKeyPath] VerifyFileRequestMessage publicKeyPath\n         */\n\n        /**\n         * Constructs a new VerifyFileRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a VerifyFileRequestMessage.\n         * @implements IVerifyFileRequestMessage\n         * @constructor\n         * @param {agent.IVerifyFileRequestMessage=} [p] Properties to set\n         */\n        function VerifyFileRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * VerifyFileRequestMessage filePath.\n         * @member {string} filePath\n         * @memberof agent.VerifyFileRequestMessage\n         * @instance\n         */\n        VerifyFileRequestMessage.prototype.filePath = \"\";\n\n        /**\n         * VerifyFileRequestMessage publicKeyPath.\n         * @member {string} publicKeyPath\n         * @memberof agent.VerifyFileRequestMessage\n         * @instance\n         */\n        VerifyFileRequestMessage.prototype.publicKeyPath = \"\";\n\n        /**\n         * Creates a new VerifyFileRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.VerifyFileRequestMessage\n         * @static\n         * @param {agent.IVerifyFileRequestMessage=} [properties] Properties to set\n         * @returns {agent.VerifyFileRequestMessage} VerifyFileRequestMessage instance\n         */\n        VerifyFileRequestMessage.create = function create(properties) {\n            return new VerifyFileRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified VerifyFileRequestMessage message. Does not implicitly {@link agent.VerifyFileRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.VerifyFileRequestMessage\n         * @static\n         * @param {agent.IVerifyFileRequestMessage} m VerifyFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        VerifyFileRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.filePath != null && Object.hasOwnProperty.call(m, \"filePath\"))\n                w.uint32(10).string(m.filePath);\n            if (m.publicKeyPath != null && Object.hasOwnProperty.call(m, \"publicKeyPath\"))\n                w.uint32(18).string(m.publicKeyPath);\n            return w;\n        };\n\n        /**\n         * Decodes a VerifyFileRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.VerifyFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.VerifyFileRequestMessage} VerifyFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        VerifyFileRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.VerifyFileRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filePath = r.string();\n                    break;\n                case 2:\n                    m.publicKeyPath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return VerifyFileRequestMessage;\n    })();\n\n    agent.VerifyFileResponseMessage = (function() {\n\n        /**\n         * Properties of a VerifyFileResponseMessage.\n         * @memberof agent\n         * @interface IVerifyFileResponseMessage\n         * @property {boolean|null} [verified] VerifyFileResponseMessage verified\n         */\n\n        /**\n         * Constructs a new VerifyFileResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a VerifyFileResponseMessage.\n         * @implements IVerifyFileResponseMessage\n         * @constructor\n         * @param {agent.IVerifyFileResponseMessage=} [p] Properties to set\n         */\n        function VerifyFileResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * VerifyFileResponseMessage verified.\n         * @member {boolean} verified\n         * @memberof agent.VerifyFileResponseMessage\n         * @instance\n         */\n        VerifyFileResponseMessage.prototype.verified = false;\n\n        /**\n         * Creates a new VerifyFileResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.VerifyFileResponseMessage\n         * @static\n         * @param {agent.IVerifyFileResponseMessage=} [properties] Properties to set\n         * @returns {agent.VerifyFileResponseMessage} VerifyFileResponseMessage instance\n         */\n        VerifyFileResponseMessage.create = function create(properties) {\n            return new VerifyFileResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified VerifyFileResponseMessage message. Does not implicitly {@link agent.VerifyFileResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.VerifyFileResponseMessage\n         * @static\n         * @param {agent.IVerifyFileResponseMessage} m VerifyFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        VerifyFileResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.verified != null && Object.hasOwnProperty.call(m, \"verified\"))\n                w.uint32(8).bool(m.verified);\n            return w;\n        };\n\n        /**\n         * Decodes a VerifyFileResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.VerifyFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.VerifyFileResponseMessage} VerifyFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        VerifyFileResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.VerifyFileResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.verified = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return VerifyFileResponseMessage;\n    })();\n\n    agent.EncryptFileRequestMessage = (function() {\n\n        /**\n         * Properties of an EncryptFileRequestMessage.\n         * @memberof agent\n         * @interface IEncryptFileRequestMessage\n         * @property {string|null} [filePath] EncryptFileRequestMessage filePath\n         * @property {string|null} [publicKeyPath] EncryptFileRequestMessage publicKeyPath\n         */\n\n        /**\n         * Constructs a new EncryptFileRequestMessage.\n         * @memberof agent\n         * @classdesc Represents an EncryptFileRequestMessage.\n         * @implements IEncryptFileRequestMessage\n         * @constructor\n         * @param {agent.IEncryptFileRequestMessage=} [p] Properties to set\n         */\n        function EncryptFileRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * EncryptFileRequestMessage filePath.\n         * @member {string} filePath\n         * @memberof agent.EncryptFileRequestMessage\n         * @instance\n         */\n        EncryptFileRequestMessage.prototype.filePath = \"\";\n\n        /**\n         * EncryptFileRequestMessage publicKeyPath.\n         * @member {string} publicKeyPath\n         * @memberof agent.EncryptFileRequestMessage\n         * @instance\n         */\n        EncryptFileRequestMessage.prototype.publicKeyPath = \"\";\n\n        /**\n         * Creates a new EncryptFileRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.EncryptFileRequestMessage\n         * @static\n         * @param {agent.IEncryptFileRequestMessage=} [properties] Properties to set\n         * @returns {agent.EncryptFileRequestMessage} EncryptFileRequestMessage instance\n         */\n        EncryptFileRequestMessage.create = function create(properties) {\n            return new EncryptFileRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified EncryptFileRequestMessage message. Does not implicitly {@link agent.EncryptFileRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.EncryptFileRequestMessage\n         * @static\n         * @param {agent.IEncryptFileRequestMessage} m EncryptFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EncryptFileRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.filePath != null && Object.hasOwnProperty.call(m, \"filePath\"))\n                w.uint32(10).string(m.filePath);\n            if (m.publicKeyPath != null && Object.hasOwnProperty.call(m, \"publicKeyPath\"))\n                w.uint32(18).string(m.publicKeyPath);\n            return w;\n        };\n\n        /**\n         * Decodes an EncryptFileRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.EncryptFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.EncryptFileRequestMessage} EncryptFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EncryptFileRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.EncryptFileRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filePath = r.string();\n                    break;\n                case 2:\n                    m.publicKeyPath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return EncryptFileRequestMessage;\n    })();\n\n    agent.EncryptFileResponseMessage = (function() {\n\n        /**\n         * Properties of an EncryptFileResponseMessage.\n         * @memberof agent\n         * @interface IEncryptFileResponseMessage\n         * @property {string|null} [encryptedPath] EncryptFileResponseMessage encryptedPath\n         */\n\n        /**\n         * Constructs a new EncryptFileResponseMessage.\n         * @memberof agent\n         * @classdesc Represents an EncryptFileResponseMessage.\n         * @implements IEncryptFileResponseMessage\n         * @constructor\n         * @param {agent.IEncryptFileResponseMessage=} [p] Properties to set\n         */\n        function EncryptFileResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * EncryptFileResponseMessage encryptedPath.\n         * @member {string} encryptedPath\n         * @memberof agent.EncryptFileResponseMessage\n         * @instance\n         */\n        EncryptFileResponseMessage.prototype.encryptedPath = \"\";\n\n        /**\n         * Creates a new EncryptFileResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.EncryptFileResponseMessage\n         * @static\n         * @param {agent.IEncryptFileResponseMessage=} [properties] Properties to set\n         * @returns {agent.EncryptFileResponseMessage} EncryptFileResponseMessage instance\n         */\n        EncryptFileResponseMessage.create = function create(properties) {\n            return new EncryptFileResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified EncryptFileResponseMessage message. Does not implicitly {@link agent.EncryptFileResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.EncryptFileResponseMessage\n         * @static\n         * @param {agent.IEncryptFileResponseMessage} m EncryptFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EncryptFileResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.encryptedPath != null && Object.hasOwnProperty.call(m, \"encryptedPath\"))\n                w.uint32(10).string(m.encryptedPath);\n            return w;\n        };\n\n        /**\n         * Decodes an EncryptFileResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.EncryptFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.EncryptFileResponseMessage} EncryptFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EncryptFileResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.EncryptFileResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.encryptedPath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return EncryptFileResponseMessage;\n    })();\n\n    agent.DecryptFileRequestMessage = (function() {\n\n        /**\n         * Properties of a DecryptFileRequestMessage.\n         * @memberof agent\n         * @interface IDecryptFileRequestMessage\n         * @property {string|null} [filePath] DecryptFileRequestMessage filePath\n         * @property {string|null} [privateKeyPath] DecryptFileRequestMessage privateKeyPath\n         * @property {string|null} [passphrase] DecryptFileRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new DecryptFileRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a DecryptFileRequestMessage.\n         * @implements IDecryptFileRequestMessage\n         * @constructor\n         * @param {agent.IDecryptFileRequestMessage=} [p] Properties to set\n         */\n        function DecryptFileRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DecryptFileRequestMessage filePath.\n         * @member {string} filePath\n         * @memberof agent.DecryptFileRequestMessage\n         * @instance\n         */\n        DecryptFileRequestMessage.prototype.filePath = \"\";\n\n        /**\n         * DecryptFileRequestMessage privateKeyPath.\n         * @member {string} privateKeyPath\n         * @memberof agent.DecryptFileRequestMessage\n         * @instance\n         */\n        DecryptFileRequestMessage.prototype.privateKeyPath = \"\";\n\n        /**\n         * DecryptFileRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agent.DecryptFileRequestMessage\n         * @instance\n         */\n        DecryptFileRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new DecryptFileRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DecryptFileRequestMessage\n         * @static\n         * @param {agent.IDecryptFileRequestMessage=} [properties] Properties to set\n         * @returns {agent.DecryptFileRequestMessage} DecryptFileRequestMessage instance\n         */\n        DecryptFileRequestMessage.create = function create(properties) {\n            return new DecryptFileRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DecryptFileRequestMessage message. Does not implicitly {@link agent.DecryptFileRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DecryptFileRequestMessage\n         * @static\n         * @param {agent.IDecryptFileRequestMessage} m DecryptFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DecryptFileRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.filePath != null && Object.hasOwnProperty.call(m, \"filePath\"))\n                w.uint32(10).string(m.filePath);\n            if (m.privateKeyPath != null && Object.hasOwnProperty.call(m, \"privateKeyPath\"))\n                w.uint32(18).string(m.privateKeyPath);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(26).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Decodes a DecryptFileRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DecryptFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DecryptFileRequestMessage} DecryptFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DecryptFileRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DecryptFileRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filePath = r.string();\n                    break;\n                case 2:\n                    m.privateKeyPath = r.string();\n                    break;\n                case 3:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DecryptFileRequestMessage;\n    })();\n\n    agent.DecryptFileResponseMessage = (function() {\n\n        /**\n         * Properties of a DecryptFileResponseMessage.\n         * @memberof agent\n         * @interface IDecryptFileResponseMessage\n         * @property {string|null} [decryptedPath] DecryptFileResponseMessage decryptedPath\n         */\n\n        /**\n         * Constructs a new DecryptFileResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a DecryptFileResponseMessage.\n         * @implements IDecryptFileResponseMessage\n         * @constructor\n         * @param {agent.IDecryptFileResponseMessage=} [p] Properties to set\n         */\n        function DecryptFileResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DecryptFileResponseMessage decryptedPath.\n         * @member {string} decryptedPath\n         * @memberof agent.DecryptFileResponseMessage\n         * @instance\n         */\n        DecryptFileResponseMessage.prototype.decryptedPath = \"\";\n\n        /**\n         * Creates a new DecryptFileResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DecryptFileResponseMessage\n         * @static\n         * @param {agent.IDecryptFileResponseMessage=} [properties] Properties to set\n         * @returns {agent.DecryptFileResponseMessage} DecryptFileResponseMessage instance\n         */\n        DecryptFileResponseMessage.create = function create(properties) {\n            return new DecryptFileResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DecryptFileResponseMessage message. Does not implicitly {@link agent.DecryptFileResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DecryptFileResponseMessage\n         * @static\n         * @param {agent.IDecryptFileResponseMessage} m DecryptFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DecryptFileResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.decryptedPath != null && Object.hasOwnProperty.call(m, \"decryptedPath\"))\n                w.uint32(10).string(m.decryptedPath);\n            return w;\n        };\n\n        /**\n         * Decodes a DecryptFileResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DecryptFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DecryptFileResponseMessage} DecryptFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DecryptFileResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DecryptFileResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.decryptedPath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DecryptFileResponseMessage;\n    })();\n\n    agent.ListVaultsRequestMessage = (function() {\n\n        /**\n         * Properties of a ListVaultsRequestMessage.\n         * @memberof agent\n         * @interface IListVaultsRequestMessage\n         */\n\n        /**\n         * Constructs a new ListVaultsRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a ListVaultsRequestMessage.\n         * @implements IListVaultsRequestMessage\n         * @constructor\n         * @param {agent.IListVaultsRequestMessage=} [p] Properties to set\n         */\n        function ListVaultsRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Creates a new ListVaultsRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListVaultsRequestMessage\n         * @static\n         * @param {agent.IListVaultsRequestMessage=} [properties] Properties to set\n         * @returns {agent.ListVaultsRequestMessage} ListVaultsRequestMessage instance\n         */\n        ListVaultsRequestMessage.create = function create(properties) {\n            return new ListVaultsRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListVaultsRequestMessage message. Does not implicitly {@link agent.ListVaultsRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListVaultsRequestMessage\n         * @static\n         * @param {agent.IListVaultsRequestMessage} m ListVaultsRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListVaultsRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            return w;\n        };\n\n        /**\n         * Decodes a ListVaultsRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListVaultsRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListVaultsRequestMessage} ListVaultsRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListVaultsRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListVaultsRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListVaultsRequestMessage;\n    })();\n\n    agent.ListVaultsResponseMessage = (function() {\n\n        /**\n         * Properties of a ListVaultsResponseMessage.\n         * @memberof agent\n         * @interface IListVaultsResponseMessage\n         * @property {Array.<string>|null} [vaultNames] ListVaultsResponseMessage vaultNames\n         */\n\n        /**\n         * Constructs a new ListVaultsResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a ListVaultsResponseMessage.\n         * @implements IListVaultsResponseMessage\n         * @constructor\n         * @param {agent.IListVaultsResponseMessage=} [p] Properties to set\n         */\n        function ListVaultsResponseMessage(p) {\n            this.vaultNames = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListVaultsResponseMessage vaultNames.\n         * @member {Array.<string>} vaultNames\n         * @memberof agent.ListVaultsResponseMessage\n         * @instance\n         */\n        ListVaultsResponseMessage.prototype.vaultNames = $util.emptyArray;\n\n        /**\n         * Creates a new ListVaultsResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListVaultsResponseMessage\n         * @static\n         * @param {agent.IListVaultsResponseMessage=} [properties] Properties to set\n         * @returns {agent.ListVaultsResponseMessage} ListVaultsResponseMessage instance\n         */\n        ListVaultsResponseMessage.create = function create(properties) {\n            return new ListVaultsResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListVaultsResponseMessage message. Does not implicitly {@link agent.ListVaultsResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListVaultsResponseMessage\n         * @static\n         * @param {agent.IListVaultsResponseMessage} m ListVaultsResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListVaultsResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultNames != null && m.vaultNames.length) {\n                for (var i = 0; i < m.vaultNames.length; ++i)\n                    w.uint32(10).string(m.vaultNames[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Decodes a ListVaultsResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListVaultsResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListVaultsResponseMessage} ListVaultsResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListVaultsResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListVaultsResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.vaultNames && m.vaultNames.length))\n                        m.vaultNames = [];\n                    m.vaultNames.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListVaultsResponseMessage;\n    })();\n\n    agent.NewVaultRequestMessage = (function() {\n\n        /**\n         * Properties of a NewVaultRequestMessage.\n         * @memberof agent\n         * @interface INewVaultRequestMessage\n         * @property {string|null} [vaultName] NewVaultRequestMessage vaultName\n         */\n\n        /**\n         * Constructs a new NewVaultRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a NewVaultRequestMessage.\n         * @implements INewVaultRequestMessage\n         * @constructor\n         * @param {agent.INewVaultRequestMessage=} [p] Properties to set\n         */\n        function NewVaultRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewVaultRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.NewVaultRequestMessage\n         * @instance\n         */\n        NewVaultRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * Creates a new NewVaultRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.NewVaultRequestMessage\n         * @static\n         * @param {agent.INewVaultRequestMessage=} [properties] Properties to set\n         * @returns {agent.NewVaultRequestMessage} NewVaultRequestMessage instance\n         */\n        NewVaultRequestMessage.create = function create(properties) {\n            return new NewVaultRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewVaultRequestMessage message. Does not implicitly {@link agent.NewVaultRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.NewVaultRequestMessage\n         * @static\n         * @param {agent.INewVaultRequestMessage} m NewVaultRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewVaultRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            return w;\n        };\n\n        /**\n         * Decodes a NewVaultRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.NewVaultRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.NewVaultRequestMessage} NewVaultRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewVaultRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.NewVaultRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NewVaultRequestMessage;\n    })();\n\n    agent.NewVaultResponseMessage = (function() {\n\n        /**\n         * Properties of a NewVaultResponseMessage.\n         * @memberof agent\n         * @interface INewVaultResponseMessage\n         * @property {boolean|null} [successful] NewVaultResponseMessage successful\n         */\n\n        /**\n         * Constructs a new NewVaultResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a NewVaultResponseMessage.\n         * @implements INewVaultResponseMessage\n         * @constructor\n         * @param {agent.INewVaultResponseMessage=} [p] Properties to set\n         */\n        function NewVaultResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewVaultResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.NewVaultResponseMessage\n         * @instance\n         */\n        NewVaultResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new NewVaultResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.NewVaultResponseMessage\n         * @static\n         * @param {agent.INewVaultResponseMessage=} [properties] Properties to set\n         * @returns {agent.NewVaultResponseMessage} NewVaultResponseMessage instance\n         */\n        NewVaultResponseMessage.create = function create(properties) {\n            return new NewVaultResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewVaultResponseMessage message. Does not implicitly {@link agent.NewVaultResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.NewVaultResponseMessage\n         * @static\n         * @param {agent.INewVaultResponseMessage} m NewVaultResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewVaultResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a NewVaultResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.NewVaultResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.NewVaultResponseMessage} NewVaultResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewVaultResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.NewVaultResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NewVaultResponseMessage;\n    })();\n\n    agent.DestroyVaultRequestMessage = (function() {\n\n        /**\n         * Properties of a DestroyVaultRequestMessage.\n         * @memberof agent\n         * @interface IDestroyVaultRequestMessage\n         * @property {string|null} [vaultName] DestroyVaultRequestMessage vaultName\n         */\n\n        /**\n         * Constructs a new DestroyVaultRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a DestroyVaultRequestMessage.\n         * @implements IDestroyVaultRequestMessage\n         * @constructor\n         * @param {agent.IDestroyVaultRequestMessage=} [p] Properties to set\n         */\n        function DestroyVaultRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroyVaultRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.DestroyVaultRequestMessage\n         * @instance\n         */\n        DestroyVaultRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * Creates a new DestroyVaultRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DestroyVaultRequestMessage\n         * @static\n         * @param {agent.IDestroyVaultRequestMessage=} [properties] Properties to set\n         * @returns {agent.DestroyVaultRequestMessage} DestroyVaultRequestMessage instance\n         */\n        DestroyVaultRequestMessage.create = function create(properties) {\n            return new DestroyVaultRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroyVaultRequestMessage message. Does not implicitly {@link agent.DestroyVaultRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DestroyVaultRequestMessage\n         * @static\n         * @param {agent.IDestroyVaultRequestMessage} m DestroyVaultRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroyVaultRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            return w;\n        };\n\n        /**\n         * Decodes a DestroyVaultRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DestroyVaultRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DestroyVaultRequestMessage} DestroyVaultRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroyVaultRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DestroyVaultRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DestroyVaultRequestMessage;\n    })();\n\n    agent.DestroyVaultResponseMessage = (function() {\n\n        /**\n         * Properties of a DestroyVaultResponseMessage.\n         * @memberof agent\n         * @interface IDestroyVaultResponseMessage\n         * @property {boolean|null} [successful] DestroyVaultResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DestroyVaultResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a DestroyVaultResponseMessage.\n         * @implements IDestroyVaultResponseMessage\n         * @constructor\n         * @param {agent.IDestroyVaultResponseMessage=} [p] Properties to set\n         */\n        function DestroyVaultResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroyVaultResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.DestroyVaultResponseMessage\n         * @instance\n         */\n        DestroyVaultResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DestroyVaultResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DestroyVaultResponseMessage\n         * @static\n         * @param {agent.IDestroyVaultResponseMessage=} [properties] Properties to set\n         * @returns {agent.DestroyVaultResponseMessage} DestroyVaultResponseMessage instance\n         */\n        DestroyVaultResponseMessage.create = function create(properties) {\n            return new DestroyVaultResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroyVaultResponseMessage message. Does not implicitly {@link agent.DestroyVaultResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DestroyVaultResponseMessage\n         * @static\n         * @param {agent.IDestroyVaultResponseMessage} m DestroyVaultResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroyVaultResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a DestroyVaultResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DestroyVaultResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DestroyVaultResponseMessage} DestroyVaultResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroyVaultResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DestroyVaultResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DestroyVaultResponseMessage;\n    })();\n\n    agent.ListSecretsRequestMessage = (function() {\n\n        /**\n         * Properties of a ListSecretsRequestMessage.\n         * @memberof agent\n         * @interface IListSecretsRequestMessage\n         * @property {string|null} [vaultName] ListSecretsRequestMessage vaultName\n         */\n\n        /**\n         * Constructs a new ListSecretsRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a ListSecretsRequestMessage.\n         * @implements IListSecretsRequestMessage\n         * @constructor\n         * @param {agent.IListSecretsRequestMessage=} [p] Properties to set\n         */\n        function ListSecretsRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListSecretsRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.ListSecretsRequestMessage\n         * @instance\n         */\n        ListSecretsRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * Creates a new ListSecretsRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListSecretsRequestMessage\n         * @static\n         * @param {agent.IListSecretsRequestMessage=} [properties] Properties to set\n         * @returns {agent.ListSecretsRequestMessage} ListSecretsRequestMessage instance\n         */\n        ListSecretsRequestMessage.create = function create(properties) {\n            return new ListSecretsRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListSecretsRequestMessage message. Does not implicitly {@link agent.ListSecretsRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListSecretsRequestMessage\n         * @static\n         * @param {agent.IListSecretsRequestMessage} m ListSecretsRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListSecretsRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            return w;\n        };\n\n        /**\n         * Decodes a ListSecretsRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListSecretsRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListSecretsRequestMessage} ListSecretsRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListSecretsRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListSecretsRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListSecretsRequestMessage;\n    })();\n\n    agent.ListSecretsResponseMessage = (function() {\n\n        /**\n         * Properties of a ListSecretsResponseMessage.\n         * @memberof agent\n         * @interface IListSecretsResponseMessage\n         * @property {Array.<string>|null} [secretNames] ListSecretsResponseMessage secretNames\n         */\n\n        /**\n         * Constructs a new ListSecretsResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a ListSecretsResponseMessage.\n         * @implements IListSecretsResponseMessage\n         * @constructor\n         * @param {agent.IListSecretsResponseMessage=} [p] Properties to set\n         */\n        function ListSecretsResponseMessage(p) {\n            this.secretNames = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListSecretsResponseMessage secretNames.\n         * @member {Array.<string>} secretNames\n         * @memberof agent.ListSecretsResponseMessage\n         * @instance\n         */\n        ListSecretsResponseMessage.prototype.secretNames = $util.emptyArray;\n\n        /**\n         * Creates a new ListSecretsResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListSecretsResponseMessage\n         * @static\n         * @param {agent.IListSecretsResponseMessage=} [properties] Properties to set\n         * @returns {agent.ListSecretsResponseMessage} ListSecretsResponseMessage instance\n         */\n        ListSecretsResponseMessage.create = function create(properties) {\n            return new ListSecretsResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListSecretsResponseMessage message. Does not implicitly {@link agent.ListSecretsResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListSecretsResponseMessage\n         * @static\n         * @param {agent.IListSecretsResponseMessage} m ListSecretsResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListSecretsResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.secretNames != null && m.secretNames.length) {\n                for (var i = 0; i < m.secretNames.length; ++i)\n                    w.uint32(10).string(m.secretNames[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Decodes a ListSecretsResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListSecretsResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListSecretsResponseMessage} ListSecretsResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListSecretsResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListSecretsResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.secretNames && m.secretNames.length))\n                        m.secretNames = [];\n                    m.secretNames.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListSecretsResponseMessage;\n    })();\n\n    agent.CreateSecretRequestMessage = (function() {\n\n        /**\n         * Properties of a CreateSecretRequestMessage.\n         * @memberof agent\n         * @interface ICreateSecretRequestMessage\n         * @property {string|null} [vaultName] CreateSecretRequestMessage vaultName\n         * @property {string|null} [secretName] CreateSecretRequestMessage secretName\n         * @property {string|null} [secretPath] CreateSecretRequestMessage secretPath\n         * @property {Uint8Array|null} [secretContent] CreateSecretRequestMessage secretContent\n         */\n\n        /**\n         * Constructs a new CreateSecretRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a CreateSecretRequestMessage.\n         * @implements ICreateSecretRequestMessage\n         * @constructor\n         * @param {agent.ICreateSecretRequestMessage=} [p] Properties to set\n         */\n        function CreateSecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * CreateSecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * CreateSecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agent.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * CreateSecretRequestMessage secretPath.\n         * @member {string} secretPath\n         * @memberof agent.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.secretPath = \"\";\n\n        /**\n         * CreateSecretRequestMessage secretContent.\n         * @member {Uint8Array} secretContent\n         * @memberof agent.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.secretContent = $util.newBuffer([]);\n\n        /**\n         * Creates a new CreateSecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.CreateSecretRequestMessage\n         * @static\n         * @param {agent.ICreateSecretRequestMessage=} [properties] Properties to set\n         * @returns {agent.CreateSecretRequestMessage} CreateSecretRequestMessage instance\n         */\n        CreateSecretRequestMessage.create = function create(properties) {\n            return new CreateSecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified CreateSecretRequestMessage message. Does not implicitly {@link agent.CreateSecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.CreateSecretRequestMessage\n         * @static\n         * @param {agent.ICreateSecretRequestMessage} m CreateSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateSecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            if (m.secretPath != null && Object.hasOwnProperty.call(m, \"secretPath\"))\n                w.uint32(26).string(m.secretPath);\n            if (m.secretContent != null && Object.hasOwnProperty.call(m, \"secretContent\"))\n                w.uint32(34).bytes(m.secretContent);\n            return w;\n        };\n\n        /**\n         * Decodes a CreateSecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.CreateSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.CreateSecretRequestMessage} CreateSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateSecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.CreateSecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                case 3:\n                    m.secretPath = r.string();\n                    break;\n                case 4:\n                    m.secretContent = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return CreateSecretRequestMessage;\n    })();\n\n    agent.CreateSecretResponseMessage = (function() {\n\n        /**\n         * Properties of a CreateSecretResponseMessage.\n         * @memberof agent\n         * @interface ICreateSecretResponseMessage\n         * @property {boolean|null} [successful] CreateSecretResponseMessage successful\n         */\n\n        /**\n         * Constructs a new CreateSecretResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a CreateSecretResponseMessage.\n         * @implements ICreateSecretResponseMessage\n         * @constructor\n         * @param {agent.ICreateSecretResponseMessage=} [p] Properties to set\n         */\n        function CreateSecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * CreateSecretResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.CreateSecretResponseMessage\n         * @instance\n         */\n        CreateSecretResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new CreateSecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.CreateSecretResponseMessage\n         * @static\n         * @param {agent.ICreateSecretResponseMessage=} [properties] Properties to set\n         * @returns {agent.CreateSecretResponseMessage} CreateSecretResponseMessage instance\n         */\n        CreateSecretResponseMessage.create = function create(properties) {\n            return new CreateSecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified CreateSecretResponseMessage message. Does not implicitly {@link agent.CreateSecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.CreateSecretResponseMessage\n         * @static\n         * @param {agent.ICreateSecretResponseMessage} m CreateSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateSecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a CreateSecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.CreateSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.CreateSecretResponseMessage} CreateSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateSecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.CreateSecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return CreateSecretResponseMessage;\n    })();\n\n    agent.DestroySecretRequestMessage = (function() {\n\n        /**\n         * Properties of a DestroySecretRequestMessage.\n         * @memberof agent\n         * @interface IDestroySecretRequestMessage\n         * @property {string|null} [vaultName] DestroySecretRequestMessage vaultName\n         * @property {string|null} [secretName] DestroySecretRequestMessage secretName\n         */\n\n        /**\n         * Constructs a new DestroySecretRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a DestroySecretRequestMessage.\n         * @implements IDestroySecretRequestMessage\n         * @constructor\n         * @param {agent.IDestroySecretRequestMessage=} [p] Properties to set\n         */\n        function DestroySecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroySecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.DestroySecretRequestMessage\n         * @instance\n         */\n        DestroySecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * DestroySecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agent.DestroySecretRequestMessage\n         * @instance\n         */\n        DestroySecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * Creates a new DestroySecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DestroySecretRequestMessage\n         * @static\n         * @param {agent.IDestroySecretRequestMessage=} [properties] Properties to set\n         * @returns {agent.DestroySecretRequestMessage} DestroySecretRequestMessage instance\n         */\n        DestroySecretRequestMessage.create = function create(properties) {\n            return new DestroySecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroySecretRequestMessage message. Does not implicitly {@link agent.DestroySecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DestroySecretRequestMessage\n         * @static\n         * @param {agent.IDestroySecretRequestMessage} m DestroySecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroySecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            return w;\n        };\n\n        /**\n         * Decodes a DestroySecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DestroySecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DestroySecretRequestMessage} DestroySecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroySecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DestroySecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DestroySecretRequestMessage;\n    })();\n\n    agent.DestroySecretResponseMessage = (function() {\n\n        /**\n         * Properties of a DestroySecretResponseMessage.\n         * @memberof agent\n         * @interface IDestroySecretResponseMessage\n         * @property {boolean|null} [successful] DestroySecretResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DestroySecretResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a DestroySecretResponseMessage.\n         * @implements IDestroySecretResponseMessage\n         * @constructor\n         * @param {agent.IDestroySecretResponseMessage=} [p] Properties to set\n         */\n        function DestroySecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroySecretResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.DestroySecretResponseMessage\n         * @instance\n         */\n        DestroySecretResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DestroySecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DestroySecretResponseMessage\n         * @static\n         * @param {agent.IDestroySecretResponseMessage=} [properties] Properties to set\n         * @returns {agent.DestroySecretResponseMessage} DestroySecretResponseMessage instance\n         */\n        DestroySecretResponseMessage.create = function create(properties) {\n            return new DestroySecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroySecretResponseMessage message. Does not implicitly {@link agent.DestroySecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DestroySecretResponseMessage\n         * @static\n         * @param {agent.IDestroySecretResponseMessage} m DestroySecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroySecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a DestroySecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DestroySecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DestroySecretResponseMessage} DestroySecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroySecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DestroySecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DestroySecretResponseMessage;\n    })();\n\n    agent.GetSecretRequestMessage = (function() {\n\n        /**\n         * Properties of a GetSecretRequestMessage.\n         * @memberof agent\n         * @interface IGetSecretRequestMessage\n         * @property {string|null} [vaultName] GetSecretRequestMessage vaultName\n         * @property {string|null} [secretName] GetSecretRequestMessage secretName\n         */\n\n        /**\n         * Constructs a new GetSecretRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a GetSecretRequestMessage.\n         * @implements IGetSecretRequestMessage\n         * @constructor\n         * @param {agent.IGetSecretRequestMessage=} [p] Properties to set\n         */\n        function GetSecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetSecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.GetSecretRequestMessage\n         * @instance\n         */\n        GetSecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * GetSecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agent.GetSecretRequestMessage\n         * @instance\n         */\n        GetSecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * Creates a new GetSecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.GetSecretRequestMessage\n         * @static\n         * @param {agent.IGetSecretRequestMessage=} [properties] Properties to set\n         * @returns {agent.GetSecretRequestMessage} GetSecretRequestMessage instance\n         */\n        GetSecretRequestMessage.create = function create(properties) {\n            return new GetSecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetSecretRequestMessage message. Does not implicitly {@link agent.GetSecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.GetSecretRequestMessage\n         * @static\n         * @param {agent.IGetSecretRequestMessage} m GetSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetSecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            return w;\n        };\n\n        /**\n         * Decodes a GetSecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.GetSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.GetSecretRequestMessage} GetSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetSecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.GetSecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GetSecretRequestMessage;\n    })();\n\n    agent.GetSecretResponseMessage = (function() {\n\n        /**\n         * Properties of a GetSecretResponseMessage.\n         * @memberof agent\n         * @interface IGetSecretResponseMessage\n         * @property {Uint8Array|null} [secret] GetSecretResponseMessage secret\n         */\n\n        /**\n         * Constructs a new GetSecretResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a GetSecretResponseMessage.\n         * @implements IGetSecretResponseMessage\n         * @constructor\n         * @param {agent.IGetSecretResponseMessage=} [p] Properties to set\n         */\n        function GetSecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetSecretResponseMessage secret.\n         * @member {Uint8Array} secret\n         * @memberof agent.GetSecretResponseMessage\n         * @instance\n         */\n        GetSecretResponseMessage.prototype.secret = $util.newBuffer([]);\n\n        /**\n         * Creates a new GetSecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.GetSecretResponseMessage\n         * @static\n         * @param {agent.IGetSecretResponseMessage=} [properties] Properties to set\n         * @returns {agent.GetSecretResponseMessage} GetSecretResponseMessage instance\n         */\n        GetSecretResponseMessage.create = function create(properties) {\n            return new GetSecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetSecretResponseMessage message. Does not implicitly {@link agent.GetSecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.GetSecretResponseMessage\n         * @static\n         * @param {agent.IGetSecretResponseMessage} m GetSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetSecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.secret != null && Object.hasOwnProperty.call(m, \"secret\"))\n                w.uint32(10).bytes(m.secret);\n            return w;\n        };\n\n        /**\n         * Decodes a GetSecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.GetSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.GetSecretResponseMessage} GetSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetSecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.GetSecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.secret = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GetSecretResponseMessage;\n    })();\n\n    agent.DeriveKeyRequestMessage = (function() {\n\n        /**\n         * Properties of a DeriveKeyRequestMessage.\n         * @memberof agent\n         * @interface IDeriveKeyRequestMessage\n         * @property {string|null} [vaultName] DeriveKeyRequestMessage vaultName\n         * @property {string|null} [keyName] DeriveKeyRequestMessage keyName\n         * @property {string|null} [passphrase] DeriveKeyRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new DeriveKeyRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a DeriveKeyRequestMessage.\n         * @implements IDeriveKeyRequestMessage\n         * @constructor\n         * @param {agent.IDeriveKeyRequestMessage=} [p] Properties to set\n         */\n        function DeriveKeyRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DeriveKeyRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.DeriveKeyRequestMessage\n         * @instance\n         */\n        DeriveKeyRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * DeriveKeyRequestMessage keyName.\n         * @member {string} keyName\n         * @memberof agent.DeriveKeyRequestMessage\n         * @instance\n         */\n        DeriveKeyRequestMessage.prototype.keyName = \"\";\n\n        /**\n         * DeriveKeyRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agent.DeriveKeyRequestMessage\n         * @instance\n         */\n        DeriveKeyRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new DeriveKeyRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DeriveKeyRequestMessage\n         * @static\n         * @param {agent.IDeriveKeyRequestMessage=} [properties] Properties to set\n         * @returns {agent.DeriveKeyRequestMessage} DeriveKeyRequestMessage instance\n         */\n        DeriveKeyRequestMessage.create = function create(properties) {\n            return new DeriveKeyRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DeriveKeyRequestMessage message. Does not implicitly {@link agent.DeriveKeyRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DeriveKeyRequestMessage\n         * @static\n         * @param {agent.IDeriveKeyRequestMessage} m DeriveKeyRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeriveKeyRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.keyName != null && Object.hasOwnProperty.call(m, \"keyName\"))\n                w.uint32(18).string(m.keyName);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(26).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Decodes a DeriveKeyRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DeriveKeyRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DeriveKeyRequestMessage} DeriveKeyRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeriveKeyRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DeriveKeyRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.keyName = r.string();\n                    break;\n                case 3:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DeriveKeyRequestMessage;\n    })();\n\n    agent.DeriveKeyResponseMessage = (function() {\n\n        /**\n         * Properties of a DeriveKeyResponseMessage.\n         * @memberof agent\n         * @interface IDeriveKeyResponseMessage\n         * @property {boolean|null} [successful] DeriveKeyResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DeriveKeyResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a DeriveKeyResponseMessage.\n         * @implements IDeriveKeyResponseMessage\n         * @constructor\n         * @param {agent.IDeriveKeyResponseMessage=} [p] Properties to set\n         */\n        function DeriveKeyResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DeriveKeyResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.DeriveKeyResponseMessage\n         * @instance\n         */\n        DeriveKeyResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DeriveKeyResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DeriveKeyResponseMessage\n         * @static\n         * @param {agent.IDeriveKeyResponseMessage=} [properties] Properties to set\n         * @returns {agent.DeriveKeyResponseMessage} DeriveKeyResponseMessage instance\n         */\n        DeriveKeyResponseMessage.create = function create(properties) {\n            return new DeriveKeyResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DeriveKeyResponseMessage message. Does not implicitly {@link agent.DeriveKeyResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DeriveKeyResponseMessage\n         * @static\n         * @param {agent.IDeriveKeyResponseMessage} m DeriveKeyResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeriveKeyResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a DeriveKeyResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DeriveKeyResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DeriveKeyResponseMessage} DeriveKeyResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeriveKeyResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DeriveKeyResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DeriveKeyResponseMessage;\n    })();\n\n    agent.ListKeysRequestMessage = (function() {\n\n        /**\n         * Properties of a ListKeysRequestMessage.\n         * @memberof agent\n         * @interface IListKeysRequestMessage\n         */\n\n        /**\n         * Constructs a new ListKeysRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a ListKeysRequestMessage.\n         * @implements IListKeysRequestMessage\n         * @constructor\n         * @param {agent.IListKeysRequestMessage=} [p] Properties to set\n         */\n        function ListKeysRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Creates a new ListKeysRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListKeysRequestMessage\n         * @static\n         * @param {agent.IListKeysRequestMessage=} [properties] Properties to set\n         * @returns {agent.ListKeysRequestMessage} ListKeysRequestMessage instance\n         */\n        ListKeysRequestMessage.create = function create(properties) {\n            return new ListKeysRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListKeysRequestMessage message. Does not implicitly {@link agent.ListKeysRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListKeysRequestMessage\n         * @static\n         * @param {agent.IListKeysRequestMessage} m ListKeysRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListKeysRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            return w;\n        };\n\n        /**\n         * Decodes a ListKeysRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListKeysRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListKeysRequestMessage} ListKeysRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListKeysRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListKeysRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListKeysRequestMessage;\n    })();\n\n    agent.ListKeysResponseMessage = (function() {\n\n        /**\n         * Properties of a ListKeysResponseMessage.\n         * @memberof agent\n         * @interface IListKeysResponseMessage\n         * @property {Array.<string>|null} [keyNames] ListKeysResponseMessage keyNames\n         */\n\n        /**\n         * Constructs a new ListKeysResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a ListKeysResponseMessage.\n         * @implements IListKeysResponseMessage\n         * @constructor\n         * @param {agent.IListKeysResponseMessage=} [p] Properties to set\n         */\n        function ListKeysResponseMessage(p) {\n            this.keyNames = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListKeysResponseMessage keyNames.\n         * @member {Array.<string>} keyNames\n         * @memberof agent.ListKeysResponseMessage\n         * @instance\n         */\n        ListKeysResponseMessage.prototype.keyNames = $util.emptyArray;\n\n        /**\n         * Creates a new ListKeysResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListKeysResponseMessage\n         * @static\n         * @param {agent.IListKeysResponseMessage=} [properties] Properties to set\n         * @returns {agent.ListKeysResponseMessage} ListKeysResponseMessage instance\n         */\n        ListKeysResponseMessage.create = function create(properties) {\n            return new ListKeysResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListKeysResponseMessage message. Does not implicitly {@link agent.ListKeysResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListKeysResponseMessage\n         * @static\n         * @param {agent.IListKeysResponseMessage} m ListKeysResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListKeysResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.keyNames != null && m.keyNames.length) {\n                for (var i = 0; i < m.keyNames.length; ++i)\n                    w.uint32(10).string(m.keyNames[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Decodes a ListKeysResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListKeysResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListKeysResponseMessage} ListKeysResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListKeysResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListKeysResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.keyNames && m.keyNames.length))\n                        m.keyNames = [];\n                    m.keyNames.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListKeysResponseMessage;\n    })();\n\n    agent.GetKeyRequestMessage = (function() {\n\n        /**\n         * Properties of a GetKeyRequestMessage.\n         * @memberof agent\n         * @interface IGetKeyRequestMessage\n         * @property {string|null} [keyName] GetKeyRequestMessage keyName\n         */\n\n        /**\n         * Constructs a new GetKeyRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a GetKeyRequestMessage.\n         * @implements IGetKeyRequestMessage\n         * @constructor\n         * @param {agent.IGetKeyRequestMessage=} [p] Properties to set\n         */\n        function GetKeyRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetKeyRequestMessage keyName.\n         * @member {string} keyName\n         * @memberof agent.GetKeyRequestMessage\n         * @instance\n         */\n        GetKeyRequestMessage.prototype.keyName = \"\";\n\n        /**\n         * Creates a new GetKeyRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.GetKeyRequestMessage\n         * @static\n         * @param {agent.IGetKeyRequestMessage=} [properties] Properties to set\n         * @returns {agent.GetKeyRequestMessage} GetKeyRequestMessage instance\n         */\n        GetKeyRequestMessage.create = function create(properties) {\n            return new GetKeyRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetKeyRequestMessage message. Does not implicitly {@link agent.GetKeyRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.GetKeyRequestMessage\n         * @static\n         * @param {agent.IGetKeyRequestMessage} m GetKeyRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetKeyRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.keyName != null && Object.hasOwnProperty.call(m, \"keyName\"))\n                w.uint32(10).string(m.keyName);\n            return w;\n        };\n\n        /**\n         * Decodes a GetKeyRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.GetKeyRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.GetKeyRequestMessage} GetKeyRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetKeyRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.GetKeyRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.keyName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GetKeyRequestMessage;\n    })();\n\n    agent.GetKeyResponseMessage = (function() {\n\n        /**\n         * Properties of a GetKeyResponseMessage.\n         * @memberof agent\n         * @interface IGetKeyResponseMessage\n         * @property {string|null} [keyName] GetKeyResponseMessage keyName\n         * @property {string|null} [keyContent] GetKeyResponseMessage keyContent\n         */\n\n        /**\n         * Constructs a new GetKeyResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a GetKeyResponseMessage.\n         * @implements IGetKeyResponseMessage\n         * @constructor\n         * @param {agent.IGetKeyResponseMessage=} [p] Properties to set\n         */\n        function GetKeyResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetKeyResponseMessage keyName.\n         * @member {string} keyName\n         * @memberof agent.GetKeyResponseMessage\n         * @instance\n         */\n        GetKeyResponseMessage.prototype.keyName = \"\";\n\n        /**\n         * GetKeyResponseMessage keyContent.\n         * @member {string} keyContent\n         * @memberof agent.GetKeyResponseMessage\n         * @instance\n         */\n        GetKeyResponseMessage.prototype.keyContent = \"\";\n\n        /**\n         * Creates a new GetKeyResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.GetKeyResponseMessage\n         * @static\n         * @param {agent.IGetKeyResponseMessage=} [properties] Properties to set\n         * @returns {agent.GetKeyResponseMessage} GetKeyResponseMessage instance\n         */\n        GetKeyResponseMessage.create = function create(properties) {\n            return new GetKeyResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetKeyResponseMessage message. Does not implicitly {@link agent.GetKeyResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.GetKeyResponseMessage\n         * @static\n         * @param {agent.IGetKeyResponseMessage} m GetKeyResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetKeyResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.keyName != null && Object.hasOwnProperty.call(m, \"keyName\"))\n                w.uint32(10).string(m.keyName);\n            if (m.keyContent != null && Object.hasOwnProperty.call(m, \"keyContent\"))\n                w.uint32(18).string(m.keyContent);\n            return w;\n        };\n\n        /**\n         * Decodes a GetKeyResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.GetKeyResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.GetKeyResponseMessage} GetKeyResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetKeyResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.GetKeyResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.keyName = r.string();\n                    break;\n                case 2:\n                    m.keyContent = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GetKeyResponseMessage;\n    })();\n\n    agent.GetPrimaryKeyPairRequestMessage = (function() {\n\n        /**\n         * Properties of a GetPrimaryKeyPairRequestMessage.\n         * @memberof agent\n         * @interface IGetPrimaryKeyPairRequestMessage\n         * @property {boolean|null} [includePrivateKey] GetPrimaryKeyPairRequestMessage includePrivateKey\n         */\n\n        /**\n         * Constructs a new GetPrimaryKeyPairRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a GetPrimaryKeyPairRequestMessage.\n         * @implements IGetPrimaryKeyPairRequestMessage\n         * @constructor\n         * @param {agent.IGetPrimaryKeyPairRequestMessage=} [p] Properties to set\n         */\n        function GetPrimaryKeyPairRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetPrimaryKeyPairRequestMessage includePrivateKey.\n         * @member {boolean} includePrivateKey\n         * @memberof agent.GetPrimaryKeyPairRequestMessage\n         * @instance\n         */\n        GetPrimaryKeyPairRequestMessage.prototype.includePrivateKey = false;\n\n        /**\n         * Creates a new GetPrimaryKeyPairRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.GetPrimaryKeyPairRequestMessage\n         * @static\n         * @param {agent.IGetPrimaryKeyPairRequestMessage=} [properties] Properties to set\n         * @returns {agent.GetPrimaryKeyPairRequestMessage} GetPrimaryKeyPairRequestMessage instance\n         */\n        GetPrimaryKeyPairRequestMessage.create = function create(properties) {\n            return new GetPrimaryKeyPairRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetPrimaryKeyPairRequestMessage message. Does not implicitly {@link agent.GetPrimaryKeyPairRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.GetPrimaryKeyPairRequestMessage\n         * @static\n         * @param {agent.IGetPrimaryKeyPairRequestMessage} m GetPrimaryKeyPairRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetPrimaryKeyPairRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.includePrivateKey != null && Object.hasOwnProperty.call(m, \"includePrivateKey\"))\n                w.uint32(8).bool(m.includePrivateKey);\n            return w;\n        };\n\n        /**\n         * Decodes a GetPrimaryKeyPairRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.GetPrimaryKeyPairRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.GetPrimaryKeyPairRequestMessage} GetPrimaryKeyPairRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetPrimaryKeyPairRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.GetPrimaryKeyPairRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.includePrivateKey = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GetPrimaryKeyPairRequestMessage;\n    })();\n\n    agent.GetPrimaryKeyPairResponseMessage = (function() {\n\n        /**\n         * Properties of a GetPrimaryKeyPairResponseMessage.\n         * @memberof agent\n         * @interface IGetPrimaryKeyPairResponseMessage\n         * @property {string|null} [publicKey] GetPrimaryKeyPairResponseMessage publicKey\n         * @property {string|null} [privateKey] GetPrimaryKeyPairResponseMessage privateKey\n         */\n\n        /**\n         * Constructs a new GetPrimaryKeyPairResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a GetPrimaryKeyPairResponseMessage.\n         * @implements IGetPrimaryKeyPairResponseMessage\n         * @constructor\n         * @param {agent.IGetPrimaryKeyPairResponseMessage=} [p] Properties to set\n         */\n        function GetPrimaryKeyPairResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetPrimaryKeyPairResponseMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agent.GetPrimaryKeyPairResponseMessage\n         * @instance\n         */\n        GetPrimaryKeyPairResponseMessage.prototype.publicKey = \"\";\n\n        /**\n         * GetPrimaryKeyPairResponseMessage privateKey.\n         * @member {string} privateKey\n         * @memberof agent.GetPrimaryKeyPairResponseMessage\n         * @instance\n         */\n        GetPrimaryKeyPairResponseMessage.prototype.privateKey = \"\";\n\n        /**\n         * Creates a new GetPrimaryKeyPairResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.GetPrimaryKeyPairResponseMessage\n         * @static\n         * @param {agent.IGetPrimaryKeyPairResponseMessage=} [properties] Properties to set\n         * @returns {agent.GetPrimaryKeyPairResponseMessage} GetPrimaryKeyPairResponseMessage instance\n         */\n        GetPrimaryKeyPairResponseMessage.create = function create(properties) {\n            return new GetPrimaryKeyPairResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetPrimaryKeyPairResponseMessage message. Does not implicitly {@link agent.GetPrimaryKeyPairResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.GetPrimaryKeyPairResponseMessage\n         * @static\n         * @param {agent.IGetPrimaryKeyPairResponseMessage} m GetPrimaryKeyPairResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetPrimaryKeyPairResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            if (m.privateKey != null && Object.hasOwnProperty.call(m, \"privateKey\"))\n                w.uint32(18).string(m.privateKey);\n            return w;\n        };\n\n        /**\n         * Decodes a GetPrimaryKeyPairResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.GetPrimaryKeyPairResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.GetPrimaryKeyPairResponseMessage} GetPrimaryKeyPairResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetPrimaryKeyPairResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.GetPrimaryKeyPairResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                case 2:\n                    m.privateKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GetPrimaryKeyPairResponseMessage;\n    })();\n\n    agent.UpdateSecretRequestMessage = (function() {\n\n        /**\n         * Properties of an UpdateSecretRequestMessage.\n         * @memberof agent\n         * @interface IUpdateSecretRequestMessage\n         * @property {string|null} [vaultName] UpdateSecretRequestMessage vaultName\n         * @property {string|null} [secretName] UpdateSecretRequestMessage secretName\n         * @property {string|null} [secretPath] UpdateSecretRequestMessage secretPath\n         * @property {Uint8Array|null} [secretContent] UpdateSecretRequestMessage secretContent\n         */\n\n        /**\n         * Constructs a new UpdateSecretRequestMessage.\n         * @memberof agent\n         * @classdesc Represents an UpdateSecretRequestMessage.\n         * @implements IUpdateSecretRequestMessage\n         * @constructor\n         * @param {agent.IUpdateSecretRequestMessage=} [p] Properties to set\n         */\n        function UpdateSecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * UpdateSecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.UpdateSecretRequestMessage\n         * @instance\n         */\n        UpdateSecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * UpdateSecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agent.UpdateSecretRequestMessage\n         * @instance\n         */\n        UpdateSecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * UpdateSecretRequestMessage secretPath.\n         * @member {string} secretPath\n         * @memberof agent.UpdateSecretRequestMessage\n         * @instance\n         */\n        UpdateSecretRequestMessage.prototype.secretPath = \"\";\n\n        /**\n         * UpdateSecretRequestMessage secretContent.\n         * @member {Uint8Array} secretContent\n         * @memberof agent.UpdateSecretRequestMessage\n         * @instance\n         */\n        UpdateSecretRequestMessage.prototype.secretContent = $util.newBuffer([]);\n\n        /**\n         * Creates a new UpdateSecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.UpdateSecretRequestMessage\n         * @static\n         * @param {agent.IUpdateSecretRequestMessage=} [properties] Properties to set\n         * @returns {agent.UpdateSecretRequestMessage} UpdateSecretRequestMessage instance\n         */\n        UpdateSecretRequestMessage.create = function create(properties) {\n            return new UpdateSecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified UpdateSecretRequestMessage message. Does not implicitly {@link agent.UpdateSecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.UpdateSecretRequestMessage\n         * @static\n         * @param {agent.IUpdateSecretRequestMessage} m UpdateSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UpdateSecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            if (m.secretPath != null && Object.hasOwnProperty.call(m, \"secretPath\"))\n                w.uint32(26).string(m.secretPath);\n            if (m.secretContent != null && Object.hasOwnProperty.call(m, \"secretContent\"))\n                w.uint32(34).bytes(m.secretContent);\n            return w;\n        };\n\n        /**\n         * Decodes an UpdateSecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.UpdateSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.UpdateSecretRequestMessage} UpdateSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UpdateSecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.UpdateSecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                case 3:\n                    m.secretPath = r.string();\n                    break;\n                case 4:\n                    m.secretContent = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return UpdateSecretRequestMessage;\n    })();\n\n    agent.UpdateSecretResponseMessage = (function() {\n\n        /**\n         * Properties of an UpdateSecretResponseMessage.\n         * @memberof agent\n         * @interface IUpdateSecretResponseMessage\n         * @property {boolean|null} [successful] UpdateSecretResponseMessage successful\n         */\n\n        /**\n         * Constructs a new UpdateSecretResponseMessage.\n         * @memberof agent\n         * @classdesc Represents an UpdateSecretResponseMessage.\n         * @implements IUpdateSecretResponseMessage\n         * @constructor\n         * @param {agent.IUpdateSecretResponseMessage=} [p] Properties to set\n         */\n        function UpdateSecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * UpdateSecretResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.UpdateSecretResponseMessage\n         * @instance\n         */\n        UpdateSecretResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new UpdateSecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.UpdateSecretResponseMessage\n         * @static\n         * @param {agent.IUpdateSecretResponseMessage=} [properties] Properties to set\n         * @returns {agent.UpdateSecretResponseMessage} UpdateSecretResponseMessage instance\n         */\n        UpdateSecretResponseMessage.create = function create(properties) {\n            return new UpdateSecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified UpdateSecretResponseMessage message. Does not implicitly {@link agent.UpdateSecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.UpdateSecretResponseMessage\n         * @static\n         * @param {agent.IUpdateSecretResponseMessage} m UpdateSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UpdateSecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes an UpdateSecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.UpdateSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.UpdateSecretResponseMessage} UpdateSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UpdateSecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.UpdateSecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return UpdateSecretResponseMessage;\n    })();\n\n    agent.DeleteKeyRequestMessage = (function() {\n\n        /**\n         * Properties of a DeleteKeyRequestMessage.\n         * @memberof agent\n         * @interface IDeleteKeyRequestMessage\n         * @property {string|null} [keyName] DeleteKeyRequestMessage keyName\n         */\n\n        /**\n         * Constructs a new DeleteKeyRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a DeleteKeyRequestMessage.\n         * @implements IDeleteKeyRequestMessage\n         * @constructor\n         * @param {agent.IDeleteKeyRequestMessage=} [p] Properties to set\n         */\n        function DeleteKeyRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DeleteKeyRequestMessage keyName.\n         * @member {string} keyName\n         * @memberof agent.DeleteKeyRequestMessage\n         * @instance\n         */\n        DeleteKeyRequestMessage.prototype.keyName = \"\";\n\n        /**\n         * Creates a new DeleteKeyRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DeleteKeyRequestMessage\n         * @static\n         * @param {agent.IDeleteKeyRequestMessage=} [properties] Properties to set\n         * @returns {agent.DeleteKeyRequestMessage} DeleteKeyRequestMessage instance\n         */\n        DeleteKeyRequestMessage.create = function create(properties) {\n            return new DeleteKeyRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DeleteKeyRequestMessage message. Does not implicitly {@link agent.DeleteKeyRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DeleteKeyRequestMessage\n         * @static\n         * @param {agent.IDeleteKeyRequestMessage} m DeleteKeyRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeleteKeyRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.keyName != null && Object.hasOwnProperty.call(m, \"keyName\"))\n                w.uint32(10).string(m.keyName);\n            return w;\n        };\n\n        /**\n         * Decodes a DeleteKeyRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DeleteKeyRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DeleteKeyRequestMessage} DeleteKeyRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeleteKeyRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DeleteKeyRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.keyName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DeleteKeyRequestMessage;\n    })();\n\n    agent.DeleteKeyResponseMessage = (function() {\n\n        /**\n         * Properties of a DeleteKeyResponseMessage.\n         * @memberof agent\n         * @interface IDeleteKeyResponseMessage\n         * @property {boolean|null} [successful] DeleteKeyResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DeleteKeyResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a DeleteKeyResponseMessage.\n         * @implements IDeleteKeyResponseMessage\n         * @constructor\n         * @param {agent.IDeleteKeyResponseMessage=} [p] Properties to set\n         */\n        function DeleteKeyResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DeleteKeyResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.DeleteKeyResponseMessage\n         * @instance\n         */\n        DeleteKeyResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DeleteKeyResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DeleteKeyResponseMessage\n         * @static\n         * @param {agent.IDeleteKeyResponseMessage=} [properties] Properties to set\n         * @returns {agent.DeleteKeyResponseMessage} DeleteKeyResponseMessage instance\n         */\n        DeleteKeyResponseMessage.create = function create(properties) {\n            return new DeleteKeyResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DeleteKeyResponseMessage message. Does not implicitly {@link agent.DeleteKeyResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DeleteKeyResponseMessage\n         * @static\n         * @param {agent.IDeleteKeyResponseMessage} m DeleteKeyResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeleteKeyResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a DeleteKeyResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DeleteKeyResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DeleteKeyResponseMessage} DeleteKeyResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeleteKeyResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DeleteKeyResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DeleteKeyResponseMessage;\n    })();\n\n    return agent;\n})();\n\nmodule.exports = $root;\n","module.exports = require(\"protobufjs/minimal\");"],"sourceRoot":""}