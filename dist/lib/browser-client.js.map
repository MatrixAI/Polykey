{"version":3,"sources":["webpack://browser-client/webpack/universalModuleDefinition","webpack://browser-client/webpack/bootstrap","webpack://browser-client/./src/lib/agent/PolykeyClient.ts","webpack://browser-client/./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack://browser-client/(webpack)/buildin/global.js","webpack://browser-client/external \"base64-js\"","webpack://browser-client/external \"ieee754\"","webpack://browser-client/external \"isarray\"","webpack://browser-client/./proto/js/Agent.js","webpack://browser-client/external \"protobufjs/minimal\""],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Agent_1","AgentMessage","CreateSecretRequestMessage","CreateSecretResponseMessage","DeriveKeyRequestMessage","DeriveKeyResponseMessage","DestroySecretRequestMessage","DestroySecretResponseMessage","DestroyVaultRequestMessage","DestroyVaultResponseMessage","ErrorMessage","GetSecretRequestMessage","GetSecretResponseMessage","ListNodesRequestMessage","ListNodesResponseMessage","ListSecretsRequestMessage","ListSecretsResponseMessage","ListVaultsRequestMessage","ListVaultsResponseMessage","NewNodeRequestMessage","NewNodeResponseMessage","NewVaultRequestMessage","NewVaultResponseMessage","RegisterNodeRequestMessage","RegisterNodeResponseMessage","SignFileRequestMessage","SignFileResponseMessage","Type","VerifyFileRequestMessage","VerifyFileResponseMessage","agent","default","getStream","request","stream","responseList","Promise","resolve","reject","on","data","push","err","write","end","type","nodePath","agentMessage","encode","isResponse","subMessage","finish","sendRequestToAgent","agentMessageList","response","decode","ERROR","error","Error","path","passphrase","registerNodeRequest","encodedResponse","handleAgentCommunication","REGISTER_NODE","length","successful","email","nbits","newNodeRequest","NEW_NODE","unlockedOnly","LIST_NODES","undefined","nodes","keyName","DERIVE_KEY","filePath","privateKeyPath","SIGN_FILE","signaturePath","VERIFY_FILE","verified","LIST_VAULTS","vaultNames","vaultName","NEW_VAULT","DESTROY_VAULT","LIST_SECRETS","secretNames","secretName","secretPath","CREATE_SECRET","DESTROY_SECRET","GET_SECRET","secret","Buffer","from","STATUS","toString","STOP_AGENT","getAgentStatus","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","g","Function","window","require","valuesById","values","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","ks","keys","newBuffer","properties","w","uint32","int32","bool","skipType","emptyArray"],"mappings":"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","file":"browser-client.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"browser-client\"] = factory();\n\telse\n\t\troot[\"browser-client\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Agent_1 = require(\"../../../proto/js/Agent\");\nconst { AgentMessage, CreateSecretRequestMessage, CreateSecretResponseMessage, DeriveKeyRequestMessage, DeriveKeyResponseMessage, DestroySecretRequestMessage, DestroySecretResponseMessage, DestroyVaultRequestMessage, DestroyVaultResponseMessage, ErrorMessage, GetSecretRequestMessage, GetSecretResponseMessage, ListNodesRequestMessage, ListNodesResponseMessage, ListSecretsRequestMessage, ListSecretsResponseMessage, ListVaultsRequestMessage, ListVaultsResponseMessage, NewNodeRequestMessage, NewNodeResponseMessage, NewVaultRequestMessage, NewVaultResponseMessage, RegisterNodeRequestMessage, RegisterNodeResponseMessage, SignFileRequestMessage, SignFileResponseMessage, Type, VerifyFileRequestMessage, VerifyFileResponseMessage } = Agent_1.agent;\nclass PolykeyClient {\n    constructor(getStream) {\n        this.getStream = getStream;\n    }\n    async sendRequestToAgent(request) {\n        const stream = this.getStream();\n        const responseList = await new Promise((resolve, reject) => {\n            try {\n                const responseList = [];\n                stream.on('data', (data) => {\n                    responseList.push(data);\n                });\n                stream.on('error', (err) => {\n                    reject(err);\n                });\n                stream.on('end', () => {\n                    resolve(responseList);\n                });\n                stream.write(request);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n        stream.end();\n        return responseList;\n    }\n    async handleAgentCommunication(type, nodePath, request) {\n        // Encode message and sent\n        const agentMessage = AgentMessage.encode({ type: type, isResponse: false, nodePath: nodePath, subMessage: request }).finish();\n        const responseList = await this.sendRequestToAgent(agentMessage);\n        const agentMessageList = [];\n        for (const response of responseList) {\n            const { subMessage, type } = AgentMessage.decode(response);\n            if (type == Type.ERROR) {\n                const { error } = ErrorMessage.decode(subMessage);\n                const reason = new Error(error);\n                throw reason;\n            }\n            else {\n                agentMessageList.push(AgentMessage.decode(response));\n            }\n        }\n        return agentMessageList;\n    }\n    async registerNode(path, passphrase) {\n        const registerNodeRequest = RegisterNodeRequestMessage.encode({ passphrase }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.REGISTER_NODE, path, registerNodeRequest);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = RegisterNodeResponseMessage.decode(encodedResponse[0].subMessage);\n        return successful;\n    }\n    async newNode(path, name, email, passphrase, nbits) {\n        const newNodeRequest = NewNodeRequestMessage.encode({ name, email, passphrase, nbits }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.NEW_NODE, path, newNodeRequest);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = NewNodeResponseMessage.decode(encodedResponse[0].subMessage);\n        return successful;\n    }\n    async listNodes(unlockedOnly = true) {\n        const newNodeRequest = ListNodesRequestMessage.encode({ unlockedOnly }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.LIST_NODES, undefined, newNodeRequest);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { nodes } = ListNodesResponseMessage.decode(encodedResponse[0].subMessage);\n        return nodes;\n    }\n    /////////////////////\n    // Crypto commands //\n    /////////////////////\n    async deriveKey(nodePath, keyName, passphrase) {\n        const request = DeriveKeyRequestMessage.encode({ keyName, passphrase }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.DERIVE_KEY, nodePath, request);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = DeriveKeyResponseMessage.decode(encodedResponse[0].subMessage);\n        return successful;\n    }\n    /////////////////////\n    // Crypto commands //\n    /////////////////////\n    async signFile(nodePath, filePath, privateKeyPath, passphrase) {\n        const request = SignFileRequestMessage.encode({ filePath, privateKeyPath, passphrase }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.SIGN_FILE, nodePath, request);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { signaturePath } = SignFileResponseMessage.decode(encodedResponse[0].subMessage);\n        return signaturePath;\n    }\n    async verifyFile(nodePath, filePath, signaturePath) {\n        const request = VerifyFileRequestMessage.encode({ filePath, signaturePath }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.VERIFY_FILE, nodePath, request);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { verified } = VerifyFileResponseMessage.decode(encodedResponse[0].subMessage);\n        return verified;\n    }\n    //////////////////////\n    // Vault Operations //\n    //////////////////////\n    async listVaults(nodePath) {\n        const encodedResponse = await this.handleAgentCommunication(Type.LIST_VAULTS, nodePath);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { vaultNames } = ListVaultsResponseMessage.decode(encodedResponse[0].subMessage);\n        return vaultNames;\n    }\n    async newVault(nodePath, vaultName) {\n        const request = NewVaultRequestMessage.encode({ vaultName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.NEW_VAULT, nodePath, request);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = NewVaultResponseMessage.decode(encodedResponse[0].subMessage);\n        return successful;\n    }\n    async destroyVault(nodePath, vaultName) {\n        const request = DestroyVaultRequestMessage.encode({ vaultName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.DESTROY_VAULT, nodePath, request);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = DestroyVaultResponseMessage.decode(encodedResponse[0].subMessage);\n        return successful;\n    }\n    ///////////////////////\n    // Secret Operations //\n    ///////////////////////\n    async listSecrets(nodePath, vaultName) {\n        const request = ListSecretsRequestMessage.encode({ vaultName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.LIST_SECRETS, nodePath, request);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { secretNames } = ListSecretsResponseMessage.decode(encodedResponse[0].subMessage);\n        return secretNames;\n    }\n    async createSecret(nodePath, vaultName, secretName, secretPath) {\n        const request = CreateSecretRequestMessage.encode({ vaultName, secretName, secretPath }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.CREATE_SECRET, nodePath, request);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = CreateSecretResponseMessage.decode(encodedResponse[0].subMessage);\n        return successful;\n    }\n    async destroySecret(nodePath, vaultName, secretName) {\n        const request = DestroySecretRequestMessage.encode({ vaultName, secretName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.DESTROY_SECRET, nodePath, request);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = DestroySecretResponseMessage.decode(encodedResponse[0].subMessage);\n        return successful;\n    }\n    async getSecret(nodePath, vaultName, secretName) {\n        const request = GetSecretRequestMessage.encode({ vaultName, secretName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Type.GET_SECRET, nodePath, request);\n        if (encodedResponse.length == 0) {\n            throw Error('agent did not respond');\n        }\n        const { secret } = GetSecretResponseMessage.decode(encodedResponse[0].subMessage);\n        return Buffer.from(secret);\n    }\n    ///////////////////\n    // Agent control //\n    ///////////////////\n    async getAgentStatus() {\n        try {\n            const encodedResponse = await this.handleAgentCommunication(Type.STATUS);\n            if (encodedResponse.length == 0) {\n                throw Error('agent did not respond');\n            }\n            const status = encodedResponse[0].subMessage.toString();\n            return status;\n        }\n        catch (err) {\n            return 'stopped';\n        }\n    }\n    async stopAgent() {\n        try {\n            // Tell it to start shutting and wait for response\n            await this.handleAgentCommunication(Type.STOP_AGENT);\n            return true;\n        }\n        catch (err) {\n            return (await this.getAgentStatus() != 'online');\n        }\n    }\n}\nexports.default = PolykeyClient;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = require(\"base64-js\");","module.exports = require(\"ieee754\");","module.exports = require(\"isarray\");","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.agent = (function() {\n\n    /**\n     * Namespace agent.\n     * @exports agent\n     * @namespace\n     */\n    var agent = {};\n\n    /**\n     * Type enum.\n     * @name agent.Type\n     * @enum {number}\n     * @property {number} ERROR=0 ERROR value\n     * @property {number} STOP_AGENT=1 STOP_AGENT value\n     * @property {number} STATUS=2 STATUS value\n     * @property {number} REGISTER_NODE=3 REGISTER_NODE value\n     * @property {number} NEW_NODE=4 NEW_NODE value\n     * @property {number} LIST_NODES=5 LIST_NODES value\n     * @property {number} DERIVE_KEY=6 DERIVE_KEY value\n     * @property {number} SIGN_FILE=7 SIGN_FILE value\n     * @property {number} VERIFY_FILE=8 VERIFY_FILE value\n     * @property {number} LIST_VAULTS=9 LIST_VAULTS value\n     * @property {number} NEW_VAULT=10 NEW_VAULT value\n     * @property {number} DESTROY_VAULT=11 DESTROY_VAULT value\n     * @property {number} LIST_SECRETS=12 LIST_SECRETS value\n     * @property {number} CREATE_SECRET=13 CREATE_SECRET value\n     * @property {number} DESTROY_SECRET=14 DESTROY_SECRET value\n     * @property {number} GET_SECRET=15 GET_SECRET value\n     */\n    agent.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"ERROR\"] = 0;\n        values[valuesById[1] = \"STOP_AGENT\"] = 1;\n        values[valuesById[2] = \"STATUS\"] = 2;\n        values[valuesById[3] = \"REGISTER_NODE\"] = 3;\n        values[valuesById[4] = \"NEW_NODE\"] = 4;\n        values[valuesById[5] = \"LIST_NODES\"] = 5;\n        values[valuesById[6] = \"DERIVE_KEY\"] = 6;\n        values[valuesById[7] = \"SIGN_FILE\"] = 7;\n        values[valuesById[8] = \"VERIFY_FILE\"] = 8;\n        values[valuesById[9] = \"LIST_VAULTS\"] = 9;\n        values[valuesById[10] = \"NEW_VAULT\"] = 10;\n        values[valuesById[11] = \"DESTROY_VAULT\"] = 11;\n        values[valuesById[12] = \"LIST_SECRETS\"] = 12;\n        values[valuesById[13] = \"CREATE_SECRET\"] = 13;\n        values[valuesById[14] = \"DESTROY_SECRET\"] = 14;\n        values[valuesById[15] = \"GET_SECRET\"] = 15;\n        return values;\n    })();\n\n    agent.AgentMessage = (function() {\n\n        /**\n         * Properties of an AgentMessage.\n         * @memberof agent\n         * @interface IAgentMessage\n         * @property {agent.Type|null} [type] AgentMessage type\n         * @property {boolean|null} [isResponse] AgentMessage isResponse\n         * @property {string|null} [nodePath] AgentMessage nodePath\n         * @property {Uint8Array|null} [subMessage] AgentMessage subMessage\n         */\n\n        /**\n         * Constructs a new AgentMessage.\n         * @memberof agent\n         * @classdesc Represents an AgentMessage.\n         * @implements IAgentMessage\n         * @constructor\n         * @param {agent.IAgentMessage=} [p] Properties to set\n         */\n        function AgentMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * AgentMessage type.\n         * @member {agent.Type} type\n         * @memberof agent.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.type = 0;\n\n        /**\n         * AgentMessage isResponse.\n         * @member {boolean} isResponse\n         * @memberof agent.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.isResponse = false;\n\n        /**\n         * AgentMessage nodePath.\n         * @member {string} nodePath\n         * @memberof agent.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.nodePath = \"\";\n\n        /**\n         * AgentMessage subMessage.\n         * @member {Uint8Array} subMessage\n         * @memberof agent.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.subMessage = $util.newBuffer([]);\n\n        /**\n         * Creates a new AgentMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.AgentMessage\n         * @static\n         * @param {agent.IAgentMessage=} [properties] Properties to set\n         * @returns {agent.AgentMessage} AgentMessage instance\n         */\n        AgentMessage.create = function create(properties) {\n            return new AgentMessage(properties);\n        };\n\n        /**\n         * Encodes the specified AgentMessage message. Does not implicitly {@link agent.AgentMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.AgentMessage\n         * @static\n         * @param {agent.IAgentMessage} m AgentMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AgentMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.type != null && Object.hasOwnProperty.call(m, \"type\"))\n                w.uint32(8).int32(m.type);\n            if (m.isResponse != null && Object.hasOwnProperty.call(m, \"isResponse\"))\n                w.uint32(16).bool(m.isResponse);\n            if (m.nodePath != null && Object.hasOwnProperty.call(m, \"nodePath\"))\n                w.uint32(26).string(m.nodePath);\n            if (m.subMessage != null && Object.hasOwnProperty.call(m, \"subMessage\"))\n                w.uint32(34).bytes(m.subMessage);\n            return w;\n        };\n\n        /**\n         * Decodes an AgentMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.AgentMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.AgentMessage} AgentMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AgentMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.AgentMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.type = r.int32();\n                    break;\n                case 2:\n                    m.isResponse = r.bool();\n                    break;\n                case 3:\n                    m.nodePath = r.string();\n                    break;\n                case 4:\n                    m.subMessage = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return AgentMessage;\n    })();\n\n    agent.ErrorMessage = (function() {\n\n        /**\n         * Properties of an ErrorMessage.\n         * @memberof agent\n         * @interface IErrorMessage\n         * @property {string|null} [error] ErrorMessage error\n         */\n\n        /**\n         * Constructs a new ErrorMessage.\n         * @memberof agent\n         * @classdesc Represents an ErrorMessage.\n         * @implements IErrorMessage\n         * @constructor\n         * @param {agent.IErrorMessage=} [p] Properties to set\n         */\n        function ErrorMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ErrorMessage error.\n         * @member {string} error\n         * @memberof agent.ErrorMessage\n         * @instance\n         */\n        ErrorMessage.prototype.error = \"\";\n\n        /**\n         * Creates a new ErrorMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ErrorMessage\n         * @static\n         * @param {agent.IErrorMessage=} [properties] Properties to set\n         * @returns {agent.ErrorMessage} ErrorMessage instance\n         */\n        ErrorMessage.create = function create(properties) {\n            return new ErrorMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ErrorMessage message. Does not implicitly {@link agent.ErrorMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ErrorMessage\n         * @static\n         * @param {agent.IErrorMessage} m ErrorMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.error != null && Object.hasOwnProperty.call(m, \"error\"))\n                w.uint32(10).string(m.error);\n            return w;\n        };\n\n        /**\n         * Decodes an ErrorMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ErrorMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ErrorMessage} ErrorMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ErrorMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.error = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ErrorMessage;\n    })();\n\n    agent.RegisterNodeRequestMessage = (function() {\n\n        /**\n         * Properties of a RegisterNodeRequestMessage.\n         * @memberof agent\n         * @interface IRegisterNodeRequestMessage\n         * @property {string|null} [passphrase] RegisterNodeRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new RegisterNodeRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a RegisterNodeRequestMessage.\n         * @implements IRegisterNodeRequestMessage\n         * @constructor\n         * @param {agent.IRegisterNodeRequestMessage=} [p] Properties to set\n         */\n        function RegisterNodeRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RegisterNodeRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agent.RegisterNodeRequestMessage\n         * @instance\n         */\n        RegisterNodeRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new RegisterNodeRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.RegisterNodeRequestMessage\n         * @static\n         * @param {agent.IRegisterNodeRequestMessage=} [properties] Properties to set\n         * @returns {agent.RegisterNodeRequestMessage} RegisterNodeRequestMessage instance\n         */\n        RegisterNodeRequestMessage.create = function create(properties) {\n            return new RegisterNodeRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified RegisterNodeRequestMessage message. Does not implicitly {@link agent.RegisterNodeRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.RegisterNodeRequestMessage\n         * @static\n         * @param {agent.IRegisterNodeRequestMessage} m RegisterNodeRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RegisterNodeRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(10).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Decodes a RegisterNodeRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.RegisterNodeRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.RegisterNodeRequestMessage} RegisterNodeRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RegisterNodeRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.RegisterNodeRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return RegisterNodeRequestMessage;\n    })();\n\n    agent.RegisterNodeResponseMessage = (function() {\n\n        /**\n         * Properties of a RegisterNodeResponseMessage.\n         * @memberof agent\n         * @interface IRegisterNodeResponseMessage\n         * @property {boolean|null} [successful] RegisterNodeResponseMessage successful\n         */\n\n        /**\n         * Constructs a new RegisterNodeResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a RegisterNodeResponseMessage.\n         * @implements IRegisterNodeResponseMessage\n         * @constructor\n         * @param {agent.IRegisterNodeResponseMessage=} [p] Properties to set\n         */\n        function RegisterNodeResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RegisterNodeResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.RegisterNodeResponseMessage\n         * @instance\n         */\n        RegisterNodeResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new RegisterNodeResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.RegisterNodeResponseMessage\n         * @static\n         * @param {agent.IRegisterNodeResponseMessage=} [properties] Properties to set\n         * @returns {agent.RegisterNodeResponseMessage} RegisterNodeResponseMessage instance\n         */\n        RegisterNodeResponseMessage.create = function create(properties) {\n            return new RegisterNodeResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified RegisterNodeResponseMessage message. Does not implicitly {@link agent.RegisterNodeResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.RegisterNodeResponseMessage\n         * @static\n         * @param {agent.IRegisterNodeResponseMessage} m RegisterNodeResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RegisterNodeResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a RegisterNodeResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.RegisterNodeResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.RegisterNodeResponseMessage} RegisterNodeResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RegisterNodeResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.RegisterNodeResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return RegisterNodeResponseMessage;\n    })();\n\n    agent.NewNodeRequestMessage = (function() {\n\n        /**\n         * Properties of a NewNodeRequestMessage.\n         * @memberof agent\n         * @interface INewNodeRequestMessage\n         * @property {string|null} [name] NewNodeRequestMessage name\n         * @property {string|null} [email] NewNodeRequestMessage email\n         * @property {string|null} [passphrase] NewNodeRequestMessage passphrase\n         * @property {number|null} [nbits] NewNodeRequestMessage nbits\n         */\n\n        /**\n         * Constructs a new NewNodeRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a NewNodeRequestMessage.\n         * @implements INewNodeRequestMessage\n         * @constructor\n         * @param {agent.INewNodeRequestMessage=} [p] Properties to set\n         */\n        function NewNodeRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewNodeRequestMessage name.\n         * @member {string} name\n         * @memberof agent.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.name = \"\";\n\n        /**\n         * NewNodeRequestMessage email.\n         * @member {string} email\n         * @memberof agent.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.email = \"\";\n\n        /**\n         * NewNodeRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agent.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * NewNodeRequestMessage nbits.\n         * @member {number} nbits\n         * @memberof agent.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.nbits = 0;\n\n        /**\n         * Creates a new NewNodeRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.NewNodeRequestMessage\n         * @static\n         * @param {agent.INewNodeRequestMessage=} [properties] Properties to set\n         * @returns {agent.NewNodeRequestMessage} NewNodeRequestMessage instance\n         */\n        NewNodeRequestMessage.create = function create(properties) {\n            return new NewNodeRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewNodeRequestMessage message. Does not implicitly {@link agent.NewNodeRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.NewNodeRequestMessage\n         * @static\n         * @param {agent.INewNodeRequestMessage} m NewNodeRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewNodeRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.name != null && Object.hasOwnProperty.call(m, \"name\"))\n                w.uint32(10).string(m.name);\n            if (m.email != null && Object.hasOwnProperty.call(m, \"email\"))\n                w.uint32(18).string(m.email);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(26).string(m.passphrase);\n            if (m.nbits != null && Object.hasOwnProperty.call(m, \"nbits\"))\n                w.uint32(32).int32(m.nbits);\n            return w;\n        };\n\n        /**\n         * Decodes a NewNodeRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.NewNodeRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.NewNodeRequestMessage} NewNodeRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewNodeRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.NewNodeRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.name = r.string();\n                    break;\n                case 2:\n                    m.email = r.string();\n                    break;\n                case 3:\n                    m.passphrase = r.string();\n                    break;\n                case 4:\n                    m.nbits = r.int32();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NewNodeRequestMessage;\n    })();\n\n    agent.NewNodeResponseMessage = (function() {\n\n        /**\n         * Properties of a NewNodeResponseMessage.\n         * @memberof agent\n         * @interface INewNodeResponseMessage\n         * @property {boolean|null} [successful] NewNodeResponseMessage successful\n         */\n\n        /**\n         * Constructs a new NewNodeResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a NewNodeResponseMessage.\n         * @implements INewNodeResponseMessage\n         * @constructor\n         * @param {agent.INewNodeResponseMessage=} [p] Properties to set\n         */\n        function NewNodeResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewNodeResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.NewNodeResponseMessage\n         * @instance\n         */\n        NewNodeResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new NewNodeResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.NewNodeResponseMessage\n         * @static\n         * @param {agent.INewNodeResponseMessage=} [properties] Properties to set\n         * @returns {agent.NewNodeResponseMessage} NewNodeResponseMessage instance\n         */\n        NewNodeResponseMessage.create = function create(properties) {\n            return new NewNodeResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewNodeResponseMessage message. Does not implicitly {@link agent.NewNodeResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.NewNodeResponseMessage\n         * @static\n         * @param {agent.INewNodeResponseMessage} m NewNodeResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewNodeResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a NewNodeResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.NewNodeResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.NewNodeResponseMessage} NewNodeResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewNodeResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.NewNodeResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NewNodeResponseMessage;\n    })();\n\n    agent.ListNodesRequestMessage = (function() {\n\n        /**\n         * Properties of a ListNodesRequestMessage.\n         * @memberof agent\n         * @interface IListNodesRequestMessage\n         * @property {boolean|null} [unlockedOnly] ListNodesRequestMessage unlockedOnly\n         */\n\n        /**\n         * Constructs a new ListNodesRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a ListNodesRequestMessage.\n         * @implements IListNodesRequestMessage\n         * @constructor\n         * @param {agent.IListNodesRequestMessage=} [p] Properties to set\n         */\n        function ListNodesRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListNodesRequestMessage unlockedOnly.\n         * @member {boolean} unlockedOnly\n         * @memberof agent.ListNodesRequestMessage\n         * @instance\n         */\n        ListNodesRequestMessage.prototype.unlockedOnly = false;\n\n        /**\n         * Creates a new ListNodesRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListNodesRequestMessage\n         * @static\n         * @param {agent.IListNodesRequestMessage=} [properties] Properties to set\n         * @returns {agent.ListNodesRequestMessage} ListNodesRequestMessage instance\n         */\n        ListNodesRequestMessage.create = function create(properties) {\n            return new ListNodesRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListNodesRequestMessage message. Does not implicitly {@link agent.ListNodesRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListNodesRequestMessage\n         * @static\n         * @param {agent.IListNodesRequestMessage} m ListNodesRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListNodesRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.unlockedOnly != null && Object.hasOwnProperty.call(m, \"unlockedOnly\"))\n                w.uint32(8).bool(m.unlockedOnly);\n            return w;\n        };\n\n        /**\n         * Decodes a ListNodesRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListNodesRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListNodesRequestMessage} ListNodesRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListNodesRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListNodesRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.unlockedOnly = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListNodesRequestMessage;\n    })();\n\n    agent.ListNodesResponseMessage = (function() {\n\n        /**\n         * Properties of a ListNodesResponseMessage.\n         * @memberof agent\n         * @interface IListNodesResponseMessage\n         * @property {Array.<string>|null} [nodes] ListNodesResponseMessage nodes\n         */\n\n        /**\n         * Constructs a new ListNodesResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a ListNodesResponseMessage.\n         * @implements IListNodesResponseMessage\n         * @constructor\n         * @param {agent.IListNodesResponseMessage=} [p] Properties to set\n         */\n        function ListNodesResponseMessage(p) {\n            this.nodes = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListNodesResponseMessage nodes.\n         * @member {Array.<string>} nodes\n         * @memberof agent.ListNodesResponseMessage\n         * @instance\n         */\n        ListNodesResponseMessage.prototype.nodes = $util.emptyArray;\n\n        /**\n         * Creates a new ListNodesResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListNodesResponseMessage\n         * @static\n         * @param {agent.IListNodesResponseMessage=} [properties] Properties to set\n         * @returns {agent.ListNodesResponseMessage} ListNodesResponseMessage instance\n         */\n        ListNodesResponseMessage.create = function create(properties) {\n            return new ListNodesResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListNodesResponseMessage message. Does not implicitly {@link agent.ListNodesResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListNodesResponseMessage\n         * @static\n         * @param {agent.IListNodesResponseMessage} m ListNodesResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListNodesResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.nodes != null && m.nodes.length) {\n                for (var i = 0; i < m.nodes.length; ++i)\n                    w.uint32(10).string(m.nodes[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Decodes a ListNodesResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListNodesResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListNodesResponseMessage} ListNodesResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListNodesResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListNodesResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.nodes && m.nodes.length))\n                        m.nodes = [];\n                    m.nodes.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListNodesResponseMessage;\n    })();\n\n    agent.SignFileRequestMessage = (function() {\n\n        /**\n         * Properties of a SignFileRequestMessage.\n         * @memberof agent\n         * @interface ISignFileRequestMessage\n         * @property {string|null} [filePath] SignFileRequestMessage filePath\n         * @property {string|null} [privateKeyPath] SignFileRequestMessage privateKeyPath\n         * @property {string|null} [passphrase] SignFileRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new SignFileRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a SignFileRequestMessage.\n         * @implements ISignFileRequestMessage\n         * @constructor\n         * @param {agent.ISignFileRequestMessage=} [p] Properties to set\n         */\n        function SignFileRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * SignFileRequestMessage filePath.\n         * @member {string} filePath\n         * @memberof agent.SignFileRequestMessage\n         * @instance\n         */\n        SignFileRequestMessage.prototype.filePath = \"\";\n\n        /**\n         * SignFileRequestMessage privateKeyPath.\n         * @member {string} privateKeyPath\n         * @memberof agent.SignFileRequestMessage\n         * @instance\n         */\n        SignFileRequestMessage.prototype.privateKeyPath = \"\";\n\n        /**\n         * SignFileRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agent.SignFileRequestMessage\n         * @instance\n         */\n        SignFileRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new SignFileRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.SignFileRequestMessage\n         * @static\n         * @param {agent.ISignFileRequestMessage=} [properties] Properties to set\n         * @returns {agent.SignFileRequestMessage} SignFileRequestMessage instance\n         */\n        SignFileRequestMessage.create = function create(properties) {\n            return new SignFileRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified SignFileRequestMessage message. Does not implicitly {@link agent.SignFileRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.SignFileRequestMessage\n         * @static\n         * @param {agent.ISignFileRequestMessage} m SignFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SignFileRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.filePath != null && Object.hasOwnProperty.call(m, \"filePath\"))\n                w.uint32(10).string(m.filePath);\n            if (m.privateKeyPath != null && Object.hasOwnProperty.call(m, \"privateKeyPath\"))\n                w.uint32(18).string(m.privateKeyPath);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(26).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Decodes a SignFileRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.SignFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.SignFileRequestMessage} SignFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SignFileRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.SignFileRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filePath = r.string();\n                    break;\n                case 2:\n                    m.privateKeyPath = r.string();\n                    break;\n                case 3:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return SignFileRequestMessage;\n    })();\n\n    agent.SignFileResponseMessage = (function() {\n\n        /**\n         * Properties of a SignFileResponseMessage.\n         * @memberof agent\n         * @interface ISignFileResponseMessage\n         * @property {string|null} [signaturePath] SignFileResponseMessage signaturePath\n         */\n\n        /**\n         * Constructs a new SignFileResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a SignFileResponseMessage.\n         * @implements ISignFileResponseMessage\n         * @constructor\n         * @param {agent.ISignFileResponseMessage=} [p] Properties to set\n         */\n        function SignFileResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * SignFileResponseMessage signaturePath.\n         * @member {string} signaturePath\n         * @memberof agent.SignFileResponseMessage\n         * @instance\n         */\n        SignFileResponseMessage.prototype.signaturePath = \"\";\n\n        /**\n         * Creates a new SignFileResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.SignFileResponseMessage\n         * @static\n         * @param {agent.ISignFileResponseMessage=} [properties] Properties to set\n         * @returns {agent.SignFileResponseMessage} SignFileResponseMessage instance\n         */\n        SignFileResponseMessage.create = function create(properties) {\n            return new SignFileResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified SignFileResponseMessage message. Does not implicitly {@link agent.SignFileResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.SignFileResponseMessage\n         * @static\n         * @param {agent.ISignFileResponseMessage} m SignFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SignFileResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.signaturePath != null && Object.hasOwnProperty.call(m, \"signaturePath\"))\n                w.uint32(10).string(m.signaturePath);\n            return w;\n        };\n\n        /**\n         * Decodes a SignFileResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.SignFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.SignFileResponseMessage} SignFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SignFileResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.SignFileResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.signaturePath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return SignFileResponseMessage;\n    })();\n\n    agent.VerifyFileRequestMessage = (function() {\n\n        /**\n         * Properties of a VerifyFileRequestMessage.\n         * @memberof agent\n         * @interface IVerifyFileRequestMessage\n         * @property {string|null} [filePath] VerifyFileRequestMessage filePath\n         * @property {string|null} [signaturePath] VerifyFileRequestMessage signaturePath\n         */\n\n        /**\n         * Constructs a new VerifyFileRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a VerifyFileRequestMessage.\n         * @implements IVerifyFileRequestMessage\n         * @constructor\n         * @param {agent.IVerifyFileRequestMessage=} [p] Properties to set\n         */\n        function VerifyFileRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * VerifyFileRequestMessage filePath.\n         * @member {string} filePath\n         * @memberof agent.VerifyFileRequestMessage\n         * @instance\n         */\n        VerifyFileRequestMessage.prototype.filePath = \"\";\n\n        /**\n         * VerifyFileRequestMessage signaturePath.\n         * @member {string} signaturePath\n         * @memberof agent.VerifyFileRequestMessage\n         * @instance\n         */\n        VerifyFileRequestMessage.prototype.signaturePath = \"\";\n\n        /**\n         * Creates a new VerifyFileRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.VerifyFileRequestMessage\n         * @static\n         * @param {agent.IVerifyFileRequestMessage=} [properties] Properties to set\n         * @returns {agent.VerifyFileRequestMessage} VerifyFileRequestMessage instance\n         */\n        VerifyFileRequestMessage.create = function create(properties) {\n            return new VerifyFileRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified VerifyFileRequestMessage message. Does not implicitly {@link agent.VerifyFileRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.VerifyFileRequestMessage\n         * @static\n         * @param {agent.IVerifyFileRequestMessage} m VerifyFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        VerifyFileRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.filePath != null && Object.hasOwnProperty.call(m, \"filePath\"))\n                w.uint32(10).string(m.filePath);\n            if (m.signaturePath != null && Object.hasOwnProperty.call(m, \"signaturePath\"))\n                w.uint32(18).string(m.signaturePath);\n            return w;\n        };\n\n        /**\n         * Decodes a VerifyFileRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.VerifyFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.VerifyFileRequestMessage} VerifyFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        VerifyFileRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.VerifyFileRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filePath = r.string();\n                    break;\n                case 2:\n                    m.signaturePath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return VerifyFileRequestMessage;\n    })();\n\n    agent.VerifyFileResponseMessage = (function() {\n\n        /**\n         * Properties of a VerifyFileResponseMessage.\n         * @memberof agent\n         * @interface IVerifyFileResponseMessage\n         * @property {boolean|null} [verified] VerifyFileResponseMessage verified\n         */\n\n        /**\n         * Constructs a new VerifyFileResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a VerifyFileResponseMessage.\n         * @implements IVerifyFileResponseMessage\n         * @constructor\n         * @param {agent.IVerifyFileResponseMessage=} [p] Properties to set\n         */\n        function VerifyFileResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * VerifyFileResponseMessage verified.\n         * @member {boolean} verified\n         * @memberof agent.VerifyFileResponseMessage\n         * @instance\n         */\n        VerifyFileResponseMessage.prototype.verified = false;\n\n        /**\n         * Creates a new VerifyFileResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.VerifyFileResponseMessage\n         * @static\n         * @param {agent.IVerifyFileResponseMessage=} [properties] Properties to set\n         * @returns {agent.VerifyFileResponseMessage} VerifyFileResponseMessage instance\n         */\n        VerifyFileResponseMessage.create = function create(properties) {\n            return new VerifyFileResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified VerifyFileResponseMessage message. Does not implicitly {@link agent.VerifyFileResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.VerifyFileResponseMessage\n         * @static\n         * @param {agent.IVerifyFileResponseMessage} m VerifyFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        VerifyFileResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.verified != null && Object.hasOwnProperty.call(m, \"verified\"))\n                w.uint32(8).bool(m.verified);\n            return w;\n        };\n\n        /**\n         * Decodes a VerifyFileResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.VerifyFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.VerifyFileResponseMessage} VerifyFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        VerifyFileResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.VerifyFileResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.verified = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return VerifyFileResponseMessage;\n    })();\n\n    agent.ListVaultsRequestMessage = (function() {\n\n        /**\n         * Properties of a ListVaultsRequestMessage.\n         * @memberof agent\n         * @interface IListVaultsRequestMessage\n         */\n\n        /**\n         * Constructs a new ListVaultsRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a ListVaultsRequestMessage.\n         * @implements IListVaultsRequestMessage\n         * @constructor\n         * @param {agent.IListVaultsRequestMessage=} [p] Properties to set\n         */\n        function ListVaultsRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Creates a new ListVaultsRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListVaultsRequestMessage\n         * @static\n         * @param {agent.IListVaultsRequestMessage=} [properties] Properties to set\n         * @returns {agent.ListVaultsRequestMessage} ListVaultsRequestMessage instance\n         */\n        ListVaultsRequestMessage.create = function create(properties) {\n            return new ListVaultsRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListVaultsRequestMessage message. Does not implicitly {@link agent.ListVaultsRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListVaultsRequestMessage\n         * @static\n         * @param {agent.IListVaultsRequestMessage} m ListVaultsRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListVaultsRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            return w;\n        };\n\n        /**\n         * Decodes a ListVaultsRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListVaultsRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListVaultsRequestMessage} ListVaultsRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListVaultsRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListVaultsRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListVaultsRequestMessage;\n    })();\n\n    agent.ListVaultsResponseMessage = (function() {\n\n        /**\n         * Properties of a ListVaultsResponseMessage.\n         * @memberof agent\n         * @interface IListVaultsResponseMessage\n         * @property {Array.<string>|null} [vaultNames] ListVaultsResponseMessage vaultNames\n         */\n\n        /**\n         * Constructs a new ListVaultsResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a ListVaultsResponseMessage.\n         * @implements IListVaultsResponseMessage\n         * @constructor\n         * @param {agent.IListVaultsResponseMessage=} [p] Properties to set\n         */\n        function ListVaultsResponseMessage(p) {\n            this.vaultNames = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListVaultsResponseMessage vaultNames.\n         * @member {Array.<string>} vaultNames\n         * @memberof agent.ListVaultsResponseMessage\n         * @instance\n         */\n        ListVaultsResponseMessage.prototype.vaultNames = $util.emptyArray;\n\n        /**\n         * Creates a new ListVaultsResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListVaultsResponseMessage\n         * @static\n         * @param {agent.IListVaultsResponseMessage=} [properties] Properties to set\n         * @returns {agent.ListVaultsResponseMessage} ListVaultsResponseMessage instance\n         */\n        ListVaultsResponseMessage.create = function create(properties) {\n            return new ListVaultsResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListVaultsResponseMessage message. Does not implicitly {@link agent.ListVaultsResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListVaultsResponseMessage\n         * @static\n         * @param {agent.IListVaultsResponseMessage} m ListVaultsResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListVaultsResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultNames != null && m.vaultNames.length) {\n                for (var i = 0; i < m.vaultNames.length; ++i)\n                    w.uint32(10).string(m.vaultNames[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Decodes a ListVaultsResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListVaultsResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListVaultsResponseMessage} ListVaultsResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListVaultsResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListVaultsResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.vaultNames && m.vaultNames.length))\n                        m.vaultNames = [];\n                    m.vaultNames.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListVaultsResponseMessage;\n    })();\n\n    agent.NewVaultRequestMessage = (function() {\n\n        /**\n         * Properties of a NewVaultRequestMessage.\n         * @memberof agent\n         * @interface INewVaultRequestMessage\n         * @property {string|null} [vaultName] NewVaultRequestMessage vaultName\n         */\n\n        /**\n         * Constructs a new NewVaultRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a NewVaultRequestMessage.\n         * @implements INewVaultRequestMessage\n         * @constructor\n         * @param {agent.INewVaultRequestMessage=} [p] Properties to set\n         */\n        function NewVaultRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewVaultRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.NewVaultRequestMessage\n         * @instance\n         */\n        NewVaultRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * Creates a new NewVaultRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.NewVaultRequestMessage\n         * @static\n         * @param {agent.INewVaultRequestMessage=} [properties] Properties to set\n         * @returns {agent.NewVaultRequestMessage} NewVaultRequestMessage instance\n         */\n        NewVaultRequestMessage.create = function create(properties) {\n            return new NewVaultRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewVaultRequestMessage message. Does not implicitly {@link agent.NewVaultRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.NewVaultRequestMessage\n         * @static\n         * @param {agent.INewVaultRequestMessage} m NewVaultRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewVaultRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            return w;\n        };\n\n        /**\n         * Decodes a NewVaultRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.NewVaultRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.NewVaultRequestMessage} NewVaultRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewVaultRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.NewVaultRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NewVaultRequestMessage;\n    })();\n\n    agent.NewVaultResponseMessage = (function() {\n\n        /**\n         * Properties of a NewVaultResponseMessage.\n         * @memberof agent\n         * @interface INewVaultResponseMessage\n         * @property {boolean|null} [successful] NewVaultResponseMessage successful\n         */\n\n        /**\n         * Constructs a new NewVaultResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a NewVaultResponseMessage.\n         * @implements INewVaultResponseMessage\n         * @constructor\n         * @param {agent.INewVaultResponseMessage=} [p] Properties to set\n         */\n        function NewVaultResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewVaultResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.NewVaultResponseMessage\n         * @instance\n         */\n        NewVaultResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new NewVaultResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.NewVaultResponseMessage\n         * @static\n         * @param {agent.INewVaultResponseMessage=} [properties] Properties to set\n         * @returns {agent.NewVaultResponseMessage} NewVaultResponseMessage instance\n         */\n        NewVaultResponseMessage.create = function create(properties) {\n            return new NewVaultResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewVaultResponseMessage message. Does not implicitly {@link agent.NewVaultResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.NewVaultResponseMessage\n         * @static\n         * @param {agent.INewVaultResponseMessage} m NewVaultResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewVaultResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a NewVaultResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.NewVaultResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.NewVaultResponseMessage} NewVaultResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewVaultResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.NewVaultResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NewVaultResponseMessage;\n    })();\n\n    agent.DestroyVaultRequestMessage = (function() {\n\n        /**\n         * Properties of a DestroyVaultRequestMessage.\n         * @memberof agent\n         * @interface IDestroyVaultRequestMessage\n         * @property {string|null} [vaultName] DestroyVaultRequestMessage vaultName\n         */\n\n        /**\n         * Constructs a new DestroyVaultRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a DestroyVaultRequestMessage.\n         * @implements IDestroyVaultRequestMessage\n         * @constructor\n         * @param {agent.IDestroyVaultRequestMessage=} [p] Properties to set\n         */\n        function DestroyVaultRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroyVaultRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.DestroyVaultRequestMessage\n         * @instance\n         */\n        DestroyVaultRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * Creates a new DestroyVaultRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DestroyVaultRequestMessage\n         * @static\n         * @param {agent.IDestroyVaultRequestMessage=} [properties] Properties to set\n         * @returns {agent.DestroyVaultRequestMessage} DestroyVaultRequestMessage instance\n         */\n        DestroyVaultRequestMessage.create = function create(properties) {\n            return new DestroyVaultRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroyVaultRequestMessage message. Does not implicitly {@link agent.DestroyVaultRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DestroyVaultRequestMessage\n         * @static\n         * @param {agent.IDestroyVaultRequestMessage} m DestroyVaultRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroyVaultRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            return w;\n        };\n\n        /**\n         * Decodes a DestroyVaultRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DestroyVaultRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DestroyVaultRequestMessage} DestroyVaultRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroyVaultRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DestroyVaultRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DestroyVaultRequestMessage;\n    })();\n\n    agent.DestroyVaultResponseMessage = (function() {\n\n        /**\n         * Properties of a DestroyVaultResponseMessage.\n         * @memberof agent\n         * @interface IDestroyVaultResponseMessage\n         * @property {boolean|null} [successful] DestroyVaultResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DestroyVaultResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a DestroyVaultResponseMessage.\n         * @implements IDestroyVaultResponseMessage\n         * @constructor\n         * @param {agent.IDestroyVaultResponseMessage=} [p] Properties to set\n         */\n        function DestroyVaultResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroyVaultResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.DestroyVaultResponseMessage\n         * @instance\n         */\n        DestroyVaultResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DestroyVaultResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DestroyVaultResponseMessage\n         * @static\n         * @param {agent.IDestroyVaultResponseMessage=} [properties] Properties to set\n         * @returns {agent.DestroyVaultResponseMessage} DestroyVaultResponseMessage instance\n         */\n        DestroyVaultResponseMessage.create = function create(properties) {\n            return new DestroyVaultResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroyVaultResponseMessage message. Does not implicitly {@link agent.DestroyVaultResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DestroyVaultResponseMessage\n         * @static\n         * @param {agent.IDestroyVaultResponseMessage} m DestroyVaultResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroyVaultResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a DestroyVaultResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DestroyVaultResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DestroyVaultResponseMessage} DestroyVaultResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroyVaultResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DestroyVaultResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DestroyVaultResponseMessage;\n    })();\n\n    agent.ListSecretsRequestMessage = (function() {\n\n        /**\n         * Properties of a ListSecretsRequestMessage.\n         * @memberof agent\n         * @interface IListSecretsRequestMessage\n         * @property {string|null} [vaultName] ListSecretsRequestMessage vaultName\n         */\n\n        /**\n         * Constructs a new ListSecretsRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a ListSecretsRequestMessage.\n         * @implements IListSecretsRequestMessage\n         * @constructor\n         * @param {agent.IListSecretsRequestMessage=} [p] Properties to set\n         */\n        function ListSecretsRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListSecretsRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.ListSecretsRequestMessage\n         * @instance\n         */\n        ListSecretsRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * Creates a new ListSecretsRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListSecretsRequestMessage\n         * @static\n         * @param {agent.IListSecretsRequestMessage=} [properties] Properties to set\n         * @returns {agent.ListSecretsRequestMessage} ListSecretsRequestMessage instance\n         */\n        ListSecretsRequestMessage.create = function create(properties) {\n            return new ListSecretsRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListSecretsRequestMessage message. Does not implicitly {@link agent.ListSecretsRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListSecretsRequestMessage\n         * @static\n         * @param {agent.IListSecretsRequestMessage} m ListSecretsRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListSecretsRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            return w;\n        };\n\n        /**\n         * Decodes a ListSecretsRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListSecretsRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListSecretsRequestMessage} ListSecretsRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListSecretsRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListSecretsRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListSecretsRequestMessage;\n    })();\n\n    agent.ListSecretsResponseMessage = (function() {\n\n        /**\n         * Properties of a ListSecretsResponseMessage.\n         * @memberof agent\n         * @interface IListSecretsResponseMessage\n         * @property {Array.<string>|null} [secretNames] ListSecretsResponseMessage secretNames\n         */\n\n        /**\n         * Constructs a new ListSecretsResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a ListSecretsResponseMessage.\n         * @implements IListSecretsResponseMessage\n         * @constructor\n         * @param {agent.IListSecretsResponseMessage=} [p] Properties to set\n         */\n        function ListSecretsResponseMessage(p) {\n            this.secretNames = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListSecretsResponseMessage secretNames.\n         * @member {Array.<string>} secretNames\n         * @memberof agent.ListSecretsResponseMessage\n         * @instance\n         */\n        ListSecretsResponseMessage.prototype.secretNames = $util.emptyArray;\n\n        /**\n         * Creates a new ListSecretsResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.ListSecretsResponseMessage\n         * @static\n         * @param {agent.IListSecretsResponseMessage=} [properties] Properties to set\n         * @returns {agent.ListSecretsResponseMessage} ListSecretsResponseMessage instance\n         */\n        ListSecretsResponseMessage.create = function create(properties) {\n            return new ListSecretsResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListSecretsResponseMessage message. Does not implicitly {@link agent.ListSecretsResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.ListSecretsResponseMessage\n         * @static\n         * @param {agent.IListSecretsResponseMessage} m ListSecretsResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListSecretsResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.secretNames != null && m.secretNames.length) {\n                for (var i = 0; i < m.secretNames.length; ++i)\n                    w.uint32(10).string(m.secretNames[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Decodes a ListSecretsResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.ListSecretsResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.ListSecretsResponseMessage} ListSecretsResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListSecretsResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.ListSecretsResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.secretNames && m.secretNames.length))\n                        m.secretNames = [];\n                    m.secretNames.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return ListSecretsResponseMessage;\n    })();\n\n    agent.CreateSecretRequestMessage = (function() {\n\n        /**\n         * Properties of a CreateSecretRequestMessage.\n         * @memberof agent\n         * @interface ICreateSecretRequestMessage\n         * @property {string|null} [vaultName] CreateSecretRequestMessage vaultName\n         * @property {string|null} [secretName] CreateSecretRequestMessage secretName\n         * @property {string|null} [secretPath] CreateSecretRequestMessage secretPath\n         */\n\n        /**\n         * Constructs a new CreateSecretRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a CreateSecretRequestMessage.\n         * @implements ICreateSecretRequestMessage\n         * @constructor\n         * @param {agent.ICreateSecretRequestMessage=} [p] Properties to set\n         */\n        function CreateSecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * CreateSecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * CreateSecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agent.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * CreateSecretRequestMessage secretPath.\n         * @member {string} secretPath\n         * @memberof agent.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.secretPath = \"\";\n\n        /**\n         * Creates a new CreateSecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.CreateSecretRequestMessage\n         * @static\n         * @param {agent.ICreateSecretRequestMessage=} [properties] Properties to set\n         * @returns {agent.CreateSecretRequestMessage} CreateSecretRequestMessage instance\n         */\n        CreateSecretRequestMessage.create = function create(properties) {\n            return new CreateSecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified CreateSecretRequestMessage message. Does not implicitly {@link agent.CreateSecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.CreateSecretRequestMessage\n         * @static\n         * @param {agent.ICreateSecretRequestMessage} m CreateSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateSecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            if (m.secretPath != null && Object.hasOwnProperty.call(m, \"secretPath\"))\n                w.uint32(26).string(m.secretPath);\n            return w;\n        };\n\n        /**\n         * Decodes a CreateSecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.CreateSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.CreateSecretRequestMessage} CreateSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateSecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.CreateSecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                case 3:\n                    m.secretPath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return CreateSecretRequestMessage;\n    })();\n\n    agent.CreateSecretResponseMessage = (function() {\n\n        /**\n         * Properties of a CreateSecretResponseMessage.\n         * @memberof agent\n         * @interface ICreateSecretResponseMessage\n         * @property {boolean|null} [successful] CreateSecretResponseMessage successful\n         */\n\n        /**\n         * Constructs a new CreateSecretResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a CreateSecretResponseMessage.\n         * @implements ICreateSecretResponseMessage\n         * @constructor\n         * @param {agent.ICreateSecretResponseMessage=} [p] Properties to set\n         */\n        function CreateSecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * CreateSecretResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.CreateSecretResponseMessage\n         * @instance\n         */\n        CreateSecretResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new CreateSecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.CreateSecretResponseMessage\n         * @static\n         * @param {agent.ICreateSecretResponseMessage=} [properties] Properties to set\n         * @returns {agent.CreateSecretResponseMessage} CreateSecretResponseMessage instance\n         */\n        CreateSecretResponseMessage.create = function create(properties) {\n            return new CreateSecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified CreateSecretResponseMessage message. Does not implicitly {@link agent.CreateSecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.CreateSecretResponseMessage\n         * @static\n         * @param {agent.ICreateSecretResponseMessage} m CreateSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateSecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a CreateSecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.CreateSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.CreateSecretResponseMessage} CreateSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateSecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.CreateSecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return CreateSecretResponseMessage;\n    })();\n\n    agent.DestroySecretRequestMessage = (function() {\n\n        /**\n         * Properties of a DestroySecretRequestMessage.\n         * @memberof agent\n         * @interface IDestroySecretRequestMessage\n         * @property {string|null} [vaultName] DestroySecretRequestMessage vaultName\n         * @property {string|null} [secretName] DestroySecretRequestMessage secretName\n         */\n\n        /**\n         * Constructs a new DestroySecretRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a DestroySecretRequestMessage.\n         * @implements IDestroySecretRequestMessage\n         * @constructor\n         * @param {agent.IDestroySecretRequestMessage=} [p] Properties to set\n         */\n        function DestroySecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroySecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.DestroySecretRequestMessage\n         * @instance\n         */\n        DestroySecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * DestroySecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agent.DestroySecretRequestMessage\n         * @instance\n         */\n        DestroySecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * Creates a new DestroySecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DestroySecretRequestMessage\n         * @static\n         * @param {agent.IDestroySecretRequestMessage=} [properties] Properties to set\n         * @returns {agent.DestroySecretRequestMessage} DestroySecretRequestMessage instance\n         */\n        DestroySecretRequestMessage.create = function create(properties) {\n            return new DestroySecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroySecretRequestMessage message. Does not implicitly {@link agent.DestroySecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DestroySecretRequestMessage\n         * @static\n         * @param {agent.IDestroySecretRequestMessage} m DestroySecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroySecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            return w;\n        };\n\n        /**\n         * Decodes a DestroySecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DestroySecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DestroySecretRequestMessage} DestroySecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroySecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DestroySecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DestroySecretRequestMessage;\n    })();\n\n    agent.DestroySecretResponseMessage = (function() {\n\n        /**\n         * Properties of a DestroySecretResponseMessage.\n         * @memberof agent\n         * @interface IDestroySecretResponseMessage\n         * @property {boolean|null} [successful] DestroySecretResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DestroySecretResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a DestroySecretResponseMessage.\n         * @implements IDestroySecretResponseMessage\n         * @constructor\n         * @param {agent.IDestroySecretResponseMessage=} [p] Properties to set\n         */\n        function DestroySecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroySecretResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.DestroySecretResponseMessage\n         * @instance\n         */\n        DestroySecretResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DestroySecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DestroySecretResponseMessage\n         * @static\n         * @param {agent.IDestroySecretResponseMessage=} [properties] Properties to set\n         * @returns {agent.DestroySecretResponseMessage} DestroySecretResponseMessage instance\n         */\n        DestroySecretResponseMessage.create = function create(properties) {\n            return new DestroySecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroySecretResponseMessage message. Does not implicitly {@link agent.DestroySecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DestroySecretResponseMessage\n         * @static\n         * @param {agent.IDestroySecretResponseMessage} m DestroySecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroySecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a DestroySecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DestroySecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DestroySecretResponseMessage} DestroySecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroySecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DestroySecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DestroySecretResponseMessage;\n    })();\n\n    agent.GetSecretRequestMessage = (function() {\n\n        /**\n         * Properties of a GetSecretRequestMessage.\n         * @memberof agent\n         * @interface IGetSecretRequestMessage\n         * @property {string|null} [vaultName] GetSecretRequestMessage vaultName\n         * @property {string|null} [secretName] GetSecretRequestMessage secretName\n         */\n\n        /**\n         * Constructs a new GetSecretRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a GetSecretRequestMessage.\n         * @implements IGetSecretRequestMessage\n         * @constructor\n         * @param {agent.IGetSecretRequestMessage=} [p] Properties to set\n         */\n        function GetSecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetSecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.GetSecretRequestMessage\n         * @instance\n         */\n        GetSecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * GetSecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agent.GetSecretRequestMessage\n         * @instance\n         */\n        GetSecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * Creates a new GetSecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.GetSecretRequestMessage\n         * @static\n         * @param {agent.IGetSecretRequestMessage=} [properties] Properties to set\n         * @returns {agent.GetSecretRequestMessage} GetSecretRequestMessage instance\n         */\n        GetSecretRequestMessage.create = function create(properties) {\n            return new GetSecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetSecretRequestMessage message. Does not implicitly {@link agent.GetSecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.GetSecretRequestMessage\n         * @static\n         * @param {agent.IGetSecretRequestMessage} m GetSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetSecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            return w;\n        };\n\n        /**\n         * Decodes a GetSecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.GetSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.GetSecretRequestMessage} GetSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetSecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.GetSecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GetSecretRequestMessage;\n    })();\n\n    agent.GetSecretResponseMessage = (function() {\n\n        /**\n         * Properties of a GetSecretResponseMessage.\n         * @memberof agent\n         * @interface IGetSecretResponseMessage\n         * @property {Uint8Array|null} [secret] GetSecretResponseMessage secret\n         */\n\n        /**\n         * Constructs a new GetSecretResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a GetSecretResponseMessage.\n         * @implements IGetSecretResponseMessage\n         * @constructor\n         * @param {agent.IGetSecretResponseMessage=} [p] Properties to set\n         */\n        function GetSecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetSecretResponseMessage secret.\n         * @member {Uint8Array} secret\n         * @memberof agent.GetSecretResponseMessage\n         * @instance\n         */\n        GetSecretResponseMessage.prototype.secret = $util.newBuffer([]);\n\n        /**\n         * Creates a new GetSecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.GetSecretResponseMessage\n         * @static\n         * @param {agent.IGetSecretResponseMessage=} [properties] Properties to set\n         * @returns {agent.GetSecretResponseMessage} GetSecretResponseMessage instance\n         */\n        GetSecretResponseMessage.create = function create(properties) {\n            return new GetSecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetSecretResponseMessage message. Does not implicitly {@link agent.GetSecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.GetSecretResponseMessage\n         * @static\n         * @param {agent.IGetSecretResponseMessage} m GetSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetSecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.secret != null && Object.hasOwnProperty.call(m, \"secret\"))\n                w.uint32(10).bytes(m.secret);\n            return w;\n        };\n\n        /**\n         * Decodes a GetSecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.GetSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.GetSecretResponseMessage} GetSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetSecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.GetSecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.secret = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GetSecretResponseMessage;\n    })();\n\n    agent.DeriveKeyRequestMessage = (function() {\n\n        /**\n         * Properties of a DeriveKeyRequestMessage.\n         * @memberof agent\n         * @interface IDeriveKeyRequestMessage\n         * @property {string|null} [vaultName] DeriveKeyRequestMessage vaultName\n         * @property {string|null} [keyName] DeriveKeyRequestMessage keyName\n         * @property {string|null} [passphrase] DeriveKeyRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new DeriveKeyRequestMessage.\n         * @memberof agent\n         * @classdesc Represents a DeriveKeyRequestMessage.\n         * @implements IDeriveKeyRequestMessage\n         * @constructor\n         * @param {agent.IDeriveKeyRequestMessage=} [p] Properties to set\n         */\n        function DeriveKeyRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DeriveKeyRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agent.DeriveKeyRequestMessage\n         * @instance\n         */\n        DeriveKeyRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * DeriveKeyRequestMessage keyName.\n         * @member {string} keyName\n         * @memberof agent.DeriveKeyRequestMessage\n         * @instance\n         */\n        DeriveKeyRequestMessage.prototype.keyName = \"\";\n\n        /**\n         * DeriveKeyRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agent.DeriveKeyRequestMessage\n         * @instance\n         */\n        DeriveKeyRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new DeriveKeyRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DeriveKeyRequestMessage\n         * @static\n         * @param {agent.IDeriveKeyRequestMessage=} [properties] Properties to set\n         * @returns {agent.DeriveKeyRequestMessage} DeriveKeyRequestMessage instance\n         */\n        DeriveKeyRequestMessage.create = function create(properties) {\n            return new DeriveKeyRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DeriveKeyRequestMessage message. Does not implicitly {@link agent.DeriveKeyRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DeriveKeyRequestMessage\n         * @static\n         * @param {agent.IDeriveKeyRequestMessage} m DeriveKeyRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeriveKeyRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.keyName != null && Object.hasOwnProperty.call(m, \"keyName\"))\n                w.uint32(18).string(m.keyName);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(26).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Decodes a DeriveKeyRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DeriveKeyRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DeriveKeyRequestMessage} DeriveKeyRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeriveKeyRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DeriveKeyRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.keyName = r.string();\n                    break;\n                case 3:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DeriveKeyRequestMessage;\n    })();\n\n    agent.DeriveKeyResponseMessage = (function() {\n\n        /**\n         * Properties of a DeriveKeyResponseMessage.\n         * @memberof agent\n         * @interface IDeriveKeyResponseMessage\n         * @property {boolean|null} [successful] DeriveKeyResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DeriveKeyResponseMessage.\n         * @memberof agent\n         * @classdesc Represents a DeriveKeyResponseMessage.\n         * @implements IDeriveKeyResponseMessage\n         * @constructor\n         * @param {agent.IDeriveKeyResponseMessage=} [p] Properties to set\n         */\n        function DeriveKeyResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DeriveKeyResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agent.DeriveKeyResponseMessage\n         * @instance\n         */\n        DeriveKeyResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DeriveKeyResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agent.DeriveKeyResponseMessage\n         * @static\n         * @param {agent.IDeriveKeyResponseMessage=} [properties] Properties to set\n         * @returns {agent.DeriveKeyResponseMessage} DeriveKeyResponseMessage instance\n         */\n        DeriveKeyResponseMessage.create = function create(properties) {\n            return new DeriveKeyResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DeriveKeyResponseMessage message. Does not implicitly {@link agent.DeriveKeyResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agent.DeriveKeyResponseMessage\n         * @static\n         * @param {agent.IDeriveKeyResponseMessage} m DeriveKeyResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeriveKeyResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Decodes a DeriveKeyResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agent.DeriveKeyResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agent.DeriveKeyResponseMessage} DeriveKeyResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeriveKeyResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agent.DeriveKeyResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return DeriveKeyResponseMessage;\n    })();\n\n    return agent;\n})();\n\nmodule.exports = $root;\n","module.exports = require(\"protobufjs/minimal\");"],"sourceRoot":""}