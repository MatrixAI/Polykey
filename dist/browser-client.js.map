{"version":3,"sources":["webpack://browser-client/webpack/universalModuleDefinition","webpack://browser-client/webpack/bootstrap","webpack://browser-client/external \"protobufjs/minimal\"","webpack://browser-client/./src/agent/PolykeyClient.ts","webpack://browser-client/./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack://browser-client/(webpack)/buildin/global.js","webpack://browser-client/external \"base64-js\"","webpack://browser-client/external \"ieee754\"","webpack://browser-client/external \"isarray\"","webpack://browser-client/./src/peers/PeerInfo.ts","webpack://browser-client/./proto/js/Peer.js","webpack://browser-client/./src/utils.ts","webpack://browser-client/external \"protobufjs\"","webpack://browser-client/./proto/js/Agent.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA,+C;;;;;;;ACAA,8CAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,gCAAgC,mBAAO,CAAC,CAAmB;AAC3D,gBAAgB,mBAAO,CAAC,EAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA,uBAAuB,QAAQ;AAC/B,yDAAyD,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,aAAa;AACpH;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,+FAA+F,eAAe;AAC9G;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,sBAAsB;AAC9G;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,wFAAwF,UAAU;AAClG;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA,qFAAqF,UAAU;AAC/F;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,gGAAgG,oBAAoB;AACpH;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,yFAAyF,0BAA0B;AACnH;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA,0FAA0F,0BAA0B;AACpH;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,6FAA6F,YAAY;AACzG;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,uFAAuF,YAAY;AACnG;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,wFAAwF,uBAAuB;AAC/G;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,2FAA2F,YAAY;AACvG;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,YAAY;AACtG;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,4FAA4F,wBAAwB;AACpH;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,wFAAwF,wBAAwB;AAChH;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,uFAAuF,qBAAqB;AAC5G;AACA;AACA;AACA;AACA;AACA,eAAe,6DAA6D;AAC5E;AACA;AACA;AACA;AACA,uFAAuF,qBAAqB;AAC5G;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,uFAAuF,qBAAqB;AAC5G;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,6FAA6F,2BAA2B;AACxH;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,4FAA4F,SAAS;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,2FAA2F,YAAY;AACvG;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,2FAA2F,YAAY;AACvG;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACngBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,CAAW;AAChC,cAAc,mBAAO,CAAC,CAAS;AAC/B,cAAc,mBAAO,CAAC,CAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC5vDA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACnBA,sC;;;;;;ACAA,oC;;;;;;ACAA,oC;;;;;;;ACAa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,CAAqB;AAC5C,gBAAgB,mBAAO,CAAC,CAAU;AAClC;AACA;AACA,qDAAqD,KAAK,GAAG,KAAK;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,QAAQ,GAAG,UAAU;AACpF;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,UAAU,GAAG,UAAU;AACvE;AACA;AACA,kBAAkB,UAAU,GAAG,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI,IAAI,EAAE,MAAM,IAAI,aAAa,IAAI;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjGA;AACa;;AAEb,gBAAgB,mBAAO,CAAC,CAAoB;;AAE5C;AACA;;AAEA;AACA,0EAA0E;;AAE1E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA,kBAAkB;AAClB,mBAAmB,WAAW;AAC9B,mBAAmB,0BAA0B;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C,mBAAmB,uCAAuC;AAC1D,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS,WAAW,uBAAuB;;AAE3C;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C,qBAAqB,mCAAmC;AACxD;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,kCAAkC;AACxD,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;;AAEA;AACA,2EAA2E,8CAA8C;AACzH;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6FAA6F,8CAA8C;AAC3I;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0BAA0B;AAC/C,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0BAA0B;AAC/C,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,oCAAoC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,8CAA8C;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,+EAA+E,kDAAkD;AACjI;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iGAAiG,kDAAkD;AACnJ;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,+EAA+E,kDAAkD;AACjI;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iGAAiG,kDAAkD;AACnJ;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,8BAA8B;AACnD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,4CAA4C;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,uCAAuC;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA;;AAEA;AACA,mFAAmF,sDAAsD;AACzI;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;;AAEA;AACA,qGAAqG,sDAAsD;AAC3J;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,kCAAkC;AACvD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,kCAAkC;AACvD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;;AAEA;AACA,4EAA4E,+CAA+C;AAC3H;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8FAA8F,+CAA+C;AAC7I;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,2BAA2B;AAChD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,2BAA2B;AAChD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,kCAAkC;AACxD,sBAAsB,aAAa;AACnC,sBAAsB,gBAAgB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;;AAEA;AACA,0EAA0E,6CAA6C;AACvH;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,6CAA6C;AACzI;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,yBAAyB;AAC9C,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,yBAAyB;AAC9C,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,yDAAyD;AAC/I;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,yDAAyD;AACjK;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,0DAA0D;AACjJ;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,0DAA0D;AACnK;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,qBAAqB,oCAAoC;AACzD;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,wDAAwD;AAC7I;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uGAAuG,wDAAwD;AAC/J;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,oCAAoC;AACzD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,oCAAoC;AACzD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,yDAAyD;AAC/I;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,yDAAyD;AACjK;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;;AAEA;AACA,kFAAkF,qDAAqD;AACvI;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oGAAoG,qDAAqD;AACzJ;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,iCAAiC;AACtD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,iCAAiC;AACtD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,2DAA2D;AACnJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0GAA0G,2DAA2D;AACrK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,qBAAqB,wCAAwC;AAC7D;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,4DAA4D;AACrJ;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2GAA2G,4DAA4D;AACvK;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,qBAAqB,oCAAoC;AACzD;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,wDAAwD;AAC7I;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uGAAuG,wDAAwD;AAC/J;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,oCAAoC;AACzD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,oCAAoC;AACzD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,yDAAyD;AAC/I;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,yDAAyD;AACjK;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,CAAC;;AAED;;;;;;;;AC1hEa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,gCAAgC,mBAAO,CAAC,EAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;AC3DA,uC;;;;;;;ACAA;AACa;;AAEb,gBAAgB,mBAAO,CAAC,CAAoB;;AAE5C;AACA;;AAEA;AACA,0EAA0E;;AAE1E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,qCAAqC;AAC3D,sBAAsB,aAAa;AACnC,sBAAsB,YAAY;AAClC,sBAAsB,gBAAgB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;;AAEA;AACA,4EAA4E,gDAAgD;AAC5H;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8FAA8F,gDAAgD;AAC9I;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,4BAA4B;AACjD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,4BAA4B;AACjD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;;AAEA;AACA,4EAA4E,gDAAgD;AAC5H;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8FAA8F,gDAAgD;AAC9I;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,4BAA4B;AACjD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,4BAA4B;AACjD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,8DAA8D;AACxJ;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8DAA8D;AAC1K;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,8DAA8D;AACxJ;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8DAA8D;AAC1K;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,+DAA+D;AAC1J;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,+DAA+D;AAC5K;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,yDAAyD;AAC9I;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uGAAuG,yDAAyD;AAChK;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,0DAA0D;AAChJ;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,0DAA0D;AAClK;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,qBAAqB,wCAAwC;AAC7D;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,4DAA4D;AACpJ;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;;AAEA;AACA,0GAA0G,4DAA4D;AACtK;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,0DAA0D;AAChJ;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,0DAA0D;AAClK;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,qBAAqB,wCAAwC;AAC7D;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,4DAA4D;AACpJ;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0GAA0G,4DAA4D;AACtK;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,qBAAqB,yCAAyC;AAC9D;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,6DAA6D;AACtJ;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2GAA2G,6DAA6D;AACxK;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,yCAAyC;AAC9D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,yCAAyC;AAC9D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,qBAAqB,yCAAyC;AAC9D;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,6DAA6D;AACtJ;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2GAA2G,6DAA6D;AACxK;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,yCAAyC;AAC9D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,yCAAyC;AAC9D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,8DAA8D;AACxJ;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8DAA8D;AAC1K;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,qBAAqB,yCAAyC;AAC9D;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,6DAA6D;AACtJ;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2GAA2G,6DAA6D;AACxK;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,yCAAyC;AAC9D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,yCAAyC;AAC9D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,8DAA8D;AACxJ;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8DAA8D;AAC1K;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,qBAAqB,wCAAwC;AAC7D;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,4DAA4D;AACpJ;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0GAA0G,4DAA4D;AACtK;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,qBAAqB,yCAAyC;AAC9D;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,6DAA6D;AACtJ;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA;AACA;;AAEA;AACA,2GAA2G,6DAA6D;AACxK;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,yCAAyC;AAC9D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,yCAAyC;AAC9D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,qBAAqB,4CAA4C;AACjE;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,gEAAgE;AAC5J;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8GAA8G,gEAAgE;AAC9K;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,4CAA4C;AACjE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,4CAA4C;AACjE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAA+C;AAClE;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAA+C;AAClE,qBAAqB,6CAA6C;AAClE;AACA;AACA;AACA;;AAEA;AACA,6FAA6F,iEAAiE;AAC9J;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA;AACA;;AAEA;AACA,+GAA+G,iEAAiE;AAChL;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,6CAA6C;AAClE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,6CAA6C;AAClE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,0DAA0D;AAChJ;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,0DAA0D;AAClK;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,qBAAqB,wCAAwC;AAC7D;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,4DAA4D;AACpJ;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0GAA0G,4DAA4D;AACtK;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,8DAA8D;AACxJ;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8DAA8D;AAC1K;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,+DAA+D;AAC1J;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,+DAA+D;AAC5K;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,qBAAqB,yCAAyC;AAC9D;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,6DAA6D;AACtJ;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2GAA2G,6DAA6D;AACxK;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,yCAAyC;AAC9D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,yCAAyC;AAC9D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,8DAA8D;AACxJ;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8DAA8D;AAC1K;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,gBAAgB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,8DAA8D;AACxJ;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8DAA8D;AAC1K;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,+DAA+D;AAC1J;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,+DAA+D;AAC5K;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,+DAA+D;AAC1J;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,+DAA+D;AAC5K;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,qBAAqB,4CAA4C;AACjE;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,gEAAgE;AAC5J;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8GAA8G,gEAAgE;AAC9K;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,4CAA4C;AACjE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,4CAA4C;AACjE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,qBAAqB,wCAAwC;AAC7D;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,4DAA4D;AACpJ;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0GAA0G,4DAA4D;AACtK;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,qBAAqB,wCAAwC;AAC7D;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,4DAA4D;AACpJ;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0GAA0G,4DAA4D;AACtK;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,0DAA0D;AAChJ;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,0DAA0D;AAClK;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,qBAAqB,oCAAoC;AACzD;AACA;AACA;AACA;;AAEA;AACA,oFAAoF,wDAAwD;AAC5I;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sGAAsG,wDAAwD;AAC9J;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,oCAAoC;AACzD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,oCAAoC;AACzD,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,yDAAyD;AAC9I;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uGAAuG,yDAAyD;AAChK;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iDAAiD;AACpE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iDAAiD;AACpE,qBAAqB,+CAA+C;AACpE;AACA;AACA;AACA;;AAEA;AACA,+FAA+F,mEAAmE;AAClK;AACA;AACA;AACA,mBAAmB,gDAAgD;AACnE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iHAAiH,mEAAmE;AACpL;AACA;AACA;AACA,mBAAmB,gDAAgD;AACnE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,+CAA+C;AACpE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,+CAA+C;AACpE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAkD;AACrE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAkD;AACrE,qBAAqB,gDAAgD;AACrE;AACA;AACA;AACA;;AAEA;AACA,gGAAgG,oEAAoE;AACpK;AACA;AACA;AACA,mBAAmB,iDAAiD;AACpE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kHAAkH,oEAAoE;AACtL;AACA;AACA;AACA,mBAAmB,iDAAiD;AACpE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,gDAAgD;AACrE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,gDAAgD;AACrE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,gBAAgB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,8DAA8D;AACxJ;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8DAA8D;AAC1K;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,+DAA+D;AAC1J;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,+DAA+D;AAC5K;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,qBAAqB,wCAAwC;AAC7D;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,4DAA4D;AACpJ;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0GAA0G,4DAA4D;AACtK;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,0DAA0D;AAChJ;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,0DAA0D;AAClK;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,yDAAyD;AAC9I;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uGAAuG,yDAAyD;AAChK;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,qCAAqC;AAC1D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,0DAA0D;AAChJ;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,0DAA0D;AAClK;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,0DAA0D;AAChJ;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,0DAA0D;AAClK;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,0DAA0D;AAChJ;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,0DAA0D;AAClK;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,sCAAsC;AAC3D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,qBAAqB,4CAA4C;AACjE;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,gEAAgE;AAC5J;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8GAA8G,gEAAgE;AAC9K;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,4CAA4C;AACjE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,4CAA4C;AACjE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAA+C;AAClE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAA+C;AAClE,qBAAqB,6CAA6C;AAClE;AACA;AACA;AACA;;AAEA;AACA,6FAA6F,iEAAiE;AAC9J;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+GAA+G,iEAAiE;AAChL;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,6CAA6C;AAClE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,6CAA6C;AAClE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;;AAEA;AACA,uFAAuF,2DAA2D;AAClJ;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yGAAyG,2DAA2D;AACpK;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,uCAAuC;AAC5D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D,qBAAqB,wCAAwC;AAC7D;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,4DAA4D;AACpJ;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA;AACA;;AAEA;AACA,0GAA0G,4DAA4D;AACtK;AACA;AACA;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,wCAAwC;AAC7D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,+DAA+D;AAC1J;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,+DAA+D;AAC5K;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,qBAAqB,4CAA4C;AACjE;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,gEAAgE;AAC5J;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8GAA8G,gEAAgE;AAC9K;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,4CAA4C;AACjE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,4CAA4C;AACjE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,sBAAsB,aAAa;AACnC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,qBAAqB,4CAA4C;AACjE;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,gEAAgE;AAC5J;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8GAA8G,gEAAgE;AAC9K;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,4CAA4C;AACjE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,4CAA4C;AACjE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAA+C;AAClE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAA+C;AAClE,qBAAqB,6CAA6C;AAClE;AACA;AACA;AACA;;AAEA;AACA,6FAA6F,iEAAiE;AAC9J;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+GAA+G,iEAAiE;AAChL;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,6CAA6C;AAClE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,6CAA6C;AAClE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,8DAA8D;AACxJ;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8DAA8D;AAC1K;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,+DAA+D;AAC1J;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,+DAA+D;AAC5K;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,qBAAqB,0CAA0C;AAC/D;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,8DAA8D;AACxJ;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8DAA8D;AAC1K;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,0CAA0C;AAC/D,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6CAA6C;AAChE,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA;;AAEA;AACA,2FAA2F,+DAA+D;AAC1J;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,+DAA+D;AAC5K;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C,qBAAqB,2CAA2C;AAChE,oBAAoB,MAAM;AAC1B,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,CAAC;;AAED","file":"browser-client.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"browser-client\"] = factory();\n\telse\n\t\troot[\"browser-client\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"protobufjs/minimal\");","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PeerInfo_1 = __importStar(require(\"../peers/PeerInfo\"));\nconst Agent_1 = require(\"../../proto/js/Agent\");\nclass PolykeyClient {\n    constructor(getStream) {\n        this.getStream = getStream;\n    }\n    async sendRequestToAgent(request) {\n        const stream = this.getStream();\n        const responseList = await new Promise((resolve, reject) => {\n            try {\n                const responseList = [];\n                stream.on('data', (data) => {\n                    if (data instanceof Uint8Array) {\n                        responseList.push(data);\n                    }\n                    else {\n                        responseList.push(...data);\n                    }\n                });\n                stream.on('error', (err) => {\n                    reject(err);\n                });\n                stream.on('end', () => {\n                    resolve(responseList);\n                });\n                if (!stream.writableEnded) {\n                    stream.write(request);\n                }\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n        return responseList;\n    }\n    async handleAgentCommunication(type, nodePath, request) {\n        // Encode message and sent\n        const agentMessage = Agent_1.agentInterface.AgentMessage.encodeDelimited({\n            type: type,\n            isResponse: false,\n            nodePath: nodePath,\n            subMessage: request,\n        }).finish();\n        const responseList = await this.sendRequestToAgent(agentMessage);\n        const agentMessageList = [];\n        for (const response of responseList.values()) {\n            const { subMessage, type } = Agent_1.agentInterface.AgentMessage.decodeDelimited(response);\n            if (type == Agent_1.agentInterface.AgentMessageType.ERROR) {\n                const { error } = Agent_1.agentInterface.ErrorMessage.decodeDelimited(subMessage);\n                const reason = new Error(`Agent Error: ${error}`);\n                throw reason;\n            }\n            else {\n                agentMessageList.push(Agent_1.agentInterface.AgentMessage.decodeDelimited(response));\n            }\n        }\n        return agentMessageList;\n    }\n    async registerNode(path, passphrase) {\n        var _a;\n        const registerNodeRequest = Agent_1.agentInterface.RegisterNodeRequestMessage.encodeDelimited({ passphrase }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.REGISTER_NODE, path, registerNodeRequest);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.REGISTER_NODE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.RegisterNodeResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async newNode(path, userId, passphrase, nbits) {\n        var _a;\n        const newNodeRequest = Agent_1.agentInterface.NewNodeRequestMessage.encodeDelimited({\n            userId,\n            passphrase,\n            nbits,\n        }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.NEW_NODE, path, newNodeRequest);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.NEW_NODE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.NewNodeResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async listNodes(unlockedOnly = true) {\n        var _a;\n        const newNodeRequest = Agent_1.agentInterface.ListNodesRequestMessage.encodeDelimited({ unlockedOnly }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.LIST_NODES, undefined, newNodeRequest);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.LIST_NODES)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { nodes } = Agent_1.agentInterface.ListNodesResponseMessage.decodeDelimited(subMessage);\n        return nodes;\n    }\n    /////////////////////\n    // Key commands //\n    /////////////////////\n    async deriveKey(nodePath, keyName, passphrase) {\n        var _a;\n        const request = Agent_1.agentInterface.DeriveKeyRequestMessage.encodeDelimited({ keyName, passphrase }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.DERIVE_KEY, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.DERIVE_KEY)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.DeriveKeyResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async deleteKey(nodePath, keyName) {\n        var _a;\n        const request = Agent_1.agentInterface.DeleteKeyRequestMessage.encodeDelimited({ keyName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.DELETE_KEY, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.DELETE_KEY)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.DeleteKeyResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async listKeys(nodePath) {\n        var _a;\n        const request = Agent_1.agentInterface.ListKeysRequestMessage.encodeDelimited({}).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.LIST_KEYS, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.LIST_KEYS)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { keyNames } = Agent_1.agentInterface.ListKeysResponseMessage.decodeDelimited(subMessage);\n        return keyNames;\n    }\n    async getKey(nodePath, keyName) {\n        var _a;\n        const request = Agent_1.agentInterface.GetKeyRequestMessage.encodeDelimited({ keyName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.GET_KEY, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.GET_KEY)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { keyContent } = Agent_1.agentInterface.GetKeyResponseMessage.decodeDelimited(subMessage);\n        return keyContent;\n    }\n    async getPrimaryKeyPair(nodePath, includePrivateKey = false) {\n        var _a;\n        const request = Agent_1.agentInterface.GetPrimaryKeyPairRequestMessage.encodeDelimited({ includePrivateKey }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.GET_PRIMARY_KEYPAIR, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.GET_PRIMARY_KEYPAIR)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { publicKey, privateKey } = Agent_1.agentInterface.GetPrimaryKeyPairResponseMessage.decodeDelimited(subMessage);\n        return { publicKey, privateKey };\n    }\n    /////////////////////\n    // Crypto commands //\n    /////////////////////\n    async signFile(nodePath, filePath, privateKeyPath, passphrase) {\n        var _a;\n        const request = Agent_1.agentInterface.SignFileRequestMessage.encodeDelimited({\n            filePath,\n            privateKeyPath,\n            passphrase,\n        }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.SIGN_FILE, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.SIGN_FILE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { signaturePath } = Agent_1.agentInterface.SignFileResponseMessage.decodeDelimited(subMessage);\n        return signaturePath;\n    }\n    async verifyFile(nodePath, filePath, publicKeyPath) {\n        var _a;\n        const request = Agent_1.agentInterface.VerifyFileRequestMessage.encodeDelimited({ filePath, publicKeyPath }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.VERIFY_FILE, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.VERIFY_FILE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { verified } = Agent_1.agentInterface.VerifyFileResponseMessage.decodeDelimited(subMessage);\n        return verified;\n    }\n    async encryptFile(nodePath, filePath, publicKeyPath) {\n        var _a;\n        const request = Agent_1.agentInterface.EncryptFileRequestMessage.encodeDelimited({ filePath, publicKeyPath }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.ENCRYPT_FILE, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.ENCRYPT_FILE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { encryptedPath } = Agent_1.agentInterface.EncryptFileResponseMessage.decodeDelimited(subMessage);\n        return encryptedPath;\n    }\n    async decryptFile(nodePath, filePath, privateKeyPath, passphrase) {\n        var _a;\n        const request = Agent_1.agentInterface.DecryptFileRequestMessage.encodeDelimited({\n            filePath,\n            privateKeyPath,\n            passphrase,\n        }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.DECRYPT_FILE, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.DECRYPT_FILE)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { decryptedPath } = Agent_1.agentInterface.DecryptFileResponseMessage.decodeDelimited(subMessage);\n        return decryptedPath;\n    }\n    //////////////////////\n    // Vault Operations //\n    //////////////////////\n    async listVaults(nodePath) {\n        var _a;\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.LIST_VAULTS, nodePath);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.LIST_VAULTS)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { vaultNames } = Agent_1.agentInterface.ListVaultsResponseMessage.decodeDelimited(subMessage);\n        return vaultNames;\n    }\n    async scanVaultNames(nodePath, publicKey) {\n        var _a;\n        const request = Agent_1.agentInterface.ScanVaultNamesRequestMessage.encodeDelimited({ publicKey }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.SCAN_VAULT_NAMES, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.SCAN_VAULT_NAMES)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { vaultNames } = Agent_1.agentInterface.ScanVaultNamesResponseMessage.decodeDelimited(subMessage);\n        return vaultNames;\n    }\n    async newVault(nodePath, vaultName) {\n        var _a;\n        const request = Agent_1.agentInterface.NewVaultRequestMessage.encodeDelimited({ vaultName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.NEW_VAULT, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.NEW_VAULT)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.NewVaultResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async pullVault(nodePath, vaultName, publicKey) {\n        var _a;\n        const request = Agent_1.agentInterface.PullVaultRequestMessage.encodeDelimited({ vaultName, publicKey }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.PULL_VAULT, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.PULL_VAULT)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.PullVaultResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async destroyVault(nodePath, vaultName) {\n        var _a;\n        const request = Agent_1.agentInterface.DestroyVaultRequestMessage.encodeDelimited({ vaultName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.DESTROY_VAULT, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.DESTROY_VAULT)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.DestroyVaultResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    ///////////////////////\n    // Secret Operations //\n    ///////////////////////\n    async listSecrets(nodePath, vaultName) {\n        var _a;\n        const request = Agent_1.agentInterface.ListSecretsRequestMessage.encodeDelimited({ vaultName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.LIST_SECRETS, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.LIST_SECRETS)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { secretNames } = Agent_1.agentInterface.ListSecretsResponseMessage.decodeDelimited(subMessage);\n        return secretNames;\n    }\n    async createSecret(nodePath, vaultName, secretName, secret) {\n        var _a;\n        let request;\n        if (typeof secret == 'string') {\n            request = Agent_1.agentInterface.CreateSecretRequestMessage.encodeDelimited({\n                vaultName,\n                secretName,\n                secretPath: secret,\n            }).finish();\n        }\n        else {\n            request = Agent_1.agentInterface.CreateSecretRequestMessage.encodeDelimited({\n                vaultName,\n                secretName,\n                secretContent: secret,\n            }).finish();\n        }\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.CREATE_SECRET, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.CREATE_SECRET)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.CreateSecretResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async destroySecret(nodePath, vaultName, secretName) {\n        var _a;\n        const request = Agent_1.agentInterface.DestroySecretRequestMessage.encodeDelimited({ vaultName, secretName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.DESTROY_SECRET, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.DESTROY_SECRET)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.DestroySecretResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async getSecret(nodePath, vaultName, secretName) {\n        var _a;\n        const request = Agent_1.agentInterface.GetSecretRequestMessage.encodeDelimited({ vaultName, secretName }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.GET_SECRET, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.GET_SECRET)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { secret } = Agent_1.agentInterface.GetSecretResponseMessage.decodeDelimited(subMessage);\n        return Buffer.from(secret);\n    }\n    async updateSecret(nodePath, vaultName, secretName, secret) {\n        var _a;\n        let request;\n        if (typeof secret == 'string') {\n            request = Agent_1.agentInterface.UpdateSecretRequestMessage.encodeDelimited({\n                vaultName,\n                secretName,\n                secretPath: secret,\n            }).finish();\n        }\n        else {\n            request = Agent_1.agentInterface.UpdateSecretRequestMessage.encodeDelimited({\n                vaultName,\n                secretName,\n                secretContent: secret,\n            }).finish();\n        }\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.UPDATE_SECRET, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.UPDATE_SECRET)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.UpdateSecretResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    /////////////////////\n    // Peer Operations //\n    /////////////////////\n    async addPeer(nodePath, publicKey, peerAddress, relayPublicKey) {\n        var _a;\n        const request = Agent_1.agentInterface.AddPeerRequestMessage.encodeDelimited({\n            publicKey,\n            peerAddress,\n            relayPublicKey,\n        }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.ADD_PEER, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.ADD_PEER)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.AddPeerResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async getPeerInfo(nodePath, current = false, publicKey) {\n        var _a;\n        const request = Agent_1.agentInterface.PeerInfoRequestMessage.encodeDelimited({ current, publicKey }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.GET_PEER_INFO, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.GET_PEER_INFO)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { publicKey: responsePublicKey, peerAddress, relayPublicKey, } = Agent_1.agentInterface.PeerInfoResponseMessage.decodeDelimited(subMessage);\n        return new PeerInfo_1.default(responsePublicKey, peerAddress, relayPublicKey);\n    }\n    async pingPeer(nodePath, publicKey, timeout) {\n        var _a;\n        const request = Agent_1.agentInterface.PingPeerRequestMessage.encodeDelimited({ publicKey, timeout }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.PING_PEER, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.PING_PEER)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.PingPeerResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async findPeer(nodePath, publicKey, timeout) {\n        var _a;\n        const request = Agent_1.agentInterface.FindPeerRequestMessage.encodeDelimited({ publicKey, timeout }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.FIND_PEER, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.FIND_PEER)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.FindPeerResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async findSocialPeer(nodePath, handle, service, timeout) {\n        var _a;\n        const request = Agent_1.agentInterface.FindSocialPeerRequestMessage.encodeDelimited({ handle, service, timeout }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.FIND_SOCIAL_PEER, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.FIND_SOCIAL_PEER)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.FindSocialPeerResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async listPeers(nodePath) {\n        var _a;\n        const request = Agent_1.agentInterface.ListPeersRequestMessage.encodeDelimited({}).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.LIST_PEERS, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.LIST_PEERS)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { publicKeys } = Agent_1.agentInterface.ListPeersResponseMessage.decodeDelimited(subMessage);\n        return publicKeys;\n    }\n    async toggleStealth(nodePath, active) {\n        var _a;\n        const request = Agent_1.agentInterface.ToggleStealthRequestMessage.encodeDelimited({ active }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.TOGGLE_STEALTH, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.TOGGLE_STEALTH)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.ToggleStealthResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async updatePeer(nodePath, publicKey, currentNode, peerHost, peerPort, relayPublicKey) {\n        var _a;\n        const request = Agent_1.agentInterface.UpdatePeerInfoRequestMessage.encodeDelimited({\n            publicKey,\n            currentNode,\n            peerHost,\n            peerPort,\n            relayPublicKey,\n        }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.UPDATE_PEER_INFO, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.UPDATE_PEER_INFO)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.UpdatePeerInfoResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async requestRelay(nodePath, publicKey) {\n        var _a;\n        const request = Agent_1.agentInterface.RequestRelayRequestMessage.encodeDelimited({ publicKey }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.REQUEST_RELAY, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.REQUEST_RELAY)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { successful } = Agent_1.agentInterface.RequestRelayResponseMessage.decodeDelimited(subMessage);\n        return successful;\n    }\n    async requestPunch(nodePath, publicKey) {\n        var _a;\n        const request = Agent_1.agentInterface.RequestPunchRequestMessage.encodeDelimited({ publicKey }).finish();\n        const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.REQUEST_PUNCH, nodePath, request);\n        const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.REQUEST_PUNCH)) === null || _a === void 0 ? void 0 : _a.subMessage;\n        if (!subMessage) {\n            throw Error('agent did not respond');\n        }\n        const { address } = Agent_1.agentInterface.RequestPunchResponseMessage.decodeDelimited(subMessage);\n        return PeerInfo_1.Address.parse(address);\n    }\n    ///////////////////\n    // Agent control //\n    ///////////////////\n    async getAgentStatus() {\n        var _a;\n        try {\n            const encodedResponse = await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.STATUS);\n            const subMessage = (_a = encodedResponse.find((r) => r.type == Agent_1.agentInterface.AgentMessageType.STATUS)) === null || _a === void 0 ? void 0 : _a.subMessage;\n            if (!subMessage) {\n                throw Error('agent did not respond');\n            }\n            const { status } = Agent_1.agentInterface.AgentStatusResponseMessage.decodeDelimited(subMessage);\n            return status;\n        }\n        catch (err) {\n            if (err.toString().match(/ECONNRESET|ENOENT|ECONNRESET/)) {\n                return Agent_1.agentInterface.AgentStatusType.OFFLINE;\n            }\n            throw err;\n        }\n    }\n    async stopAgent() {\n        try {\n            // Tell it to start shutting and wait for response\n            await this.handleAgentCommunication(Agent_1.agentInterface.AgentMessageType.STOP_AGENT);\n            return true;\n        }\n        catch (err) {\n            return (await this.getAgentStatus()) != Agent_1.agentInterface.AgentStatusType.ONLINE;\n        }\n    }\n}\nexports.default = PolykeyClient;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = require(\"base64-js\");","module.exports = require(\"ieee754\");","module.exports = require(\"isarray\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Peer_1 = require(\"../../proto/js/Peer\");\nconst utils_1 = require(\"../utils\");\nclass Address {\n    constructor(host, port) {\n        const parsedAddress = Address.parseHelper(`${host}:${port}`);\n        this.host = parsedAddress.host;\n        this.port = parsedAddress.port;\n    }\n    updateHost(host) {\n        if (host != undefined && host != '') {\n            this.host = host;\n        }\n    }\n    updatePort(port) {\n        if (port != undefined && port != 0) {\n            this.port = port;\n        }\n    }\n    /**\n     * Create an address object from a address string\n     * @param addressString Address string in the format of `${this.ip}:${this.port}`\n     */\n    static parse(addressString) {\n        const { host, port } = Address.parseHelper(addressString);\n        return new Address(host, port);\n    }\n    /**\n     * Create an address object from a net.AddressInfo\n     * @param addressInfo AddressInfo of desired address\n     */\n    static fromAddressInfo(addressInfo) {\n        const host = addressInfo.address == '::' ? 'localhost' : addressInfo.address;\n        return new Address(host, addressInfo.port);\n    }\n    /**\n     * Convert address into string of format `${this.host}:${this.port}`\n     */\n    toString() {\n        return `${this.host}:${this.port}`;\n    }\n    static parseHelper(addressString) {\n        var _a;\n        if (!addressString || addressString == '') {\n            throw Error(`cannot parse empty or undefined string`);\n        }\n        if (!Address.AddressRegex.test(addressString)) {\n            throw Error(`cannot parse address string: '${addressString}'`);\n        }\n        // parse using regex\n        const components = (_a = addressString.match(Address.AddressRegex)) === null || _a === void 0 ? void 0 : _a.slice(1, 3);\n        const host = components[0];\n        const port = parseInt(components[1]);\n        return { host, port };\n    }\n}\nexports.Address = Address;\n/**\n * Parses an address string in the format of `host:port` with the help of regex\n */\nAddress.AddressRegex = /^([a-zA-Z.]+|(?:[0-9]{1,3}\\.){3}[0-9]{1,3})(?::)([0-9]{1,5})$/;\nclass PeerInfo {\n    constructor(publicKey, connectedAddress, relayPublicKey) {\n        this.publicKey = PeerInfo.formatPublicKey(publicKey);\n        if (connectedAddress) {\n            const addr = Address.parse(connectedAddress);\n            this.peerAddress = addr;\n        }\n        if (relayPublicKey) {\n            this.relayPublicKey = PeerInfo.formatPublicKey(relayPublicKey);\n        }\n    }\n    static formatPublicKey(str) {\n        const startString = '-----BEGIN PGP PUBLIC KEY BLOCK-----';\n        const endString = '-----END PGP PUBLIC KEY BLOCK-----';\n        return str.slice(str.indexOf(startString), str.indexOf(endString) + endString.length);\n    }\n    deepCopy() {\n        var _a;\n        return new PeerInfo(this.publicKey, (_a = this.peerAddress) === null || _a === void 0 ? void 0 : _a.toString(), this.relayPublicKey);\n    }\n    toStringB64() {\n        var _a;\n        const message = Peer_1.peerInterface.PeerInfoMessage.encodeDelimited({\n            publicKey: this.publicKey,\n            peerAddress: (_a = this.peerAddress) === null || _a === void 0 ? void 0 : _a.toString(),\n            relayPublicKey: this.relayPublicKey,\n        }).finish();\n        return utils_1.protobufToString(message);\n    }\n    static parseB64(str) {\n        const message = utils_1.stringToProtobuf(str);\n        const decoded = Peer_1.peerInterface.PeerInfoMessage.decodeDelimited(message);\n        return new PeerInfo(decoded.publicKey, decoded.peerAddress, decoded.relayPublicKey);\n    }\n}\nexports.default = PeerInfo;\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.peerInterface = (function() {\n\n    /**\n     * Namespace peerInterface.\n     * @exports peerInterface\n     * @namespace\n     */\n    var peerInterface = {};\n\n    peerInterface.Peer = (function() {\n\n        /**\n         * Constructs a new Peer service.\n         * @memberof peerInterface\n         * @classdesc Represents a Peer\n         * @extends $protobuf.rpc.Service\n         * @constructor\n         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n         */\n        function Peer(rpcImpl, requestDelimited, responseDelimited) {\n            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);\n        }\n\n        (Peer.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Peer;\n\n        /**\n         * Creates new Peer service using the specified rpc implementation.\n         * @function create\n         * @memberof peerInterface.Peer\n         * @static\n         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n         * @returns {Peer} RPC service. Useful where requests and/or responses are streamed.\n         */\n        Peer.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n            return new this(rpcImpl, requestDelimited, responseDelimited);\n        };\n\n        /**\n         * Callback as used by {@link peerInterface.Peer#messagePeer}.\n         * @memberof peerInterface.Peer\n         * @typedef MessagePeerCallback\n         * @type {function}\n         * @param {Error|null} error Error, if any\n         * @param {peerInterface.PeerMessage} [response] PeerMessage\n         */\n\n        /**\n         * Calls MessagePeer.\n         * @function messagePeer\n         * @memberof peerInterface.Peer\n         * @instance\n         * @param {peerInterface.IPeerMessage} request PeerMessage message or plain object\n         * @param {peerInterface.Peer.MessagePeerCallback} callback Node-style callback called with the error, if any, and PeerMessage\n         * @returns {undefined}\n         * @variation 1\n         */\n        Object.defineProperty(Peer.prototype.messagePeer = function messagePeer(request, callback) {\n            return this.rpcCall(messagePeer, $root.peerInterface.PeerMessage, $root.peerInterface.PeerMessage, request, callback);\n        }, \"name\", { value: \"MessagePeer\" });\n\n        /**\n         * Calls MessagePeer.\n         * @function messagePeer\n         * @memberof peerInterface.Peer\n         * @instance\n         * @param {peerInterface.IPeerMessage} request PeerMessage message or plain object\n         * @returns {Promise<peerInterface.PeerMessage>} Promise\n         * @variation 2\n         */\n\n        return Peer;\n    })();\n\n    peerInterface.PeerMessage = (function() {\n\n        /**\n         * Properties of a PeerMessage.\n         * @memberof peerInterface\n         * @interface IPeerMessage\n         * @property {string|null} [publicKey] PeerMessage publicKey\n         * @property {peerInterface.SubServiceType|null} [type] PeerMessage type\n         * @property {string|null} [subMessage] PeerMessage subMessage\n         */\n\n        /**\n         * Constructs a new PeerMessage.\n         * @memberof peerInterface\n         * @classdesc Represents a PeerMessage.\n         * @implements IPeerMessage\n         * @constructor\n         * @param {peerInterface.IPeerMessage=} [p] Properties to set\n         */\n        function PeerMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PeerMessage publicKey.\n         * @member {string} publicKey\n         * @memberof peerInterface.PeerMessage\n         * @instance\n         */\n        PeerMessage.prototype.publicKey = \"\";\n\n        /**\n         * PeerMessage type.\n         * @member {peerInterface.SubServiceType} type\n         * @memberof peerInterface.PeerMessage\n         * @instance\n         */\n        PeerMessage.prototype.type = 0;\n\n        /**\n         * PeerMessage subMessage.\n         * @member {string} subMessage\n         * @memberof peerInterface.PeerMessage\n         * @instance\n         */\n        PeerMessage.prototype.subMessage = \"\";\n\n        /**\n         * Creates a new PeerMessage instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.PeerMessage\n         * @static\n         * @param {peerInterface.IPeerMessage=} [properties] Properties to set\n         * @returns {peerInterface.PeerMessage} PeerMessage instance\n         */\n        PeerMessage.create = function create(properties) {\n            return new PeerMessage(properties);\n        };\n\n        /**\n         * Encodes the specified PeerMessage message. Does not implicitly {@link peerInterface.PeerMessage.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.PeerMessage\n         * @static\n         * @param {peerInterface.IPeerMessage} m PeerMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            if (m.type != null && Object.hasOwnProperty.call(m, \"type\"))\n                w.uint32(16).int32(m.type);\n            if (m.subMessage != null && Object.hasOwnProperty.call(m, \"subMessage\"))\n                w.uint32(26).string(m.subMessage);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PeerMessage message, length delimited. Does not implicitly {@link peerInterface.PeerMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.PeerMessage\n         * @static\n         * @param {peerInterface.IPeerMessage} message PeerMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PeerMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.PeerMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.PeerMessage} PeerMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.PeerMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                case 2:\n                    m.type = r.int32();\n                    break;\n                case 3:\n                    m.subMessage = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PeerMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.PeerMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.PeerMessage} PeerMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PeerMessage;\n    })();\n\n    /**\n     * SubServiceType enum.\n     * @name peerInterface.SubServiceType\n     * @enum {number}\n     * @property {number} PING_PEER=0 PING_PEER value\n     * @property {number} GIT=1 GIT value\n     * @property {number} NAT_TRAVERSAL=2 NAT_TRAVERSAL value\n     */\n    peerInterface.SubServiceType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"PING_PEER\"] = 0;\n        values[valuesById[1] = \"GIT\"] = 1;\n        values[valuesById[2] = \"NAT_TRAVERSAL\"] = 2;\n        return values;\n    })();\n\n    peerInterface.PingPeerMessage = (function() {\n\n        /**\n         * Properties of a PingPeerMessage.\n         * @memberof peerInterface\n         * @interface IPingPeerMessage\n         * @property {string|null} [publicKey] PingPeerMessage publicKey\n         * @property {string|null} [challenge] PingPeerMessage challenge\n         * @property {peerInterface.IPeerInfoMessage|null} [peerInfo] PingPeerMessage peerInfo\n         */\n\n        /**\n         * Constructs a new PingPeerMessage.\n         * @memberof peerInterface\n         * @classdesc Represents a PingPeerMessage.\n         * @implements IPingPeerMessage\n         * @constructor\n         * @param {peerInterface.IPingPeerMessage=} [p] Properties to set\n         */\n        function PingPeerMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PingPeerMessage publicKey.\n         * @member {string} publicKey\n         * @memberof peerInterface.PingPeerMessage\n         * @instance\n         */\n        PingPeerMessage.prototype.publicKey = \"\";\n\n        /**\n         * PingPeerMessage challenge.\n         * @member {string} challenge\n         * @memberof peerInterface.PingPeerMessage\n         * @instance\n         */\n        PingPeerMessage.prototype.challenge = \"\";\n\n        /**\n         * PingPeerMessage peerInfo.\n         * @member {peerInterface.IPeerInfoMessage|null|undefined} peerInfo\n         * @memberof peerInterface.PingPeerMessage\n         * @instance\n         */\n        PingPeerMessage.prototype.peerInfo = null;\n\n        /**\n         * Creates a new PingPeerMessage instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.PingPeerMessage\n         * @static\n         * @param {peerInterface.IPingPeerMessage=} [properties] Properties to set\n         * @returns {peerInterface.PingPeerMessage} PingPeerMessage instance\n         */\n        PingPeerMessage.create = function create(properties) {\n            return new PingPeerMessage(properties);\n        };\n\n        /**\n         * Encodes the specified PingPeerMessage message. Does not implicitly {@link peerInterface.PingPeerMessage.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.PingPeerMessage\n         * @static\n         * @param {peerInterface.IPingPeerMessage} m PingPeerMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingPeerMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            if (m.challenge != null && Object.hasOwnProperty.call(m, \"challenge\"))\n                w.uint32(18).string(m.challenge);\n            if (m.peerInfo != null && Object.hasOwnProperty.call(m, \"peerInfo\"))\n                $root.peerInterface.PeerInfoMessage.encode(m.peerInfo, w.uint32(26).fork()).ldelim();\n            return w;\n        };\n\n        /**\n         * Encodes the specified PingPeerMessage message, length delimited. Does not implicitly {@link peerInterface.PingPeerMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.PingPeerMessage\n         * @static\n         * @param {peerInterface.IPingPeerMessage} message PingPeerMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingPeerMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PingPeerMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.PingPeerMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.PingPeerMessage} PingPeerMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingPeerMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.PingPeerMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                case 2:\n                    m.challenge = r.string();\n                    break;\n                case 3:\n                    m.peerInfo = $root.peerInterface.PeerInfoMessage.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PingPeerMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.PingPeerMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.PingPeerMessage} PingPeerMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingPeerMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PingPeerMessage;\n    })();\n\n    peerInterface.PeerInfoMessage = (function() {\n\n        /**\n         * Properties of a PeerInfoMessage.\n         * @memberof peerInterface\n         * @interface IPeerInfoMessage\n         * @property {string|null} [publicKey] PeerInfoMessage publicKey\n         * @property {string|null} [peerAddress] PeerInfoMessage peerAddress\n         * @property {string|null} [relayPublicKey] PeerInfoMessage relayPublicKey\n         */\n\n        /**\n         * Constructs a new PeerInfoMessage.\n         * @memberof peerInterface\n         * @classdesc Represents a PeerInfoMessage.\n         * @implements IPeerInfoMessage\n         * @constructor\n         * @param {peerInterface.IPeerInfoMessage=} [p] Properties to set\n         */\n        function PeerInfoMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PeerInfoMessage publicKey.\n         * @member {string} publicKey\n         * @memberof peerInterface.PeerInfoMessage\n         * @instance\n         */\n        PeerInfoMessage.prototype.publicKey = \"\";\n\n        /**\n         * PeerInfoMessage peerAddress.\n         * @member {string} peerAddress\n         * @memberof peerInterface.PeerInfoMessage\n         * @instance\n         */\n        PeerInfoMessage.prototype.peerAddress = \"\";\n\n        /**\n         * PeerInfoMessage relayPublicKey.\n         * @member {string} relayPublicKey\n         * @memberof peerInterface.PeerInfoMessage\n         * @instance\n         */\n        PeerInfoMessage.prototype.relayPublicKey = \"\";\n\n        /**\n         * Creates a new PeerInfoMessage instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.PeerInfoMessage\n         * @static\n         * @param {peerInterface.IPeerInfoMessage=} [properties] Properties to set\n         * @returns {peerInterface.PeerInfoMessage} PeerInfoMessage instance\n         */\n        PeerInfoMessage.create = function create(properties) {\n            return new PeerInfoMessage(properties);\n        };\n\n        /**\n         * Encodes the specified PeerInfoMessage message. Does not implicitly {@link peerInterface.PeerInfoMessage.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.PeerInfoMessage\n         * @static\n         * @param {peerInterface.IPeerInfoMessage} m PeerInfoMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerInfoMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            if (m.peerAddress != null && Object.hasOwnProperty.call(m, \"peerAddress\"))\n                w.uint32(18).string(m.peerAddress);\n            if (m.relayPublicKey != null && Object.hasOwnProperty.call(m, \"relayPublicKey\"))\n                w.uint32(26).string(m.relayPublicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PeerInfoMessage message, length delimited. Does not implicitly {@link peerInterface.PeerInfoMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.PeerInfoMessage\n         * @static\n         * @param {peerInterface.IPeerInfoMessage} message PeerInfoMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerInfoMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PeerInfoMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.PeerInfoMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.PeerInfoMessage} PeerInfoMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerInfoMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.PeerInfoMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                case 2:\n                    m.peerAddress = r.string();\n                    break;\n                case 3:\n                    m.relayPublicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PeerInfoMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.PeerInfoMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.PeerInfoMessage} PeerInfoMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerInfoMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PeerInfoMessage;\n    })();\n\n    peerInterface.PeerInfoListMessage = (function() {\n\n        /**\n         * Properties of a PeerInfoListMessage.\n         * @memberof peerInterface\n         * @interface IPeerInfoListMessage\n         * @property {Array.<peerInterface.IPeerInfoMessage>|null} [peerInfoList] PeerInfoListMessage peerInfoList\n         */\n\n        /**\n         * Constructs a new PeerInfoListMessage.\n         * @memberof peerInterface\n         * @classdesc Represents a PeerInfoListMessage.\n         * @implements IPeerInfoListMessage\n         * @constructor\n         * @param {peerInterface.IPeerInfoListMessage=} [p] Properties to set\n         */\n        function PeerInfoListMessage(p) {\n            this.peerInfoList = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PeerInfoListMessage peerInfoList.\n         * @member {Array.<peerInterface.IPeerInfoMessage>} peerInfoList\n         * @memberof peerInterface.PeerInfoListMessage\n         * @instance\n         */\n        PeerInfoListMessage.prototype.peerInfoList = $util.emptyArray;\n\n        /**\n         * Creates a new PeerInfoListMessage instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.PeerInfoListMessage\n         * @static\n         * @param {peerInterface.IPeerInfoListMessage=} [properties] Properties to set\n         * @returns {peerInterface.PeerInfoListMessage} PeerInfoListMessage instance\n         */\n        PeerInfoListMessage.create = function create(properties) {\n            return new PeerInfoListMessage(properties);\n        };\n\n        /**\n         * Encodes the specified PeerInfoListMessage message. Does not implicitly {@link peerInterface.PeerInfoListMessage.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.PeerInfoListMessage\n         * @static\n         * @param {peerInterface.IPeerInfoListMessage} m PeerInfoListMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerInfoListMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.peerInfoList != null && m.peerInfoList.length) {\n                for (var i = 0; i < m.peerInfoList.length; ++i)\n                    $root.peerInterface.PeerInfoMessage.encode(m.peerInfoList[i], w.uint32(10).fork()).ldelim();\n            }\n            return w;\n        };\n\n        /**\n         * Encodes the specified PeerInfoListMessage message, length delimited. Does not implicitly {@link peerInterface.PeerInfoListMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.PeerInfoListMessage\n         * @static\n         * @param {peerInterface.IPeerInfoListMessage} message PeerInfoListMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerInfoListMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PeerInfoListMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.PeerInfoListMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.PeerInfoListMessage} PeerInfoListMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerInfoListMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.PeerInfoListMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.peerInfoList && m.peerInfoList.length))\n                        m.peerInfoList = [];\n                    m.peerInfoList.push($root.peerInterface.PeerInfoMessage.decode(r, r.uint32()));\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PeerInfoListMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.PeerInfoListMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.PeerInfoListMessage} PeerInfoListMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerInfoListMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PeerInfoListMessage;\n    })();\n\n    peerInterface.ErrorMessage = (function() {\n\n        /**\n         * Properties of an ErrorMessage.\n         * @memberof peerInterface\n         * @interface IErrorMessage\n         * @property {string|null} [error] ErrorMessage error\n         */\n\n        /**\n         * Constructs a new ErrorMessage.\n         * @memberof peerInterface\n         * @classdesc Represents an ErrorMessage.\n         * @implements IErrorMessage\n         * @constructor\n         * @param {peerInterface.IErrorMessage=} [p] Properties to set\n         */\n        function ErrorMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ErrorMessage error.\n         * @member {string} error\n         * @memberof peerInterface.ErrorMessage\n         * @instance\n         */\n        ErrorMessage.prototype.error = \"\";\n\n        /**\n         * Creates a new ErrorMessage instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.ErrorMessage\n         * @static\n         * @param {peerInterface.IErrorMessage=} [properties] Properties to set\n         * @returns {peerInterface.ErrorMessage} ErrorMessage instance\n         */\n        ErrorMessage.create = function create(properties) {\n            return new ErrorMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ErrorMessage message. Does not implicitly {@link peerInterface.ErrorMessage.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.ErrorMessage\n         * @static\n         * @param {peerInterface.IErrorMessage} m ErrorMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.error != null && Object.hasOwnProperty.call(m, \"error\"))\n                w.uint32(10).string(m.error);\n            return w;\n        };\n\n        /**\n         * Encodes the specified ErrorMessage message, length delimited. Does not implicitly {@link peerInterface.ErrorMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.ErrorMessage\n         * @static\n         * @param {peerInterface.IErrorMessage} message ErrorMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ErrorMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.ErrorMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.ErrorMessage} ErrorMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.ErrorMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.error = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an ErrorMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.ErrorMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.ErrorMessage} ErrorMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ErrorMessage;\n    })();\n\n    /**\n     * NatMessageType enum.\n     * @name peerInterface.NatMessageType\n     * @enum {number}\n     * @property {number} ERROR=0 ERROR value\n     * @property {number} RELAY_CONNECTION=1 RELAY_CONNECTION value\n     * @property {number} PEER_CONNECTION=2 PEER_CONNECTION value\n     * @property {number} UDP_ADDRESS=3 UDP_ADDRESS value\n     * @property {number} PEER_UDP_ADDRESS=4 PEER_UDP_ADDRESS value\n     */\n    peerInterface.NatMessageType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"ERROR\"] = 0;\n        values[valuesById[1] = \"RELAY_CONNECTION\"] = 1;\n        values[valuesById[2] = \"PEER_CONNECTION\"] = 2;\n        values[valuesById[3] = \"UDP_ADDRESS\"] = 3;\n        values[valuesById[4] = \"PEER_UDP_ADDRESS\"] = 4;\n        return values;\n    })();\n\n    peerInterface.NatMessage = (function() {\n\n        /**\n         * Properties of a NatMessage.\n         * @memberof peerInterface\n         * @interface INatMessage\n         * @property {peerInterface.NatMessageType|null} [type] NatMessage type\n         * @property {boolean|null} [isResponse] NatMessage isResponse\n         * @property {Uint8Array|null} [subMessage] NatMessage subMessage\n         */\n\n        /**\n         * Constructs a new NatMessage.\n         * @memberof peerInterface\n         * @classdesc Represents a NatMessage.\n         * @implements INatMessage\n         * @constructor\n         * @param {peerInterface.INatMessage=} [p] Properties to set\n         */\n        function NatMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NatMessage type.\n         * @member {peerInterface.NatMessageType} type\n         * @memberof peerInterface.NatMessage\n         * @instance\n         */\n        NatMessage.prototype.type = 0;\n\n        /**\n         * NatMessage isResponse.\n         * @member {boolean} isResponse\n         * @memberof peerInterface.NatMessage\n         * @instance\n         */\n        NatMessage.prototype.isResponse = false;\n\n        /**\n         * NatMessage subMessage.\n         * @member {Uint8Array} subMessage\n         * @memberof peerInterface.NatMessage\n         * @instance\n         */\n        NatMessage.prototype.subMessage = $util.newBuffer([]);\n\n        /**\n         * Creates a new NatMessage instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.NatMessage\n         * @static\n         * @param {peerInterface.INatMessage=} [properties] Properties to set\n         * @returns {peerInterface.NatMessage} NatMessage instance\n         */\n        NatMessage.create = function create(properties) {\n            return new NatMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NatMessage message. Does not implicitly {@link peerInterface.NatMessage.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.NatMessage\n         * @static\n         * @param {peerInterface.INatMessage} m NatMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NatMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.type != null && Object.hasOwnProperty.call(m, \"type\"))\n                w.uint32(8).int32(m.type);\n            if (m.isResponse != null && Object.hasOwnProperty.call(m, \"isResponse\"))\n                w.uint32(16).bool(m.isResponse);\n            if (m.subMessage != null && Object.hasOwnProperty.call(m, \"subMessage\"))\n                w.uint32(26).bytes(m.subMessage);\n            return w;\n        };\n\n        /**\n         * Encodes the specified NatMessage message, length delimited. Does not implicitly {@link peerInterface.NatMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.NatMessage\n         * @static\n         * @param {peerInterface.INatMessage} message NatMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NatMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NatMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.NatMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.NatMessage} NatMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NatMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.NatMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.type = r.int32();\n                    break;\n                case 2:\n                    m.isResponse = r.bool();\n                    break;\n                case 3:\n                    m.subMessage = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a NatMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.NatMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.NatMessage} NatMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NatMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return NatMessage;\n    })();\n\n    peerInterface.RelayConnectionRequest = (function() {\n\n        /**\n         * Properties of a RelayConnectionRequest.\n         * @memberof peerInterface\n         * @interface IRelayConnectionRequest\n         * @property {string|null} [publicKey] RelayConnectionRequest publicKey\n         */\n\n        /**\n         * Constructs a new RelayConnectionRequest.\n         * @memberof peerInterface\n         * @classdesc Represents a RelayConnectionRequest.\n         * @implements IRelayConnectionRequest\n         * @constructor\n         * @param {peerInterface.IRelayConnectionRequest=} [p] Properties to set\n         */\n        function RelayConnectionRequest(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RelayConnectionRequest publicKey.\n         * @member {string} publicKey\n         * @memberof peerInterface.RelayConnectionRequest\n         * @instance\n         */\n        RelayConnectionRequest.prototype.publicKey = \"\";\n\n        /**\n         * Creates a new RelayConnectionRequest instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.RelayConnectionRequest\n         * @static\n         * @param {peerInterface.IRelayConnectionRequest=} [properties] Properties to set\n         * @returns {peerInterface.RelayConnectionRequest} RelayConnectionRequest instance\n         */\n        RelayConnectionRequest.create = function create(properties) {\n            return new RelayConnectionRequest(properties);\n        };\n\n        /**\n         * Encodes the specified RelayConnectionRequest message. Does not implicitly {@link peerInterface.RelayConnectionRequest.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.RelayConnectionRequest\n         * @static\n         * @param {peerInterface.IRelayConnectionRequest} m RelayConnectionRequest message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RelayConnectionRequest.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified RelayConnectionRequest message, length delimited. Does not implicitly {@link peerInterface.RelayConnectionRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.RelayConnectionRequest\n         * @static\n         * @param {peerInterface.IRelayConnectionRequest} message RelayConnectionRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RelayConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RelayConnectionRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.RelayConnectionRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.RelayConnectionRequest} RelayConnectionRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RelayConnectionRequest.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.RelayConnectionRequest();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a RelayConnectionRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.RelayConnectionRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.RelayConnectionRequest} RelayConnectionRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RelayConnectionRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return RelayConnectionRequest;\n    })();\n\n    peerInterface.RelayConnectionResponse = (function() {\n\n        /**\n         * Properties of a RelayConnectionResponse.\n         * @memberof peerInterface\n         * @interface IRelayConnectionResponse\n         * @property {string|null} [serverAddress] RelayConnectionResponse serverAddress\n         */\n\n        /**\n         * Constructs a new RelayConnectionResponse.\n         * @memberof peerInterface\n         * @classdesc Represents a RelayConnectionResponse.\n         * @implements IRelayConnectionResponse\n         * @constructor\n         * @param {peerInterface.IRelayConnectionResponse=} [p] Properties to set\n         */\n        function RelayConnectionResponse(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RelayConnectionResponse serverAddress.\n         * @member {string} serverAddress\n         * @memberof peerInterface.RelayConnectionResponse\n         * @instance\n         */\n        RelayConnectionResponse.prototype.serverAddress = \"\";\n\n        /**\n         * Creates a new RelayConnectionResponse instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.RelayConnectionResponse\n         * @static\n         * @param {peerInterface.IRelayConnectionResponse=} [properties] Properties to set\n         * @returns {peerInterface.RelayConnectionResponse} RelayConnectionResponse instance\n         */\n        RelayConnectionResponse.create = function create(properties) {\n            return new RelayConnectionResponse(properties);\n        };\n\n        /**\n         * Encodes the specified RelayConnectionResponse message. Does not implicitly {@link peerInterface.RelayConnectionResponse.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.RelayConnectionResponse\n         * @static\n         * @param {peerInterface.IRelayConnectionResponse} m RelayConnectionResponse message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RelayConnectionResponse.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.serverAddress != null && Object.hasOwnProperty.call(m, \"serverAddress\"))\n                w.uint32(10).string(m.serverAddress);\n            return w;\n        };\n\n        /**\n         * Encodes the specified RelayConnectionResponse message, length delimited. Does not implicitly {@link peerInterface.RelayConnectionResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.RelayConnectionResponse\n         * @static\n         * @param {peerInterface.IRelayConnectionResponse} message RelayConnectionResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RelayConnectionResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RelayConnectionResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.RelayConnectionResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.RelayConnectionResponse} RelayConnectionResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RelayConnectionResponse.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.RelayConnectionResponse();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.serverAddress = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a RelayConnectionResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.RelayConnectionResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.RelayConnectionResponse} RelayConnectionResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RelayConnectionResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return RelayConnectionResponse;\n    })();\n\n    peerInterface.PeerConnectionRequest = (function() {\n\n        /**\n         * Properties of a PeerConnectionRequest.\n         * @memberof peerInterface\n         * @interface IPeerConnectionRequest\n         * @property {string|null} [publicKey] PeerConnectionRequest publicKey\n         */\n\n        /**\n         * Constructs a new PeerConnectionRequest.\n         * @memberof peerInterface\n         * @classdesc Represents a PeerConnectionRequest.\n         * @implements IPeerConnectionRequest\n         * @constructor\n         * @param {peerInterface.IPeerConnectionRequest=} [p] Properties to set\n         */\n        function PeerConnectionRequest(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PeerConnectionRequest publicKey.\n         * @member {string} publicKey\n         * @memberof peerInterface.PeerConnectionRequest\n         * @instance\n         */\n        PeerConnectionRequest.prototype.publicKey = \"\";\n\n        /**\n         * Creates a new PeerConnectionRequest instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.PeerConnectionRequest\n         * @static\n         * @param {peerInterface.IPeerConnectionRequest=} [properties] Properties to set\n         * @returns {peerInterface.PeerConnectionRequest} PeerConnectionRequest instance\n         */\n        PeerConnectionRequest.create = function create(properties) {\n            return new PeerConnectionRequest(properties);\n        };\n\n        /**\n         * Encodes the specified PeerConnectionRequest message. Does not implicitly {@link peerInterface.PeerConnectionRequest.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.PeerConnectionRequest\n         * @static\n         * @param {peerInterface.IPeerConnectionRequest} m PeerConnectionRequest message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerConnectionRequest.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PeerConnectionRequest message, length delimited. Does not implicitly {@link peerInterface.PeerConnectionRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.PeerConnectionRequest\n         * @static\n         * @param {peerInterface.IPeerConnectionRequest} message PeerConnectionRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PeerConnectionRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.PeerConnectionRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.PeerConnectionRequest} PeerConnectionRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerConnectionRequest.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.PeerConnectionRequest();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PeerConnectionRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.PeerConnectionRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.PeerConnectionRequest} PeerConnectionRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerConnectionRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PeerConnectionRequest;\n    })();\n\n    peerInterface.PeerConnectionResponse = (function() {\n\n        /**\n         * Properties of a PeerConnectionResponse.\n         * @memberof peerInterface\n         * @interface IPeerConnectionResponse\n         * @property {string|null} [peerAddress] PeerConnectionResponse peerAddress\n         */\n\n        /**\n         * Constructs a new PeerConnectionResponse.\n         * @memberof peerInterface\n         * @classdesc Represents a PeerConnectionResponse.\n         * @implements IPeerConnectionResponse\n         * @constructor\n         * @param {peerInterface.IPeerConnectionResponse=} [p] Properties to set\n         */\n        function PeerConnectionResponse(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PeerConnectionResponse peerAddress.\n         * @member {string} peerAddress\n         * @memberof peerInterface.PeerConnectionResponse\n         * @instance\n         */\n        PeerConnectionResponse.prototype.peerAddress = \"\";\n\n        /**\n         * Creates a new PeerConnectionResponse instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.PeerConnectionResponse\n         * @static\n         * @param {peerInterface.IPeerConnectionResponse=} [properties] Properties to set\n         * @returns {peerInterface.PeerConnectionResponse} PeerConnectionResponse instance\n         */\n        PeerConnectionResponse.create = function create(properties) {\n            return new PeerConnectionResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PeerConnectionResponse message. Does not implicitly {@link peerInterface.PeerConnectionResponse.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.PeerConnectionResponse\n         * @static\n         * @param {peerInterface.IPeerConnectionResponse} m PeerConnectionResponse message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerConnectionResponse.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.peerAddress != null && Object.hasOwnProperty.call(m, \"peerAddress\"))\n                w.uint32(10).string(m.peerAddress);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PeerConnectionResponse message, length delimited. Does not implicitly {@link peerInterface.PeerConnectionResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.PeerConnectionResponse\n         * @static\n         * @param {peerInterface.IPeerConnectionResponse} message PeerConnectionResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerConnectionResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PeerConnectionResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.PeerConnectionResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.PeerConnectionResponse} PeerConnectionResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerConnectionResponse.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.PeerConnectionResponse();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.peerAddress = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PeerConnectionResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.PeerConnectionResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.PeerConnectionResponse} PeerConnectionResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerConnectionResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PeerConnectionResponse;\n    })();\n\n    peerInterface.UDPAddressResponse = (function() {\n\n        /**\n         * Properties of a UDPAddressResponse.\n         * @memberof peerInterface\n         * @interface IUDPAddressResponse\n         * @property {string|null} [address] UDPAddressResponse address\n         */\n\n        /**\n         * Constructs a new UDPAddressResponse.\n         * @memberof peerInterface\n         * @classdesc Represents a UDPAddressResponse.\n         * @implements IUDPAddressResponse\n         * @constructor\n         * @param {peerInterface.IUDPAddressResponse=} [p] Properties to set\n         */\n        function UDPAddressResponse(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * UDPAddressResponse address.\n         * @member {string} address\n         * @memberof peerInterface.UDPAddressResponse\n         * @instance\n         */\n        UDPAddressResponse.prototype.address = \"\";\n\n        /**\n         * Creates a new UDPAddressResponse instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.UDPAddressResponse\n         * @static\n         * @param {peerInterface.IUDPAddressResponse=} [properties] Properties to set\n         * @returns {peerInterface.UDPAddressResponse} UDPAddressResponse instance\n         */\n        UDPAddressResponse.create = function create(properties) {\n            return new UDPAddressResponse(properties);\n        };\n\n        /**\n         * Encodes the specified UDPAddressResponse message. Does not implicitly {@link peerInterface.UDPAddressResponse.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.UDPAddressResponse\n         * @static\n         * @param {peerInterface.IUDPAddressResponse} m UDPAddressResponse message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UDPAddressResponse.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.address != null && Object.hasOwnProperty.call(m, \"address\"))\n                w.uint32(10).string(m.address);\n            return w;\n        };\n\n        /**\n         * Encodes the specified UDPAddressResponse message, length delimited. Does not implicitly {@link peerInterface.UDPAddressResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.UDPAddressResponse\n         * @static\n         * @param {peerInterface.IUDPAddressResponse} message UDPAddressResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UDPAddressResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a UDPAddressResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.UDPAddressResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.UDPAddressResponse} UDPAddressResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UDPAddressResponse.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.UDPAddressResponse();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.address = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a UDPAddressResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.UDPAddressResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.UDPAddressResponse} UDPAddressResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UDPAddressResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return UDPAddressResponse;\n    })();\n\n    peerInterface.HolePunchRegisterRequest = (function() {\n\n        /**\n         * Properties of a HolePunchRegisterRequest.\n         * @memberof peerInterface\n         * @interface IHolePunchRegisterRequest\n         * @property {string|null} [publicKey] HolePunchRegisterRequest publicKey\n         */\n\n        /**\n         * Constructs a new HolePunchRegisterRequest.\n         * @memberof peerInterface\n         * @classdesc Represents a HolePunchRegisterRequest.\n         * @implements IHolePunchRegisterRequest\n         * @constructor\n         * @param {peerInterface.IHolePunchRegisterRequest=} [p] Properties to set\n         */\n        function HolePunchRegisterRequest(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * HolePunchRegisterRequest publicKey.\n         * @member {string} publicKey\n         * @memberof peerInterface.HolePunchRegisterRequest\n         * @instance\n         */\n        HolePunchRegisterRequest.prototype.publicKey = \"\";\n\n        /**\n         * Creates a new HolePunchRegisterRequest instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.HolePunchRegisterRequest\n         * @static\n         * @param {peerInterface.IHolePunchRegisterRequest=} [properties] Properties to set\n         * @returns {peerInterface.HolePunchRegisterRequest} HolePunchRegisterRequest instance\n         */\n        HolePunchRegisterRequest.create = function create(properties) {\n            return new HolePunchRegisterRequest(properties);\n        };\n\n        /**\n         * Encodes the specified HolePunchRegisterRequest message. Does not implicitly {@link peerInterface.HolePunchRegisterRequest.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.HolePunchRegisterRequest\n         * @static\n         * @param {peerInterface.IHolePunchRegisterRequest} m HolePunchRegisterRequest message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HolePunchRegisterRequest.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified HolePunchRegisterRequest message, length delimited. Does not implicitly {@link peerInterface.HolePunchRegisterRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.HolePunchRegisterRequest\n         * @static\n         * @param {peerInterface.IHolePunchRegisterRequest} message HolePunchRegisterRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HolePunchRegisterRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a HolePunchRegisterRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.HolePunchRegisterRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.HolePunchRegisterRequest} HolePunchRegisterRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HolePunchRegisterRequest.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.HolePunchRegisterRequest();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a HolePunchRegisterRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.HolePunchRegisterRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.HolePunchRegisterRequest} HolePunchRegisterRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HolePunchRegisterRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return HolePunchRegisterRequest;\n    })();\n\n    peerInterface.HolePunchRegisterResponse = (function() {\n\n        /**\n         * Properties of a HolePunchRegisterResponse.\n         * @memberof peerInterface\n         * @interface IHolePunchRegisterResponse\n         * @property {string|null} [connectedAddress] HolePunchRegisterResponse connectedAddress\n         */\n\n        /**\n         * Constructs a new HolePunchRegisterResponse.\n         * @memberof peerInterface\n         * @classdesc Represents a HolePunchRegisterResponse.\n         * @implements IHolePunchRegisterResponse\n         * @constructor\n         * @param {peerInterface.IHolePunchRegisterResponse=} [p] Properties to set\n         */\n        function HolePunchRegisterResponse(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * HolePunchRegisterResponse connectedAddress.\n         * @member {string} connectedAddress\n         * @memberof peerInterface.HolePunchRegisterResponse\n         * @instance\n         */\n        HolePunchRegisterResponse.prototype.connectedAddress = \"\";\n\n        /**\n         * Creates a new HolePunchRegisterResponse instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.HolePunchRegisterResponse\n         * @static\n         * @param {peerInterface.IHolePunchRegisterResponse=} [properties] Properties to set\n         * @returns {peerInterface.HolePunchRegisterResponse} HolePunchRegisterResponse instance\n         */\n        HolePunchRegisterResponse.create = function create(properties) {\n            return new HolePunchRegisterResponse(properties);\n        };\n\n        /**\n         * Encodes the specified HolePunchRegisterResponse message. Does not implicitly {@link peerInterface.HolePunchRegisterResponse.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.HolePunchRegisterResponse\n         * @static\n         * @param {peerInterface.IHolePunchRegisterResponse} m HolePunchRegisterResponse message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HolePunchRegisterResponse.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.connectedAddress != null && Object.hasOwnProperty.call(m, \"connectedAddress\"))\n                w.uint32(10).string(m.connectedAddress);\n            return w;\n        };\n\n        /**\n         * Encodes the specified HolePunchRegisterResponse message, length delimited. Does not implicitly {@link peerInterface.HolePunchRegisterResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.HolePunchRegisterResponse\n         * @static\n         * @param {peerInterface.IHolePunchRegisterResponse} message HolePunchRegisterResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HolePunchRegisterResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a HolePunchRegisterResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.HolePunchRegisterResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.HolePunchRegisterResponse} HolePunchRegisterResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HolePunchRegisterResponse.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.HolePunchRegisterResponse();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.connectedAddress = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a HolePunchRegisterResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.HolePunchRegisterResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.HolePunchRegisterResponse} HolePunchRegisterResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HolePunchRegisterResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return HolePunchRegisterResponse;\n    })();\n\n    peerInterface.PeerUdpAddressRequest = (function() {\n\n        /**\n         * Properties of a PeerUdpAddressRequest.\n         * @memberof peerInterface\n         * @interface IPeerUdpAddressRequest\n         * @property {string|null} [publicKey] PeerUdpAddressRequest publicKey\n         */\n\n        /**\n         * Constructs a new PeerUdpAddressRequest.\n         * @memberof peerInterface\n         * @classdesc Represents a PeerUdpAddressRequest.\n         * @implements IPeerUdpAddressRequest\n         * @constructor\n         * @param {peerInterface.IPeerUdpAddressRequest=} [p] Properties to set\n         */\n        function PeerUdpAddressRequest(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PeerUdpAddressRequest publicKey.\n         * @member {string} publicKey\n         * @memberof peerInterface.PeerUdpAddressRequest\n         * @instance\n         */\n        PeerUdpAddressRequest.prototype.publicKey = \"\";\n\n        /**\n         * Creates a new PeerUdpAddressRequest instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.PeerUdpAddressRequest\n         * @static\n         * @param {peerInterface.IPeerUdpAddressRequest=} [properties] Properties to set\n         * @returns {peerInterface.PeerUdpAddressRequest} PeerUdpAddressRequest instance\n         */\n        PeerUdpAddressRequest.create = function create(properties) {\n            return new PeerUdpAddressRequest(properties);\n        };\n\n        /**\n         * Encodes the specified PeerUdpAddressRequest message. Does not implicitly {@link peerInterface.PeerUdpAddressRequest.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.PeerUdpAddressRequest\n         * @static\n         * @param {peerInterface.IPeerUdpAddressRequest} m PeerUdpAddressRequest message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerUdpAddressRequest.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PeerUdpAddressRequest message, length delimited. Does not implicitly {@link peerInterface.PeerUdpAddressRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.PeerUdpAddressRequest\n         * @static\n         * @param {peerInterface.IPeerUdpAddressRequest} message PeerUdpAddressRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerUdpAddressRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PeerUdpAddressRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.PeerUdpAddressRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.PeerUdpAddressRequest} PeerUdpAddressRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerUdpAddressRequest.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.PeerUdpAddressRequest();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PeerUdpAddressRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.PeerUdpAddressRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.PeerUdpAddressRequest} PeerUdpAddressRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerUdpAddressRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PeerUdpAddressRequest;\n    })();\n\n    peerInterface.PeerUdpAddressResponse = (function() {\n\n        /**\n         * Properties of a PeerUdpAddressResponse.\n         * @memberof peerInterface\n         * @interface IPeerUdpAddressResponse\n         * @property {string|null} [address] PeerUdpAddressResponse address\n         */\n\n        /**\n         * Constructs a new PeerUdpAddressResponse.\n         * @memberof peerInterface\n         * @classdesc Represents a PeerUdpAddressResponse.\n         * @implements IPeerUdpAddressResponse\n         * @constructor\n         * @param {peerInterface.IPeerUdpAddressResponse=} [p] Properties to set\n         */\n        function PeerUdpAddressResponse(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PeerUdpAddressResponse address.\n         * @member {string} address\n         * @memberof peerInterface.PeerUdpAddressResponse\n         * @instance\n         */\n        PeerUdpAddressResponse.prototype.address = \"\";\n\n        /**\n         * Creates a new PeerUdpAddressResponse instance using the specified properties.\n         * @function create\n         * @memberof peerInterface.PeerUdpAddressResponse\n         * @static\n         * @param {peerInterface.IPeerUdpAddressResponse=} [properties] Properties to set\n         * @returns {peerInterface.PeerUdpAddressResponse} PeerUdpAddressResponse instance\n         */\n        PeerUdpAddressResponse.create = function create(properties) {\n            return new PeerUdpAddressResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PeerUdpAddressResponse message. Does not implicitly {@link peerInterface.PeerUdpAddressResponse.verify|verify} messages.\n         * @function encode\n         * @memberof peerInterface.PeerUdpAddressResponse\n         * @static\n         * @param {peerInterface.IPeerUdpAddressResponse} m PeerUdpAddressResponse message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerUdpAddressResponse.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.address != null && Object.hasOwnProperty.call(m, \"address\"))\n                w.uint32(10).string(m.address);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PeerUdpAddressResponse message, length delimited. Does not implicitly {@link peerInterface.PeerUdpAddressResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof peerInterface.PeerUdpAddressResponse\n         * @static\n         * @param {peerInterface.IPeerUdpAddressResponse} message PeerUdpAddressResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerUdpAddressResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PeerUdpAddressResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof peerInterface.PeerUdpAddressResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {peerInterface.PeerUdpAddressResponse} PeerUdpAddressResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerUdpAddressResponse.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.peerInterface.PeerUdpAddressResponse();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.address = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PeerUdpAddressResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof peerInterface.PeerUdpAddressResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {peerInterface.PeerUdpAddressResponse} PeerUdpAddressResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerUdpAddressResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PeerUdpAddressResponse;\n    })();\n\n    return peerInterface;\n})();\n\nmodule.exports = $root;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst protobufjs = __importStar(require(\"protobufjs\"));\n/**\n * Returns a 5 character long random string of lower case letters\n */\nfunction randomString() {\n    return Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, '')\n        .substr(0, 5);\n}\nexports.randomString = randomString;\n/**\n * Gets the first promise fulfiled\n * @param promiseList List of promises\n */\nasync function promiseAny(promiseList) {\n    return await new Promise((resolve, reject) => {\n        const errorList = [];\n        for (const promise of promiseList) {\n            promise\n                .then((p) => {\n                resolve(p);\n            })\n                .catch((_) => null);\n            promise.catch((error) => {\n                errorList.push(error);\n                // check if all have failed\n                if (errorList.length == promiseList.length) {\n                    reject(errorList);\n                }\n            });\n        }\n    });\n}\nexports.promiseAny = promiseAny;\nfunction protobufToString(message) {\n    return protobufjs.util.base64.encode(message, 0, message.length);\n}\nexports.protobufToString = protobufToString;\nfunction stringToProtobuf(str) {\n    const buffer = protobufjs.util.newBuffer(protobufjs.util.base64.length(str));\n    protobufjs.util.base64.decode(str, buffer, 0);\n    return buffer;\n}\nexports.stringToProtobuf = stringToProtobuf;\nasync function sleep(ms) {\n    await new Promise((resolve, reject) => {\n        setTimeout(() => resolve(), ms);\n    });\n}\nexports.sleep = sleep;\n","module.exports = require(\"protobufjs\");","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.agentInterface = (function() {\n\n    /**\n     * Namespace agentInterface.\n     * @exports agentInterface\n     * @namespace\n     */\n    var agentInterface = {};\n\n    /**\n     * AgentMessageType enum.\n     * @name agentInterface.AgentMessageType\n     * @enum {number}\n     * @property {number} ERROR=0 ERROR value\n     * @property {number} STOP_AGENT=1 STOP_AGENT value\n     * @property {number} STATUS=2 STATUS value\n     * @property {number} REGISTER_NODE=3 REGISTER_NODE value\n     * @property {number} NEW_NODE=4 NEW_NODE value\n     * @property {number} LIST_NODES=5 LIST_NODES value\n     * @property {number} DERIVE_KEY=6 DERIVE_KEY value\n     * @property {number} SIGN_FILE=7 SIGN_FILE value\n     * @property {number} VERIFY_FILE=8 VERIFY_FILE value\n     * @property {number} LIST_VAULTS=9 LIST_VAULTS value\n     * @property {number} NEW_VAULT=10 NEW_VAULT value\n     * @property {number} DESTROY_VAULT=11 DESTROY_VAULT value\n     * @property {number} LIST_SECRETS=12 LIST_SECRETS value\n     * @property {number} CREATE_SECRET=13 CREATE_SECRET value\n     * @property {number} DESTROY_SECRET=14 DESTROY_SECRET value\n     * @property {number} GET_SECRET=15 GET_SECRET value\n     * @property {number} LIST_KEYS=16 LIST_KEYS value\n     * @property {number} GET_KEY=17 GET_KEY value\n     * @property {number} DELETE_KEY=18 DELETE_KEY value\n     * @property {number} ENCRYPT_FILE=19 ENCRYPT_FILE value\n     * @property {number} DECRYPT_FILE=20 DECRYPT_FILE value\n     * @property {number} GET_PRIMARY_KEYPAIR=21 GET_PRIMARY_KEYPAIR value\n     * @property {number} UPDATE_SECRET=22 UPDATE_SECRET value\n     * @property {number} GET_PEER_INFO=23 GET_PEER_INFO value\n     * @property {number} ADD_PEER=24 ADD_PEER value\n     * @property {number} PULL_VAULT=26 PULL_VAULT value\n     * @property {number} PING_PEER=27 PING_PEER value\n     * @property {number} FIND_PEER=28 FIND_PEER value\n     * @property {number} FIND_SOCIAL_PEER=29 FIND_SOCIAL_PEER value\n     * @property {number} LIST_PEERS=30 LIST_PEERS value\n     * @property {number} TOGGLE_STEALTH=31 TOGGLE_STEALTH value\n     * @property {number} UPDATE_PEER_INFO=32 UPDATE_PEER_INFO value\n     * @property {number} REQUEST_RELAY=33 REQUEST_RELAY value\n     * @property {number} REQUEST_PUNCH=34 REQUEST_PUNCH value\n     * @property {number} SCAN_VAULT_NAMES=35 SCAN_VAULT_NAMES value\n     */\n    agentInterface.AgentMessageType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"ERROR\"] = 0;\n        values[valuesById[1] = \"STOP_AGENT\"] = 1;\n        values[valuesById[2] = \"STATUS\"] = 2;\n        values[valuesById[3] = \"REGISTER_NODE\"] = 3;\n        values[valuesById[4] = \"NEW_NODE\"] = 4;\n        values[valuesById[5] = \"LIST_NODES\"] = 5;\n        values[valuesById[6] = \"DERIVE_KEY\"] = 6;\n        values[valuesById[7] = \"SIGN_FILE\"] = 7;\n        values[valuesById[8] = \"VERIFY_FILE\"] = 8;\n        values[valuesById[9] = \"LIST_VAULTS\"] = 9;\n        values[valuesById[10] = \"NEW_VAULT\"] = 10;\n        values[valuesById[11] = \"DESTROY_VAULT\"] = 11;\n        values[valuesById[12] = \"LIST_SECRETS\"] = 12;\n        values[valuesById[13] = \"CREATE_SECRET\"] = 13;\n        values[valuesById[14] = \"DESTROY_SECRET\"] = 14;\n        values[valuesById[15] = \"GET_SECRET\"] = 15;\n        values[valuesById[16] = \"LIST_KEYS\"] = 16;\n        values[valuesById[17] = \"GET_KEY\"] = 17;\n        values[valuesById[18] = \"DELETE_KEY\"] = 18;\n        values[valuesById[19] = \"ENCRYPT_FILE\"] = 19;\n        values[valuesById[20] = \"DECRYPT_FILE\"] = 20;\n        values[valuesById[21] = \"GET_PRIMARY_KEYPAIR\"] = 21;\n        values[valuesById[22] = \"UPDATE_SECRET\"] = 22;\n        values[valuesById[23] = \"GET_PEER_INFO\"] = 23;\n        values[valuesById[24] = \"ADD_PEER\"] = 24;\n        values[valuesById[26] = \"PULL_VAULT\"] = 26;\n        values[valuesById[27] = \"PING_PEER\"] = 27;\n        values[valuesById[28] = \"FIND_PEER\"] = 28;\n        values[valuesById[29] = \"FIND_SOCIAL_PEER\"] = 29;\n        values[valuesById[30] = \"LIST_PEERS\"] = 30;\n        values[valuesById[31] = \"TOGGLE_STEALTH\"] = 31;\n        values[valuesById[32] = \"UPDATE_PEER_INFO\"] = 32;\n        values[valuesById[33] = \"REQUEST_RELAY\"] = 33;\n        values[valuesById[34] = \"REQUEST_PUNCH\"] = 34;\n        values[valuesById[35] = \"SCAN_VAULT_NAMES\"] = 35;\n        return values;\n    })();\n\n    agentInterface.AgentMessage = (function() {\n\n        /**\n         * Properties of an AgentMessage.\n         * @memberof agentInterface\n         * @interface IAgentMessage\n         * @property {agentInterface.AgentMessageType|null} [type] AgentMessage type\n         * @property {boolean|null} [isResponse] AgentMessage isResponse\n         * @property {string|null} [nodePath] AgentMessage nodePath\n         * @property {Uint8Array|null} [subMessage] AgentMessage subMessage\n         */\n\n        /**\n         * Constructs a new AgentMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an AgentMessage.\n         * @implements IAgentMessage\n         * @constructor\n         * @param {agentInterface.IAgentMessage=} [p] Properties to set\n         */\n        function AgentMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * AgentMessage type.\n         * @member {agentInterface.AgentMessageType} type\n         * @memberof agentInterface.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.type = 0;\n\n        /**\n         * AgentMessage isResponse.\n         * @member {boolean} isResponse\n         * @memberof agentInterface.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.isResponse = false;\n\n        /**\n         * AgentMessage nodePath.\n         * @member {string} nodePath\n         * @memberof agentInterface.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.nodePath = \"\";\n\n        /**\n         * AgentMessage subMessage.\n         * @member {Uint8Array} subMessage\n         * @memberof agentInterface.AgentMessage\n         * @instance\n         */\n        AgentMessage.prototype.subMessage = $util.newBuffer([]);\n\n        /**\n         * Creates a new AgentMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.AgentMessage\n         * @static\n         * @param {agentInterface.IAgentMessage=} [properties] Properties to set\n         * @returns {agentInterface.AgentMessage} AgentMessage instance\n         */\n        AgentMessage.create = function create(properties) {\n            return new AgentMessage(properties);\n        };\n\n        /**\n         * Encodes the specified AgentMessage message. Does not implicitly {@link agentInterface.AgentMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.AgentMessage\n         * @static\n         * @param {agentInterface.IAgentMessage} m AgentMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AgentMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.type != null && Object.hasOwnProperty.call(m, \"type\"))\n                w.uint32(8).int32(m.type);\n            if (m.isResponse != null && Object.hasOwnProperty.call(m, \"isResponse\"))\n                w.uint32(16).bool(m.isResponse);\n            if (m.nodePath != null && Object.hasOwnProperty.call(m, \"nodePath\"))\n                w.uint32(26).string(m.nodePath);\n            if (m.subMessage != null && Object.hasOwnProperty.call(m, \"subMessage\"))\n                w.uint32(34).bytes(m.subMessage);\n            return w;\n        };\n\n        /**\n         * Encodes the specified AgentMessage message, length delimited. Does not implicitly {@link agentInterface.AgentMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.AgentMessage\n         * @static\n         * @param {agentInterface.IAgentMessage} message AgentMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AgentMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AgentMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.AgentMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.AgentMessage} AgentMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AgentMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.AgentMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.type = r.int32();\n                    break;\n                case 2:\n                    m.isResponse = r.bool();\n                    break;\n                case 3:\n                    m.nodePath = r.string();\n                    break;\n                case 4:\n                    m.subMessage = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an AgentMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.AgentMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.AgentMessage} AgentMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AgentMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return AgentMessage;\n    })();\n\n    agentInterface.ErrorMessage = (function() {\n\n        /**\n         * Properties of an ErrorMessage.\n         * @memberof agentInterface\n         * @interface IErrorMessage\n         * @property {string|null} [error] ErrorMessage error\n         */\n\n        /**\n         * Constructs a new ErrorMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an ErrorMessage.\n         * @implements IErrorMessage\n         * @constructor\n         * @param {agentInterface.IErrorMessage=} [p] Properties to set\n         */\n        function ErrorMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ErrorMessage error.\n         * @member {string} error\n         * @memberof agentInterface.ErrorMessage\n         * @instance\n         */\n        ErrorMessage.prototype.error = \"\";\n\n        /**\n         * Creates a new ErrorMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ErrorMessage\n         * @static\n         * @param {agentInterface.IErrorMessage=} [properties] Properties to set\n         * @returns {agentInterface.ErrorMessage} ErrorMessage instance\n         */\n        ErrorMessage.create = function create(properties) {\n            return new ErrorMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ErrorMessage message. Does not implicitly {@link agentInterface.ErrorMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ErrorMessage\n         * @static\n         * @param {agentInterface.IErrorMessage} m ErrorMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.error != null && Object.hasOwnProperty.call(m, \"error\"))\n                w.uint32(10).string(m.error);\n            return w;\n        };\n\n        /**\n         * Encodes the specified ErrorMessage message, length delimited. Does not implicitly {@link agentInterface.ErrorMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ErrorMessage\n         * @static\n         * @param {agentInterface.IErrorMessage} message ErrorMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ErrorMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ErrorMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ErrorMessage} ErrorMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ErrorMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.error = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an ErrorMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ErrorMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ErrorMessage} ErrorMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ErrorMessage;\n    })();\n\n    /**\n     * AgentStatusType enum.\n     * @name agentInterface.AgentStatusType\n     * @enum {number}\n     * @property {number} ONLINE=0 ONLINE value\n     * @property {number} OFFLINE=1 OFFLINE value\n     * @property {number} ERRORED=2 ERRORED value\n     */\n    agentInterface.AgentStatusType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"ONLINE\"] = 0;\n        values[valuesById[1] = \"OFFLINE\"] = 1;\n        values[valuesById[2] = \"ERRORED\"] = 2;\n        return values;\n    })();\n\n    agentInterface.AgentStatusResponseMessage = (function() {\n\n        /**\n         * Properties of an AgentStatusResponseMessage.\n         * @memberof agentInterface\n         * @interface IAgentStatusResponseMessage\n         * @property {agentInterface.AgentStatusType|null} [status] AgentStatusResponseMessage status\n         */\n\n        /**\n         * Constructs a new AgentStatusResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an AgentStatusResponseMessage.\n         * @implements IAgentStatusResponseMessage\n         * @constructor\n         * @param {agentInterface.IAgentStatusResponseMessage=} [p] Properties to set\n         */\n        function AgentStatusResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * AgentStatusResponseMessage status.\n         * @member {agentInterface.AgentStatusType} status\n         * @memberof agentInterface.AgentStatusResponseMessage\n         * @instance\n         */\n        AgentStatusResponseMessage.prototype.status = 0;\n\n        /**\n         * Creates a new AgentStatusResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.AgentStatusResponseMessage\n         * @static\n         * @param {agentInterface.IAgentStatusResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.AgentStatusResponseMessage} AgentStatusResponseMessage instance\n         */\n        AgentStatusResponseMessage.create = function create(properties) {\n            return new AgentStatusResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified AgentStatusResponseMessage message. Does not implicitly {@link agentInterface.AgentStatusResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.AgentStatusResponseMessage\n         * @static\n         * @param {agentInterface.IAgentStatusResponseMessage} m AgentStatusResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AgentStatusResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.status != null && Object.hasOwnProperty.call(m, \"status\"))\n                w.uint32(8).int32(m.status);\n            return w;\n        };\n\n        /**\n         * Encodes the specified AgentStatusResponseMessage message, length delimited. Does not implicitly {@link agentInterface.AgentStatusResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.AgentStatusResponseMessage\n         * @static\n         * @param {agentInterface.IAgentStatusResponseMessage} message AgentStatusResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AgentStatusResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AgentStatusResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.AgentStatusResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.AgentStatusResponseMessage} AgentStatusResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AgentStatusResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.AgentStatusResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.status = r.int32();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an AgentStatusResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.AgentStatusResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.AgentStatusResponseMessage} AgentStatusResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AgentStatusResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return AgentStatusResponseMessage;\n    })();\n\n    agentInterface.RegisterNodeRequestMessage = (function() {\n\n        /**\n         * Properties of a RegisterNodeRequestMessage.\n         * @memberof agentInterface\n         * @interface IRegisterNodeRequestMessage\n         * @property {string|null} [passphrase] RegisterNodeRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new RegisterNodeRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a RegisterNodeRequestMessage.\n         * @implements IRegisterNodeRequestMessage\n         * @constructor\n         * @param {agentInterface.IRegisterNodeRequestMessage=} [p] Properties to set\n         */\n        function RegisterNodeRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RegisterNodeRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agentInterface.RegisterNodeRequestMessage\n         * @instance\n         */\n        RegisterNodeRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new RegisterNodeRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.RegisterNodeRequestMessage\n         * @static\n         * @param {agentInterface.IRegisterNodeRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.RegisterNodeRequestMessage} RegisterNodeRequestMessage instance\n         */\n        RegisterNodeRequestMessage.create = function create(properties) {\n            return new RegisterNodeRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified RegisterNodeRequestMessage message. Does not implicitly {@link agentInterface.RegisterNodeRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.RegisterNodeRequestMessage\n         * @static\n         * @param {agentInterface.IRegisterNodeRequestMessage} m RegisterNodeRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RegisterNodeRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(10).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Encodes the specified RegisterNodeRequestMessage message, length delimited. Does not implicitly {@link agentInterface.RegisterNodeRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.RegisterNodeRequestMessage\n         * @static\n         * @param {agentInterface.IRegisterNodeRequestMessage} message RegisterNodeRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RegisterNodeRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RegisterNodeRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.RegisterNodeRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.RegisterNodeRequestMessage} RegisterNodeRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RegisterNodeRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.RegisterNodeRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a RegisterNodeRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.RegisterNodeRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.RegisterNodeRequestMessage} RegisterNodeRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RegisterNodeRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return RegisterNodeRequestMessage;\n    })();\n\n    agentInterface.RegisterNodeResponseMessage = (function() {\n\n        /**\n         * Properties of a RegisterNodeResponseMessage.\n         * @memberof agentInterface\n         * @interface IRegisterNodeResponseMessage\n         * @property {boolean|null} [successful] RegisterNodeResponseMessage successful\n         */\n\n        /**\n         * Constructs a new RegisterNodeResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a RegisterNodeResponseMessage.\n         * @implements IRegisterNodeResponseMessage\n         * @constructor\n         * @param {agentInterface.IRegisterNodeResponseMessage=} [p] Properties to set\n         */\n        function RegisterNodeResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RegisterNodeResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.RegisterNodeResponseMessage\n         * @instance\n         */\n        RegisterNodeResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new RegisterNodeResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.RegisterNodeResponseMessage\n         * @static\n         * @param {agentInterface.IRegisterNodeResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.RegisterNodeResponseMessage} RegisterNodeResponseMessage instance\n         */\n        RegisterNodeResponseMessage.create = function create(properties) {\n            return new RegisterNodeResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified RegisterNodeResponseMessage message. Does not implicitly {@link agentInterface.RegisterNodeResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.RegisterNodeResponseMessage\n         * @static\n         * @param {agentInterface.IRegisterNodeResponseMessage} m RegisterNodeResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RegisterNodeResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified RegisterNodeResponseMessage message, length delimited. Does not implicitly {@link agentInterface.RegisterNodeResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.RegisterNodeResponseMessage\n         * @static\n         * @param {agentInterface.IRegisterNodeResponseMessage} message RegisterNodeResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RegisterNodeResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RegisterNodeResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.RegisterNodeResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.RegisterNodeResponseMessage} RegisterNodeResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RegisterNodeResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.RegisterNodeResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a RegisterNodeResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.RegisterNodeResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.RegisterNodeResponseMessage} RegisterNodeResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RegisterNodeResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return RegisterNodeResponseMessage;\n    })();\n\n    agentInterface.NewNodeRequestMessage = (function() {\n\n        /**\n         * Properties of a NewNodeRequestMessage.\n         * @memberof agentInterface\n         * @interface INewNodeRequestMessage\n         * @property {string|null} [userId] NewNodeRequestMessage userId\n         * @property {string|null} [passphrase] NewNodeRequestMessage passphrase\n         * @property {number|null} [nbits] NewNodeRequestMessage nbits\n         */\n\n        /**\n         * Constructs a new NewNodeRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a NewNodeRequestMessage.\n         * @implements INewNodeRequestMessage\n         * @constructor\n         * @param {agentInterface.INewNodeRequestMessage=} [p] Properties to set\n         */\n        function NewNodeRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewNodeRequestMessage userId.\n         * @member {string} userId\n         * @memberof agentInterface.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.userId = \"\";\n\n        /**\n         * NewNodeRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agentInterface.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * NewNodeRequestMessage nbits.\n         * @member {number} nbits\n         * @memberof agentInterface.NewNodeRequestMessage\n         * @instance\n         */\n        NewNodeRequestMessage.prototype.nbits = 0;\n\n        /**\n         * Creates a new NewNodeRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.NewNodeRequestMessage\n         * @static\n         * @param {agentInterface.INewNodeRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.NewNodeRequestMessage} NewNodeRequestMessage instance\n         */\n        NewNodeRequestMessage.create = function create(properties) {\n            return new NewNodeRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewNodeRequestMessage message. Does not implicitly {@link agentInterface.NewNodeRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.NewNodeRequestMessage\n         * @static\n         * @param {agentInterface.INewNodeRequestMessage} m NewNodeRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewNodeRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.userId != null && Object.hasOwnProperty.call(m, \"userId\"))\n                w.uint32(10).string(m.userId);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(18).string(m.passphrase);\n            if (m.nbits != null && Object.hasOwnProperty.call(m, \"nbits\"))\n                w.uint32(24).int32(m.nbits);\n            return w;\n        };\n\n        /**\n         * Encodes the specified NewNodeRequestMessage message, length delimited. Does not implicitly {@link agentInterface.NewNodeRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.NewNodeRequestMessage\n         * @static\n         * @param {agentInterface.INewNodeRequestMessage} message NewNodeRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewNodeRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NewNodeRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.NewNodeRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.NewNodeRequestMessage} NewNodeRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewNodeRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.NewNodeRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.userId = r.string();\n                    break;\n                case 2:\n                    m.passphrase = r.string();\n                    break;\n                case 3:\n                    m.nbits = r.int32();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a NewNodeRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.NewNodeRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.NewNodeRequestMessage} NewNodeRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewNodeRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return NewNodeRequestMessage;\n    })();\n\n    agentInterface.NewNodeResponseMessage = (function() {\n\n        /**\n         * Properties of a NewNodeResponseMessage.\n         * @memberof agentInterface\n         * @interface INewNodeResponseMessage\n         * @property {boolean|null} [successful] NewNodeResponseMessage successful\n         */\n\n        /**\n         * Constructs a new NewNodeResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a NewNodeResponseMessage.\n         * @implements INewNodeResponseMessage\n         * @constructor\n         * @param {agentInterface.INewNodeResponseMessage=} [p] Properties to set\n         */\n        function NewNodeResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewNodeResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.NewNodeResponseMessage\n         * @instance\n         */\n        NewNodeResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new NewNodeResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.NewNodeResponseMessage\n         * @static\n         * @param {agentInterface.INewNodeResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.NewNodeResponseMessage} NewNodeResponseMessage instance\n         */\n        NewNodeResponseMessage.create = function create(properties) {\n            return new NewNodeResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewNodeResponseMessage message. Does not implicitly {@link agentInterface.NewNodeResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.NewNodeResponseMessage\n         * @static\n         * @param {agentInterface.INewNodeResponseMessage} m NewNodeResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewNodeResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified NewNodeResponseMessage message, length delimited. Does not implicitly {@link agentInterface.NewNodeResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.NewNodeResponseMessage\n         * @static\n         * @param {agentInterface.INewNodeResponseMessage} message NewNodeResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewNodeResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NewNodeResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.NewNodeResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.NewNodeResponseMessage} NewNodeResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewNodeResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.NewNodeResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a NewNodeResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.NewNodeResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.NewNodeResponseMessage} NewNodeResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewNodeResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return NewNodeResponseMessage;\n    })();\n\n    agentInterface.ListNodesRequestMessage = (function() {\n\n        /**\n         * Properties of a ListNodesRequestMessage.\n         * @memberof agentInterface\n         * @interface IListNodesRequestMessage\n         * @property {boolean|null} [unlockedOnly] ListNodesRequestMessage unlockedOnly\n         */\n\n        /**\n         * Constructs a new ListNodesRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ListNodesRequestMessage.\n         * @implements IListNodesRequestMessage\n         * @constructor\n         * @param {agentInterface.IListNodesRequestMessage=} [p] Properties to set\n         */\n        function ListNodesRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListNodesRequestMessage unlockedOnly.\n         * @member {boolean} unlockedOnly\n         * @memberof agentInterface.ListNodesRequestMessage\n         * @instance\n         */\n        ListNodesRequestMessage.prototype.unlockedOnly = false;\n\n        /**\n         * Creates a new ListNodesRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ListNodesRequestMessage\n         * @static\n         * @param {agentInterface.IListNodesRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.ListNodesRequestMessage} ListNodesRequestMessage instance\n         */\n        ListNodesRequestMessage.create = function create(properties) {\n            return new ListNodesRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListNodesRequestMessage message. Does not implicitly {@link agentInterface.ListNodesRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ListNodesRequestMessage\n         * @static\n         * @param {agentInterface.IListNodesRequestMessage} m ListNodesRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListNodesRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.unlockedOnly != null && Object.hasOwnProperty.call(m, \"unlockedOnly\"))\n                w.uint32(8).bool(m.unlockedOnly);\n            return w;\n        };\n\n        /**\n         * Encodes the specified ListNodesRequestMessage message, length delimited. Does not implicitly {@link agentInterface.ListNodesRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ListNodesRequestMessage\n         * @static\n         * @param {agentInterface.IListNodesRequestMessage} message ListNodesRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListNodesRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ListNodesRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ListNodesRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ListNodesRequestMessage} ListNodesRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListNodesRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ListNodesRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.unlockedOnly = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ListNodesRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ListNodesRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ListNodesRequestMessage} ListNodesRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListNodesRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ListNodesRequestMessage;\n    })();\n\n    agentInterface.ListNodesResponseMessage = (function() {\n\n        /**\n         * Properties of a ListNodesResponseMessage.\n         * @memberof agentInterface\n         * @interface IListNodesResponseMessage\n         * @property {Array.<string>|null} [nodes] ListNodesResponseMessage nodes\n         */\n\n        /**\n         * Constructs a new ListNodesResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ListNodesResponseMessage.\n         * @implements IListNodesResponseMessage\n         * @constructor\n         * @param {agentInterface.IListNodesResponseMessage=} [p] Properties to set\n         */\n        function ListNodesResponseMessage(p) {\n            this.nodes = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListNodesResponseMessage nodes.\n         * @member {Array.<string>} nodes\n         * @memberof agentInterface.ListNodesResponseMessage\n         * @instance\n         */\n        ListNodesResponseMessage.prototype.nodes = $util.emptyArray;\n\n        /**\n         * Creates a new ListNodesResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ListNodesResponseMessage\n         * @static\n         * @param {agentInterface.IListNodesResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.ListNodesResponseMessage} ListNodesResponseMessage instance\n         */\n        ListNodesResponseMessage.create = function create(properties) {\n            return new ListNodesResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListNodesResponseMessage message. Does not implicitly {@link agentInterface.ListNodesResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ListNodesResponseMessage\n         * @static\n         * @param {agentInterface.IListNodesResponseMessage} m ListNodesResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListNodesResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.nodes != null && m.nodes.length) {\n                for (var i = 0; i < m.nodes.length; ++i)\n                    w.uint32(10).string(m.nodes[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Encodes the specified ListNodesResponseMessage message, length delimited. Does not implicitly {@link agentInterface.ListNodesResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ListNodesResponseMessage\n         * @static\n         * @param {agentInterface.IListNodesResponseMessage} message ListNodesResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListNodesResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ListNodesResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ListNodesResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ListNodesResponseMessage} ListNodesResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListNodesResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ListNodesResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.nodes && m.nodes.length))\n                        m.nodes = [];\n                    m.nodes.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ListNodesResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ListNodesResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ListNodesResponseMessage} ListNodesResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListNodesResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ListNodesResponseMessage;\n    })();\n\n    agentInterface.SignFileRequestMessage = (function() {\n\n        /**\n         * Properties of a SignFileRequestMessage.\n         * @memberof agentInterface\n         * @interface ISignFileRequestMessage\n         * @property {string|null} [filePath] SignFileRequestMessage filePath\n         * @property {string|null} [privateKeyPath] SignFileRequestMessage privateKeyPath\n         * @property {string|null} [passphrase] SignFileRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new SignFileRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a SignFileRequestMessage.\n         * @implements ISignFileRequestMessage\n         * @constructor\n         * @param {agentInterface.ISignFileRequestMessage=} [p] Properties to set\n         */\n        function SignFileRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * SignFileRequestMessage filePath.\n         * @member {string} filePath\n         * @memberof agentInterface.SignFileRequestMessage\n         * @instance\n         */\n        SignFileRequestMessage.prototype.filePath = \"\";\n\n        /**\n         * SignFileRequestMessage privateKeyPath.\n         * @member {string} privateKeyPath\n         * @memberof agentInterface.SignFileRequestMessage\n         * @instance\n         */\n        SignFileRequestMessage.prototype.privateKeyPath = \"\";\n\n        /**\n         * SignFileRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agentInterface.SignFileRequestMessage\n         * @instance\n         */\n        SignFileRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new SignFileRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.SignFileRequestMessage\n         * @static\n         * @param {agentInterface.ISignFileRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.SignFileRequestMessage} SignFileRequestMessage instance\n         */\n        SignFileRequestMessage.create = function create(properties) {\n            return new SignFileRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified SignFileRequestMessage message. Does not implicitly {@link agentInterface.SignFileRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.SignFileRequestMessage\n         * @static\n         * @param {agentInterface.ISignFileRequestMessage} m SignFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SignFileRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.filePath != null && Object.hasOwnProperty.call(m, \"filePath\"))\n                w.uint32(10).string(m.filePath);\n            if (m.privateKeyPath != null && Object.hasOwnProperty.call(m, \"privateKeyPath\"))\n                w.uint32(18).string(m.privateKeyPath);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(26).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Encodes the specified SignFileRequestMessage message, length delimited. Does not implicitly {@link agentInterface.SignFileRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.SignFileRequestMessage\n         * @static\n         * @param {agentInterface.ISignFileRequestMessage} message SignFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SignFileRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SignFileRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.SignFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.SignFileRequestMessage} SignFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SignFileRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.SignFileRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filePath = r.string();\n                    break;\n                case 2:\n                    m.privateKeyPath = r.string();\n                    break;\n                case 3:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a SignFileRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.SignFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.SignFileRequestMessage} SignFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SignFileRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return SignFileRequestMessage;\n    })();\n\n    agentInterface.SignFileResponseMessage = (function() {\n\n        /**\n         * Properties of a SignFileResponseMessage.\n         * @memberof agentInterface\n         * @interface ISignFileResponseMessage\n         * @property {string|null} [signaturePath] SignFileResponseMessage signaturePath\n         */\n\n        /**\n         * Constructs a new SignFileResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a SignFileResponseMessage.\n         * @implements ISignFileResponseMessage\n         * @constructor\n         * @param {agentInterface.ISignFileResponseMessage=} [p] Properties to set\n         */\n        function SignFileResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * SignFileResponseMessage signaturePath.\n         * @member {string} signaturePath\n         * @memberof agentInterface.SignFileResponseMessage\n         * @instance\n         */\n        SignFileResponseMessage.prototype.signaturePath = \"\";\n\n        /**\n         * Creates a new SignFileResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.SignFileResponseMessage\n         * @static\n         * @param {agentInterface.ISignFileResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.SignFileResponseMessage} SignFileResponseMessage instance\n         */\n        SignFileResponseMessage.create = function create(properties) {\n            return new SignFileResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified SignFileResponseMessage message. Does not implicitly {@link agentInterface.SignFileResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.SignFileResponseMessage\n         * @static\n         * @param {agentInterface.ISignFileResponseMessage} m SignFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SignFileResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.signaturePath != null && Object.hasOwnProperty.call(m, \"signaturePath\"))\n                w.uint32(10).string(m.signaturePath);\n            return w;\n        };\n\n        /**\n         * Encodes the specified SignFileResponseMessage message, length delimited. Does not implicitly {@link agentInterface.SignFileResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.SignFileResponseMessage\n         * @static\n         * @param {agentInterface.ISignFileResponseMessage} message SignFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SignFileResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SignFileResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.SignFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.SignFileResponseMessage} SignFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SignFileResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.SignFileResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.signaturePath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a SignFileResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.SignFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.SignFileResponseMessage} SignFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SignFileResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return SignFileResponseMessage;\n    })();\n\n    agentInterface.VerifyFileRequestMessage = (function() {\n\n        /**\n         * Properties of a VerifyFileRequestMessage.\n         * @memberof agentInterface\n         * @interface IVerifyFileRequestMessage\n         * @property {string|null} [filePath] VerifyFileRequestMessage filePath\n         * @property {string|null} [publicKeyPath] VerifyFileRequestMessage publicKeyPath\n         */\n\n        /**\n         * Constructs a new VerifyFileRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a VerifyFileRequestMessage.\n         * @implements IVerifyFileRequestMessage\n         * @constructor\n         * @param {agentInterface.IVerifyFileRequestMessage=} [p] Properties to set\n         */\n        function VerifyFileRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * VerifyFileRequestMessage filePath.\n         * @member {string} filePath\n         * @memberof agentInterface.VerifyFileRequestMessage\n         * @instance\n         */\n        VerifyFileRequestMessage.prototype.filePath = \"\";\n\n        /**\n         * VerifyFileRequestMessage publicKeyPath.\n         * @member {string} publicKeyPath\n         * @memberof agentInterface.VerifyFileRequestMessage\n         * @instance\n         */\n        VerifyFileRequestMessage.prototype.publicKeyPath = \"\";\n\n        /**\n         * Creates a new VerifyFileRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.VerifyFileRequestMessage\n         * @static\n         * @param {agentInterface.IVerifyFileRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.VerifyFileRequestMessage} VerifyFileRequestMessage instance\n         */\n        VerifyFileRequestMessage.create = function create(properties) {\n            return new VerifyFileRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified VerifyFileRequestMessage message. Does not implicitly {@link agentInterface.VerifyFileRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.VerifyFileRequestMessage\n         * @static\n         * @param {agentInterface.IVerifyFileRequestMessage} m VerifyFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        VerifyFileRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.filePath != null && Object.hasOwnProperty.call(m, \"filePath\"))\n                w.uint32(10).string(m.filePath);\n            if (m.publicKeyPath != null && Object.hasOwnProperty.call(m, \"publicKeyPath\"))\n                w.uint32(18).string(m.publicKeyPath);\n            return w;\n        };\n\n        /**\n         * Encodes the specified VerifyFileRequestMessage message, length delimited. Does not implicitly {@link agentInterface.VerifyFileRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.VerifyFileRequestMessage\n         * @static\n         * @param {agentInterface.IVerifyFileRequestMessage} message VerifyFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        VerifyFileRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a VerifyFileRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.VerifyFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.VerifyFileRequestMessage} VerifyFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        VerifyFileRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.VerifyFileRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filePath = r.string();\n                    break;\n                case 2:\n                    m.publicKeyPath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a VerifyFileRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.VerifyFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.VerifyFileRequestMessage} VerifyFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        VerifyFileRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return VerifyFileRequestMessage;\n    })();\n\n    agentInterface.VerifyFileResponseMessage = (function() {\n\n        /**\n         * Properties of a VerifyFileResponseMessage.\n         * @memberof agentInterface\n         * @interface IVerifyFileResponseMessage\n         * @property {boolean|null} [verified] VerifyFileResponseMessage verified\n         */\n\n        /**\n         * Constructs a new VerifyFileResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a VerifyFileResponseMessage.\n         * @implements IVerifyFileResponseMessage\n         * @constructor\n         * @param {agentInterface.IVerifyFileResponseMessage=} [p] Properties to set\n         */\n        function VerifyFileResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * VerifyFileResponseMessage verified.\n         * @member {boolean} verified\n         * @memberof agentInterface.VerifyFileResponseMessage\n         * @instance\n         */\n        VerifyFileResponseMessage.prototype.verified = false;\n\n        /**\n         * Creates a new VerifyFileResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.VerifyFileResponseMessage\n         * @static\n         * @param {agentInterface.IVerifyFileResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.VerifyFileResponseMessage} VerifyFileResponseMessage instance\n         */\n        VerifyFileResponseMessage.create = function create(properties) {\n            return new VerifyFileResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified VerifyFileResponseMessage message. Does not implicitly {@link agentInterface.VerifyFileResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.VerifyFileResponseMessage\n         * @static\n         * @param {agentInterface.IVerifyFileResponseMessage} m VerifyFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        VerifyFileResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.verified != null && Object.hasOwnProperty.call(m, \"verified\"))\n                w.uint32(8).bool(m.verified);\n            return w;\n        };\n\n        /**\n         * Encodes the specified VerifyFileResponseMessage message, length delimited. Does not implicitly {@link agentInterface.VerifyFileResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.VerifyFileResponseMessage\n         * @static\n         * @param {agentInterface.IVerifyFileResponseMessage} message VerifyFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        VerifyFileResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a VerifyFileResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.VerifyFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.VerifyFileResponseMessage} VerifyFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        VerifyFileResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.VerifyFileResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.verified = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a VerifyFileResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.VerifyFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.VerifyFileResponseMessage} VerifyFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        VerifyFileResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return VerifyFileResponseMessage;\n    })();\n\n    agentInterface.EncryptFileRequestMessage = (function() {\n\n        /**\n         * Properties of an EncryptFileRequestMessage.\n         * @memberof agentInterface\n         * @interface IEncryptFileRequestMessage\n         * @property {string|null} [filePath] EncryptFileRequestMessage filePath\n         * @property {string|null} [publicKeyPath] EncryptFileRequestMessage publicKeyPath\n         */\n\n        /**\n         * Constructs a new EncryptFileRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an EncryptFileRequestMessage.\n         * @implements IEncryptFileRequestMessage\n         * @constructor\n         * @param {agentInterface.IEncryptFileRequestMessage=} [p] Properties to set\n         */\n        function EncryptFileRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * EncryptFileRequestMessage filePath.\n         * @member {string} filePath\n         * @memberof agentInterface.EncryptFileRequestMessage\n         * @instance\n         */\n        EncryptFileRequestMessage.prototype.filePath = \"\";\n\n        /**\n         * EncryptFileRequestMessage publicKeyPath.\n         * @member {string} publicKeyPath\n         * @memberof agentInterface.EncryptFileRequestMessage\n         * @instance\n         */\n        EncryptFileRequestMessage.prototype.publicKeyPath = \"\";\n\n        /**\n         * Creates a new EncryptFileRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.EncryptFileRequestMessage\n         * @static\n         * @param {agentInterface.IEncryptFileRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.EncryptFileRequestMessage} EncryptFileRequestMessage instance\n         */\n        EncryptFileRequestMessage.create = function create(properties) {\n            return new EncryptFileRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified EncryptFileRequestMessage message. Does not implicitly {@link agentInterface.EncryptFileRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.EncryptFileRequestMessage\n         * @static\n         * @param {agentInterface.IEncryptFileRequestMessage} m EncryptFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EncryptFileRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.filePath != null && Object.hasOwnProperty.call(m, \"filePath\"))\n                w.uint32(10).string(m.filePath);\n            if (m.publicKeyPath != null && Object.hasOwnProperty.call(m, \"publicKeyPath\"))\n                w.uint32(18).string(m.publicKeyPath);\n            return w;\n        };\n\n        /**\n         * Encodes the specified EncryptFileRequestMessage message, length delimited. Does not implicitly {@link agentInterface.EncryptFileRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.EncryptFileRequestMessage\n         * @static\n         * @param {agentInterface.IEncryptFileRequestMessage} message EncryptFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EncryptFileRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an EncryptFileRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.EncryptFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.EncryptFileRequestMessage} EncryptFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EncryptFileRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.EncryptFileRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filePath = r.string();\n                    break;\n                case 2:\n                    m.publicKeyPath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an EncryptFileRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.EncryptFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.EncryptFileRequestMessage} EncryptFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EncryptFileRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return EncryptFileRequestMessage;\n    })();\n\n    agentInterface.EncryptFileResponseMessage = (function() {\n\n        /**\n         * Properties of an EncryptFileResponseMessage.\n         * @memberof agentInterface\n         * @interface IEncryptFileResponseMessage\n         * @property {string|null} [encryptedPath] EncryptFileResponseMessage encryptedPath\n         */\n\n        /**\n         * Constructs a new EncryptFileResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an EncryptFileResponseMessage.\n         * @implements IEncryptFileResponseMessage\n         * @constructor\n         * @param {agentInterface.IEncryptFileResponseMessage=} [p] Properties to set\n         */\n        function EncryptFileResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * EncryptFileResponseMessage encryptedPath.\n         * @member {string} encryptedPath\n         * @memberof agentInterface.EncryptFileResponseMessage\n         * @instance\n         */\n        EncryptFileResponseMessage.prototype.encryptedPath = \"\";\n\n        /**\n         * Creates a new EncryptFileResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.EncryptFileResponseMessage\n         * @static\n         * @param {agentInterface.IEncryptFileResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.EncryptFileResponseMessage} EncryptFileResponseMessage instance\n         */\n        EncryptFileResponseMessage.create = function create(properties) {\n            return new EncryptFileResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified EncryptFileResponseMessage message. Does not implicitly {@link agentInterface.EncryptFileResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.EncryptFileResponseMessage\n         * @static\n         * @param {agentInterface.IEncryptFileResponseMessage} m EncryptFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EncryptFileResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.encryptedPath != null && Object.hasOwnProperty.call(m, \"encryptedPath\"))\n                w.uint32(10).string(m.encryptedPath);\n            return w;\n        };\n\n        /**\n         * Encodes the specified EncryptFileResponseMessage message, length delimited. Does not implicitly {@link agentInterface.EncryptFileResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.EncryptFileResponseMessage\n         * @static\n         * @param {agentInterface.IEncryptFileResponseMessage} message EncryptFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EncryptFileResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an EncryptFileResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.EncryptFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.EncryptFileResponseMessage} EncryptFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EncryptFileResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.EncryptFileResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.encryptedPath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an EncryptFileResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.EncryptFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.EncryptFileResponseMessage} EncryptFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EncryptFileResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return EncryptFileResponseMessage;\n    })();\n\n    agentInterface.DecryptFileRequestMessage = (function() {\n\n        /**\n         * Properties of a DecryptFileRequestMessage.\n         * @memberof agentInterface\n         * @interface IDecryptFileRequestMessage\n         * @property {string|null} [filePath] DecryptFileRequestMessage filePath\n         * @property {string|null} [privateKeyPath] DecryptFileRequestMessage privateKeyPath\n         * @property {string|null} [passphrase] DecryptFileRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new DecryptFileRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a DecryptFileRequestMessage.\n         * @implements IDecryptFileRequestMessage\n         * @constructor\n         * @param {agentInterface.IDecryptFileRequestMessage=} [p] Properties to set\n         */\n        function DecryptFileRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DecryptFileRequestMessage filePath.\n         * @member {string} filePath\n         * @memberof agentInterface.DecryptFileRequestMessage\n         * @instance\n         */\n        DecryptFileRequestMessage.prototype.filePath = \"\";\n\n        /**\n         * DecryptFileRequestMessage privateKeyPath.\n         * @member {string} privateKeyPath\n         * @memberof agentInterface.DecryptFileRequestMessage\n         * @instance\n         */\n        DecryptFileRequestMessage.prototype.privateKeyPath = \"\";\n\n        /**\n         * DecryptFileRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agentInterface.DecryptFileRequestMessage\n         * @instance\n         */\n        DecryptFileRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new DecryptFileRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.DecryptFileRequestMessage\n         * @static\n         * @param {agentInterface.IDecryptFileRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.DecryptFileRequestMessage} DecryptFileRequestMessage instance\n         */\n        DecryptFileRequestMessage.create = function create(properties) {\n            return new DecryptFileRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DecryptFileRequestMessage message. Does not implicitly {@link agentInterface.DecryptFileRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.DecryptFileRequestMessage\n         * @static\n         * @param {agentInterface.IDecryptFileRequestMessage} m DecryptFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DecryptFileRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.filePath != null && Object.hasOwnProperty.call(m, \"filePath\"))\n                w.uint32(10).string(m.filePath);\n            if (m.privateKeyPath != null && Object.hasOwnProperty.call(m, \"privateKeyPath\"))\n                w.uint32(18).string(m.privateKeyPath);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(26).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Encodes the specified DecryptFileRequestMessage message, length delimited. Does not implicitly {@link agentInterface.DecryptFileRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.DecryptFileRequestMessage\n         * @static\n         * @param {agentInterface.IDecryptFileRequestMessage} message DecryptFileRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DecryptFileRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DecryptFileRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.DecryptFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.DecryptFileRequestMessage} DecryptFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DecryptFileRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.DecryptFileRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filePath = r.string();\n                    break;\n                case 2:\n                    m.privateKeyPath = r.string();\n                    break;\n                case 3:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a DecryptFileRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.DecryptFileRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.DecryptFileRequestMessage} DecryptFileRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DecryptFileRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return DecryptFileRequestMessage;\n    })();\n\n    agentInterface.DecryptFileResponseMessage = (function() {\n\n        /**\n         * Properties of a DecryptFileResponseMessage.\n         * @memberof agentInterface\n         * @interface IDecryptFileResponseMessage\n         * @property {string|null} [decryptedPath] DecryptFileResponseMessage decryptedPath\n         */\n\n        /**\n         * Constructs a new DecryptFileResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a DecryptFileResponseMessage.\n         * @implements IDecryptFileResponseMessage\n         * @constructor\n         * @param {agentInterface.IDecryptFileResponseMessage=} [p] Properties to set\n         */\n        function DecryptFileResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DecryptFileResponseMessage decryptedPath.\n         * @member {string} decryptedPath\n         * @memberof agentInterface.DecryptFileResponseMessage\n         * @instance\n         */\n        DecryptFileResponseMessage.prototype.decryptedPath = \"\";\n\n        /**\n         * Creates a new DecryptFileResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.DecryptFileResponseMessage\n         * @static\n         * @param {agentInterface.IDecryptFileResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.DecryptFileResponseMessage} DecryptFileResponseMessage instance\n         */\n        DecryptFileResponseMessage.create = function create(properties) {\n            return new DecryptFileResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DecryptFileResponseMessage message. Does not implicitly {@link agentInterface.DecryptFileResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.DecryptFileResponseMessage\n         * @static\n         * @param {agentInterface.IDecryptFileResponseMessage} m DecryptFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DecryptFileResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.decryptedPath != null && Object.hasOwnProperty.call(m, \"decryptedPath\"))\n                w.uint32(10).string(m.decryptedPath);\n            return w;\n        };\n\n        /**\n         * Encodes the specified DecryptFileResponseMessage message, length delimited. Does not implicitly {@link agentInterface.DecryptFileResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.DecryptFileResponseMessage\n         * @static\n         * @param {agentInterface.IDecryptFileResponseMessage} message DecryptFileResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DecryptFileResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DecryptFileResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.DecryptFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.DecryptFileResponseMessage} DecryptFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DecryptFileResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.DecryptFileResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.decryptedPath = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a DecryptFileResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.DecryptFileResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.DecryptFileResponseMessage} DecryptFileResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DecryptFileResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return DecryptFileResponseMessage;\n    })();\n\n    agentInterface.ListVaultsRequestMessage = (function() {\n\n        /**\n         * Properties of a ListVaultsRequestMessage.\n         * @memberof agentInterface\n         * @interface IListVaultsRequestMessage\n         */\n\n        /**\n         * Constructs a new ListVaultsRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ListVaultsRequestMessage.\n         * @implements IListVaultsRequestMessage\n         * @constructor\n         * @param {agentInterface.IListVaultsRequestMessage=} [p] Properties to set\n         */\n        function ListVaultsRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Creates a new ListVaultsRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ListVaultsRequestMessage\n         * @static\n         * @param {agentInterface.IListVaultsRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.ListVaultsRequestMessage} ListVaultsRequestMessage instance\n         */\n        ListVaultsRequestMessage.create = function create(properties) {\n            return new ListVaultsRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListVaultsRequestMessage message. Does not implicitly {@link agentInterface.ListVaultsRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ListVaultsRequestMessage\n         * @static\n         * @param {agentInterface.IListVaultsRequestMessage} m ListVaultsRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListVaultsRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            return w;\n        };\n\n        /**\n         * Encodes the specified ListVaultsRequestMessage message, length delimited. Does not implicitly {@link agentInterface.ListVaultsRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ListVaultsRequestMessage\n         * @static\n         * @param {agentInterface.IListVaultsRequestMessage} message ListVaultsRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListVaultsRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ListVaultsRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ListVaultsRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ListVaultsRequestMessage} ListVaultsRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListVaultsRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ListVaultsRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ListVaultsRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ListVaultsRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ListVaultsRequestMessage} ListVaultsRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListVaultsRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ListVaultsRequestMessage;\n    })();\n\n    agentInterface.ListVaultsResponseMessage = (function() {\n\n        /**\n         * Properties of a ListVaultsResponseMessage.\n         * @memberof agentInterface\n         * @interface IListVaultsResponseMessage\n         * @property {Array.<string>|null} [vaultNames] ListVaultsResponseMessage vaultNames\n         */\n\n        /**\n         * Constructs a new ListVaultsResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ListVaultsResponseMessage.\n         * @implements IListVaultsResponseMessage\n         * @constructor\n         * @param {agentInterface.IListVaultsResponseMessage=} [p] Properties to set\n         */\n        function ListVaultsResponseMessage(p) {\n            this.vaultNames = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListVaultsResponseMessage vaultNames.\n         * @member {Array.<string>} vaultNames\n         * @memberof agentInterface.ListVaultsResponseMessage\n         * @instance\n         */\n        ListVaultsResponseMessage.prototype.vaultNames = $util.emptyArray;\n\n        /**\n         * Creates a new ListVaultsResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ListVaultsResponseMessage\n         * @static\n         * @param {agentInterface.IListVaultsResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.ListVaultsResponseMessage} ListVaultsResponseMessage instance\n         */\n        ListVaultsResponseMessage.create = function create(properties) {\n            return new ListVaultsResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListVaultsResponseMessage message. Does not implicitly {@link agentInterface.ListVaultsResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ListVaultsResponseMessage\n         * @static\n         * @param {agentInterface.IListVaultsResponseMessage} m ListVaultsResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListVaultsResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultNames != null && m.vaultNames.length) {\n                for (var i = 0; i < m.vaultNames.length; ++i)\n                    w.uint32(10).string(m.vaultNames[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Encodes the specified ListVaultsResponseMessage message, length delimited. Does not implicitly {@link agentInterface.ListVaultsResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ListVaultsResponseMessage\n         * @static\n         * @param {agentInterface.IListVaultsResponseMessage} message ListVaultsResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListVaultsResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ListVaultsResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ListVaultsResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ListVaultsResponseMessage} ListVaultsResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListVaultsResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ListVaultsResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.vaultNames && m.vaultNames.length))\n                        m.vaultNames = [];\n                    m.vaultNames.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ListVaultsResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ListVaultsResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ListVaultsResponseMessage} ListVaultsResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListVaultsResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ListVaultsResponseMessage;\n    })();\n\n    agentInterface.ScanVaultNamesRequestMessage = (function() {\n\n        /**\n         * Properties of a ScanVaultNamesRequestMessage.\n         * @memberof agentInterface\n         * @interface IScanVaultNamesRequestMessage\n         * @property {string|null} [publicKey] ScanVaultNamesRequestMessage publicKey\n         */\n\n        /**\n         * Constructs a new ScanVaultNamesRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ScanVaultNamesRequestMessage.\n         * @implements IScanVaultNamesRequestMessage\n         * @constructor\n         * @param {agentInterface.IScanVaultNamesRequestMessage=} [p] Properties to set\n         */\n        function ScanVaultNamesRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ScanVaultNamesRequestMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.ScanVaultNamesRequestMessage\n         * @instance\n         */\n        ScanVaultNamesRequestMessage.prototype.publicKey = \"\";\n\n        /**\n         * Creates a new ScanVaultNamesRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ScanVaultNamesRequestMessage\n         * @static\n         * @param {agentInterface.IScanVaultNamesRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.ScanVaultNamesRequestMessage} ScanVaultNamesRequestMessage instance\n         */\n        ScanVaultNamesRequestMessage.create = function create(properties) {\n            return new ScanVaultNamesRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ScanVaultNamesRequestMessage message. Does not implicitly {@link agentInterface.ScanVaultNamesRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ScanVaultNamesRequestMessage\n         * @static\n         * @param {agentInterface.IScanVaultNamesRequestMessage} m ScanVaultNamesRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ScanVaultNamesRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified ScanVaultNamesRequestMessage message, length delimited. Does not implicitly {@link agentInterface.ScanVaultNamesRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ScanVaultNamesRequestMessage\n         * @static\n         * @param {agentInterface.IScanVaultNamesRequestMessage} message ScanVaultNamesRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ScanVaultNamesRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ScanVaultNamesRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ScanVaultNamesRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ScanVaultNamesRequestMessage} ScanVaultNamesRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ScanVaultNamesRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ScanVaultNamesRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ScanVaultNamesRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ScanVaultNamesRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ScanVaultNamesRequestMessage} ScanVaultNamesRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ScanVaultNamesRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ScanVaultNamesRequestMessage;\n    })();\n\n    agentInterface.ScanVaultNamesResponseMessage = (function() {\n\n        /**\n         * Properties of a ScanVaultNamesResponseMessage.\n         * @memberof agentInterface\n         * @interface IScanVaultNamesResponseMessage\n         * @property {Array.<string>|null} [vaultNames] ScanVaultNamesResponseMessage vaultNames\n         */\n\n        /**\n         * Constructs a new ScanVaultNamesResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ScanVaultNamesResponseMessage.\n         * @implements IScanVaultNamesResponseMessage\n         * @constructor\n         * @param {agentInterface.IScanVaultNamesResponseMessage=} [p] Properties to set\n         */\n        function ScanVaultNamesResponseMessage(p) {\n            this.vaultNames = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ScanVaultNamesResponseMessage vaultNames.\n         * @member {Array.<string>} vaultNames\n         * @memberof agentInterface.ScanVaultNamesResponseMessage\n         * @instance\n         */\n        ScanVaultNamesResponseMessage.prototype.vaultNames = $util.emptyArray;\n\n        /**\n         * Creates a new ScanVaultNamesResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ScanVaultNamesResponseMessage\n         * @static\n         * @param {agentInterface.IScanVaultNamesResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.ScanVaultNamesResponseMessage} ScanVaultNamesResponseMessage instance\n         */\n        ScanVaultNamesResponseMessage.create = function create(properties) {\n            return new ScanVaultNamesResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ScanVaultNamesResponseMessage message. Does not implicitly {@link agentInterface.ScanVaultNamesResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ScanVaultNamesResponseMessage\n         * @static\n         * @param {agentInterface.IScanVaultNamesResponseMessage} m ScanVaultNamesResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ScanVaultNamesResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultNames != null && m.vaultNames.length) {\n                for (var i = 0; i < m.vaultNames.length; ++i)\n                    w.uint32(10).string(m.vaultNames[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Encodes the specified ScanVaultNamesResponseMessage message, length delimited. Does not implicitly {@link agentInterface.ScanVaultNamesResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ScanVaultNamesResponseMessage\n         * @static\n         * @param {agentInterface.IScanVaultNamesResponseMessage} message ScanVaultNamesResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ScanVaultNamesResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ScanVaultNamesResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ScanVaultNamesResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ScanVaultNamesResponseMessage} ScanVaultNamesResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ScanVaultNamesResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ScanVaultNamesResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.vaultNames && m.vaultNames.length))\n                        m.vaultNames = [];\n                    m.vaultNames.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ScanVaultNamesResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ScanVaultNamesResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ScanVaultNamesResponseMessage} ScanVaultNamesResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ScanVaultNamesResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ScanVaultNamesResponseMessage;\n    })();\n\n    agentInterface.NewVaultRequestMessage = (function() {\n\n        /**\n         * Properties of a NewVaultRequestMessage.\n         * @memberof agentInterface\n         * @interface INewVaultRequestMessage\n         * @property {string|null} [vaultName] NewVaultRequestMessage vaultName\n         */\n\n        /**\n         * Constructs a new NewVaultRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a NewVaultRequestMessage.\n         * @implements INewVaultRequestMessage\n         * @constructor\n         * @param {agentInterface.INewVaultRequestMessage=} [p] Properties to set\n         */\n        function NewVaultRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewVaultRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agentInterface.NewVaultRequestMessage\n         * @instance\n         */\n        NewVaultRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * Creates a new NewVaultRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.NewVaultRequestMessage\n         * @static\n         * @param {agentInterface.INewVaultRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.NewVaultRequestMessage} NewVaultRequestMessage instance\n         */\n        NewVaultRequestMessage.create = function create(properties) {\n            return new NewVaultRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewVaultRequestMessage message. Does not implicitly {@link agentInterface.NewVaultRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.NewVaultRequestMessage\n         * @static\n         * @param {agentInterface.INewVaultRequestMessage} m NewVaultRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewVaultRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            return w;\n        };\n\n        /**\n         * Encodes the specified NewVaultRequestMessage message, length delimited. Does not implicitly {@link agentInterface.NewVaultRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.NewVaultRequestMessage\n         * @static\n         * @param {agentInterface.INewVaultRequestMessage} message NewVaultRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewVaultRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NewVaultRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.NewVaultRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.NewVaultRequestMessage} NewVaultRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewVaultRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.NewVaultRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a NewVaultRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.NewVaultRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.NewVaultRequestMessage} NewVaultRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewVaultRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return NewVaultRequestMessage;\n    })();\n\n    agentInterface.NewVaultResponseMessage = (function() {\n\n        /**\n         * Properties of a NewVaultResponseMessage.\n         * @memberof agentInterface\n         * @interface INewVaultResponseMessage\n         * @property {boolean|null} [successful] NewVaultResponseMessage successful\n         */\n\n        /**\n         * Constructs a new NewVaultResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a NewVaultResponseMessage.\n         * @implements INewVaultResponseMessage\n         * @constructor\n         * @param {agentInterface.INewVaultResponseMessage=} [p] Properties to set\n         */\n        function NewVaultResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * NewVaultResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.NewVaultResponseMessage\n         * @instance\n         */\n        NewVaultResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new NewVaultResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.NewVaultResponseMessage\n         * @static\n         * @param {agentInterface.INewVaultResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.NewVaultResponseMessage} NewVaultResponseMessage instance\n         */\n        NewVaultResponseMessage.create = function create(properties) {\n            return new NewVaultResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified NewVaultResponseMessage message. Does not implicitly {@link agentInterface.NewVaultResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.NewVaultResponseMessage\n         * @static\n         * @param {agentInterface.INewVaultResponseMessage} m NewVaultResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewVaultResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified NewVaultResponseMessage message, length delimited. Does not implicitly {@link agentInterface.NewVaultResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.NewVaultResponseMessage\n         * @static\n         * @param {agentInterface.INewVaultResponseMessage} message NewVaultResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NewVaultResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NewVaultResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.NewVaultResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.NewVaultResponseMessage} NewVaultResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewVaultResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.NewVaultResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a NewVaultResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.NewVaultResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.NewVaultResponseMessage} NewVaultResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NewVaultResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return NewVaultResponseMessage;\n    })();\n\n    agentInterface.PullVaultRequestMessage = (function() {\n\n        /**\n         * Properties of a PullVaultRequestMessage.\n         * @memberof agentInterface\n         * @interface IPullVaultRequestMessage\n         * @property {string|null} [vaultName] PullVaultRequestMessage vaultName\n         * @property {string|null} [publicKey] PullVaultRequestMessage publicKey\n         */\n\n        /**\n         * Constructs a new PullVaultRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a PullVaultRequestMessage.\n         * @implements IPullVaultRequestMessage\n         * @constructor\n         * @param {agentInterface.IPullVaultRequestMessage=} [p] Properties to set\n         */\n        function PullVaultRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PullVaultRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agentInterface.PullVaultRequestMessage\n         * @instance\n         */\n        PullVaultRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * PullVaultRequestMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.PullVaultRequestMessage\n         * @instance\n         */\n        PullVaultRequestMessage.prototype.publicKey = \"\";\n\n        /**\n         * Creates a new PullVaultRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.PullVaultRequestMessage\n         * @static\n         * @param {agentInterface.IPullVaultRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.PullVaultRequestMessage} PullVaultRequestMessage instance\n         */\n        PullVaultRequestMessage.create = function create(properties) {\n            return new PullVaultRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified PullVaultRequestMessage message. Does not implicitly {@link agentInterface.PullVaultRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.PullVaultRequestMessage\n         * @static\n         * @param {agentInterface.IPullVaultRequestMessage} m PullVaultRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PullVaultRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(18).string(m.publicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PullVaultRequestMessage message, length delimited. Does not implicitly {@link agentInterface.PullVaultRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.PullVaultRequestMessage\n         * @static\n         * @param {agentInterface.IPullVaultRequestMessage} message PullVaultRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PullVaultRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PullVaultRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.PullVaultRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.PullVaultRequestMessage} PullVaultRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PullVaultRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.PullVaultRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.publicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PullVaultRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.PullVaultRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.PullVaultRequestMessage} PullVaultRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PullVaultRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PullVaultRequestMessage;\n    })();\n\n    agentInterface.PullVaultResponseMessage = (function() {\n\n        /**\n         * Properties of a PullVaultResponseMessage.\n         * @memberof agentInterface\n         * @interface IPullVaultResponseMessage\n         * @property {boolean|null} [successful] PullVaultResponseMessage successful\n         */\n\n        /**\n         * Constructs a new PullVaultResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a PullVaultResponseMessage.\n         * @implements IPullVaultResponseMessage\n         * @constructor\n         * @param {agentInterface.IPullVaultResponseMessage=} [p] Properties to set\n         */\n        function PullVaultResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PullVaultResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.PullVaultResponseMessage\n         * @instance\n         */\n        PullVaultResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new PullVaultResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.PullVaultResponseMessage\n         * @static\n         * @param {agentInterface.IPullVaultResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.PullVaultResponseMessage} PullVaultResponseMessage instance\n         */\n        PullVaultResponseMessage.create = function create(properties) {\n            return new PullVaultResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified PullVaultResponseMessage message. Does not implicitly {@link agentInterface.PullVaultResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.PullVaultResponseMessage\n         * @static\n         * @param {agentInterface.IPullVaultResponseMessage} m PullVaultResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PullVaultResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PullVaultResponseMessage message, length delimited. Does not implicitly {@link agentInterface.PullVaultResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.PullVaultResponseMessage\n         * @static\n         * @param {agentInterface.IPullVaultResponseMessage} message PullVaultResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PullVaultResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PullVaultResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.PullVaultResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.PullVaultResponseMessage} PullVaultResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PullVaultResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.PullVaultResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PullVaultResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.PullVaultResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.PullVaultResponseMessage} PullVaultResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PullVaultResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PullVaultResponseMessage;\n    })();\n\n    agentInterface.DestroyVaultRequestMessage = (function() {\n\n        /**\n         * Properties of a DestroyVaultRequestMessage.\n         * @memberof agentInterface\n         * @interface IDestroyVaultRequestMessage\n         * @property {string|null} [vaultName] DestroyVaultRequestMessage vaultName\n         */\n\n        /**\n         * Constructs a new DestroyVaultRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a DestroyVaultRequestMessage.\n         * @implements IDestroyVaultRequestMessage\n         * @constructor\n         * @param {agentInterface.IDestroyVaultRequestMessage=} [p] Properties to set\n         */\n        function DestroyVaultRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroyVaultRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agentInterface.DestroyVaultRequestMessage\n         * @instance\n         */\n        DestroyVaultRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * Creates a new DestroyVaultRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.DestroyVaultRequestMessage\n         * @static\n         * @param {agentInterface.IDestroyVaultRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.DestroyVaultRequestMessage} DestroyVaultRequestMessage instance\n         */\n        DestroyVaultRequestMessage.create = function create(properties) {\n            return new DestroyVaultRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroyVaultRequestMessage message. Does not implicitly {@link agentInterface.DestroyVaultRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.DestroyVaultRequestMessage\n         * @static\n         * @param {agentInterface.IDestroyVaultRequestMessage} m DestroyVaultRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroyVaultRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            return w;\n        };\n\n        /**\n         * Encodes the specified DestroyVaultRequestMessage message, length delimited. Does not implicitly {@link agentInterface.DestroyVaultRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.DestroyVaultRequestMessage\n         * @static\n         * @param {agentInterface.IDestroyVaultRequestMessage} message DestroyVaultRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroyVaultRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DestroyVaultRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.DestroyVaultRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.DestroyVaultRequestMessage} DestroyVaultRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroyVaultRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.DestroyVaultRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a DestroyVaultRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.DestroyVaultRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.DestroyVaultRequestMessage} DestroyVaultRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroyVaultRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return DestroyVaultRequestMessage;\n    })();\n\n    agentInterface.DestroyVaultResponseMessage = (function() {\n\n        /**\n         * Properties of a DestroyVaultResponseMessage.\n         * @memberof agentInterface\n         * @interface IDestroyVaultResponseMessage\n         * @property {boolean|null} [successful] DestroyVaultResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DestroyVaultResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a DestroyVaultResponseMessage.\n         * @implements IDestroyVaultResponseMessage\n         * @constructor\n         * @param {agentInterface.IDestroyVaultResponseMessage=} [p] Properties to set\n         */\n        function DestroyVaultResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroyVaultResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.DestroyVaultResponseMessage\n         * @instance\n         */\n        DestroyVaultResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DestroyVaultResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.DestroyVaultResponseMessage\n         * @static\n         * @param {agentInterface.IDestroyVaultResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.DestroyVaultResponseMessage} DestroyVaultResponseMessage instance\n         */\n        DestroyVaultResponseMessage.create = function create(properties) {\n            return new DestroyVaultResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroyVaultResponseMessage message. Does not implicitly {@link agentInterface.DestroyVaultResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.DestroyVaultResponseMessage\n         * @static\n         * @param {agentInterface.IDestroyVaultResponseMessage} m DestroyVaultResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroyVaultResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified DestroyVaultResponseMessage message, length delimited. Does not implicitly {@link agentInterface.DestroyVaultResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.DestroyVaultResponseMessage\n         * @static\n         * @param {agentInterface.IDestroyVaultResponseMessage} message DestroyVaultResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroyVaultResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DestroyVaultResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.DestroyVaultResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.DestroyVaultResponseMessage} DestroyVaultResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroyVaultResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.DestroyVaultResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a DestroyVaultResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.DestroyVaultResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.DestroyVaultResponseMessage} DestroyVaultResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroyVaultResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return DestroyVaultResponseMessage;\n    })();\n\n    agentInterface.ListSecretsRequestMessage = (function() {\n\n        /**\n         * Properties of a ListSecretsRequestMessage.\n         * @memberof agentInterface\n         * @interface IListSecretsRequestMessage\n         * @property {string|null} [vaultName] ListSecretsRequestMessage vaultName\n         */\n\n        /**\n         * Constructs a new ListSecretsRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ListSecretsRequestMessage.\n         * @implements IListSecretsRequestMessage\n         * @constructor\n         * @param {agentInterface.IListSecretsRequestMessage=} [p] Properties to set\n         */\n        function ListSecretsRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListSecretsRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agentInterface.ListSecretsRequestMessage\n         * @instance\n         */\n        ListSecretsRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * Creates a new ListSecretsRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ListSecretsRequestMessage\n         * @static\n         * @param {agentInterface.IListSecretsRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.ListSecretsRequestMessage} ListSecretsRequestMessage instance\n         */\n        ListSecretsRequestMessage.create = function create(properties) {\n            return new ListSecretsRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListSecretsRequestMessage message. Does not implicitly {@link agentInterface.ListSecretsRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ListSecretsRequestMessage\n         * @static\n         * @param {agentInterface.IListSecretsRequestMessage} m ListSecretsRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListSecretsRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            return w;\n        };\n\n        /**\n         * Encodes the specified ListSecretsRequestMessage message, length delimited. Does not implicitly {@link agentInterface.ListSecretsRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ListSecretsRequestMessage\n         * @static\n         * @param {agentInterface.IListSecretsRequestMessage} message ListSecretsRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListSecretsRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ListSecretsRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ListSecretsRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ListSecretsRequestMessage} ListSecretsRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListSecretsRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ListSecretsRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ListSecretsRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ListSecretsRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ListSecretsRequestMessage} ListSecretsRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListSecretsRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ListSecretsRequestMessage;\n    })();\n\n    agentInterface.ListSecretsResponseMessage = (function() {\n\n        /**\n         * Properties of a ListSecretsResponseMessage.\n         * @memberof agentInterface\n         * @interface IListSecretsResponseMessage\n         * @property {Array.<string>|null} [secretNames] ListSecretsResponseMessage secretNames\n         */\n\n        /**\n         * Constructs a new ListSecretsResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ListSecretsResponseMessage.\n         * @implements IListSecretsResponseMessage\n         * @constructor\n         * @param {agentInterface.IListSecretsResponseMessage=} [p] Properties to set\n         */\n        function ListSecretsResponseMessage(p) {\n            this.secretNames = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListSecretsResponseMessage secretNames.\n         * @member {Array.<string>} secretNames\n         * @memberof agentInterface.ListSecretsResponseMessage\n         * @instance\n         */\n        ListSecretsResponseMessage.prototype.secretNames = $util.emptyArray;\n\n        /**\n         * Creates a new ListSecretsResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ListSecretsResponseMessage\n         * @static\n         * @param {agentInterface.IListSecretsResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.ListSecretsResponseMessage} ListSecretsResponseMessage instance\n         */\n        ListSecretsResponseMessage.create = function create(properties) {\n            return new ListSecretsResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListSecretsResponseMessage message. Does not implicitly {@link agentInterface.ListSecretsResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ListSecretsResponseMessage\n         * @static\n         * @param {agentInterface.IListSecretsResponseMessage} m ListSecretsResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListSecretsResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.secretNames != null && m.secretNames.length) {\n                for (var i = 0; i < m.secretNames.length; ++i)\n                    w.uint32(10).string(m.secretNames[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Encodes the specified ListSecretsResponseMessage message, length delimited. Does not implicitly {@link agentInterface.ListSecretsResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ListSecretsResponseMessage\n         * @static\n         * @param {agentInterface.IListSecretsResponseMessage} message ListSecretsResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListSecretsResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ListSecretsResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ListSecretsResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ListSecretsResponseMessage} ListSecretsResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListSecretsResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ListSecretsResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.secretNames && m.secretNames.length))\n                        m.secretNames = [];\n                    m.secretNames.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ListSecretsResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ListSecretsResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ListSecretsResponseMessage} ListSecretsResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListSecretsResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ListSecretsResponseMessage;\n    })();\n\n    agentInterface.CreateSecretRequestMessage = (function() {\n\n        /**\n         * Properties of a CreateSecretRequestMessage.\n         * @memberof agentInterface\n         * @interface ICreateSecretRequestMessage\n         * @property {string|null} [vaultName] CreateSecretRequestMessage vaultName\n         * @property {string|null} [secretName] CreateSecretRequestMessage secretName\n         * @property {string|null} [secretPath] CreateSecretRequestMessage secretPath\n         * @property {Uint8Array|null} [secretContent] CreateSecretRequestMessage secretContent\n         */\n\n        /**\n         * Constructs a new CreateSecretRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a CreateSecretRequestMessage.\n         * @implements ICreateSecretRequestMessage\n         * @constructor\n         * @param {agentInterface.ICreateSecretRequestMessage=} [p] Properties to set\n         */\n        function CreateSecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * CreateSecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agentInterface.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * CreateSecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agentInterface.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * CreateSecretRequestMessage secretPath.\n         * @member {string} secretPath\n         * @memberof agentInterface.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.secretPath = \"\";\n\n        /**\n         * CreateSecretRequestMessage secretContent.\n         * @member {Uint8Array} secretContent\n         * @memberof agentInterface.CreateSecretRequestMessage\n         * @instance\n         */\n        CreateSecretRequestMessage.prototype.secretContent = $util.newBuffer([]);\n\n        /**\n         * Creates a new CreateSecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.CreateSecretRequestMessage\n         * @static\n         * @param {agentInterface.ICreateSecretRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.CreateSecretRequestMessage} CreateSecretRequestMessage instance\n         */\n        CreateSecretRequestMessage.create = function create(properties) {\n            return new CreateSecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified CreateSecretRequestMessage message. Does not implicitly {@link agentInterface.CreateSecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.CreateSecretRequestMessage\n         * @static\n         * @param {agentInterface.ICreateSecretRequestMessage} m CreateSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateSecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            if (m.secretPath != null && Object.hasOwnProperty.call(m, \"secretPath\"))\n                w.uint32(26).string(m.secretPath);\n            if (m.secretContent != null && Object.hasOwnProperty.call(m, \"secretContent\"))\n                w.uint32(34).bytes(m.secretContent);\n            return w;\n        };\n\n        /**\n         * Encodes the specified CreateSecretRequestMessage message, length delimited. Does not implicitly {@link agentInterface.CreateSecretRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.CreateSecretRequestMessage\n         * @static\n         * @param {agentInterface.ICreateSecretRequestMessage} message CreateSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateSecretRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a CreateSecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.CreateSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.CreateSecretRequestMessage} CreateSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateSecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.CreateSecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                case 3:\n                    m.secretPath = r.string();\n                    break;\n                case 4:\n                    m.secretContent = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a CreateSecretRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.CreateSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.CreateSecretRequestMessage} CreateSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateSecretRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return CreateSecretRequestMessage;\n    })();\n\n    agentInterface.CreateSecretResponseMessage = (function() {\n\n        /**\n         * Properties of a CreateSecretResponseMessage.\n         * @memberof agentInterface\n         * @interface ICreateSecretResponseMessage\n         * @property {boolean|null} [successful] CreateSecretResponseMessage successful\n         */\n\n        /**\n         * Constructs a new CreateSecretResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a CreateSecretResponseMessage.\n         * @implements ICreateSecretResponseMessage\n         * @constructor\n         * @param {agentInterface.ICreateSecretResponseMessage=} [p] Properties to set\n         */\n        function CreateSecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * CreateSecretResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.CreateSecretResponseMessage\n         * @instance\n         */\n        CreateSecretResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new CreateSecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.CreateSecretResponseMessage\n         * @static\n         * @param {agentInterface.ICreateSecretResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.CreateSecretResponseMessage} CreateSecretResponseMessage instance\n         */\n        CreateSecretResponseMessage.create = function create(properties) {\n            return new CreateSecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified CreateSecretResponseMessage message. Does not implicitly {@link agentInterface.CreateSecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.CreateSecretResponseMessage\n         * @static\n         * @param {agentInterface.ICreateSecretResponseMessage} m CreateSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateSecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified CreateSecretResponseMessage message, length delimited. Does not implicitly {@link agentInterface.CreateSecretResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.CreateSecretResponseMessage\n         * @static\n         * @param {agentInterface.ICreateSecretResponseMessage} message CreateSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateSecretResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a CreateSecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.CreateSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.CreateSecretResponseMessage} CreateSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateSecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.CreateSecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a CreateSecretResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.CreateSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.CreateSecretResponseMessage} CreateSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateSecretResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return CreateSecretResponseMessage;\n    })();\n\n    agentInterface.DestroySecretRequestMessage = (function() {\n\n        /**\n         * Properties of a DestroySecretRequestMessage.\n         * @memberof agentInterface\n         * @interface IDestroySecretRequestMessage\n         * @property {string|null} [vaultName] DestroySecretRequestMessage vaultName\n         * @property {string|null} [secretName] DestroySecretRequestMessage secretName\n         */\n\n        /**\n         * Constructs a new DestroySecretRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a DestroySecretRequestMessage.\n         * @implements IDestroySecretRequestMessage\n         * @constructor\n         * @param {agentInterface.IDestroySecretRequestMessage=} [p] Properties to set\n         */\n        function DestroySecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroySecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agentInterface.DestroySecretRequestMessage\n         * @instance\n         */\n        DestroySecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * DestroySecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agentInterface.DestroySecretRequestMessage\n         * @instance\n         */\n        DestroySecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * Creates a new DestroySecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.DestroySecretRequestMessage\n         * @static\n         * @param {agentInterface.IDestroySecretRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.DestroySecretRequestMessage} DestroySecretRequestMessage instance\n         */\n        DestroySecretRequestMessage.create = function create(properties) {\n            return new DestroySecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroySecretRequestMessage message. Does not implicitly {@link agentInterface.DestroySecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.DestroySecretRequestMessage\n         * @static\n         * @param {agentInterface.IDestroySecretRequestMessage} m DestroySecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroySecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            return w;\n        };\n\n        /**\n         * Encodes the specified DestroySecretRequestMessage message, length delimited. Does not implicitly {@link agentInterface.DestroySecretRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.DestroySecretRequestMessage\n         * @static\n         * @param {agentInterface.IDestroySecretRequestMessage} message DestroySecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroySecretRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DestroySecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.DestroySecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.DestroySecretRequestMessage} DestroySecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroySecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.DestroySecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a DestroySecretRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.DestroySecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.DestroySecretRequestMessage} DestroySecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroySecretRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return DestroySecretRequestMessage;\n    })();\n\n    agentInterface.DestroySecretResponseMessage = (function() {\n\n        /**\n         * Properties of a DestroySecretResponseMessage.\n         * @memberof agentInterface\n         * @interface IDestroySecretResponseMessage\n         * @property {boolean|null} [successful] DestroySecretResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DestroySecretResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a DestroySecretResponseMessage.\n         * @implements IDestroySecretResponseMessage\n         * @constructor\n         * @param {agentInterface.IDestroySecretResponseMessage=} [p] Properties to set\n         */\n        function DestroySecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DestroySecretResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.DestroySecretResponseMessage\n         * @instance\n         */\n        DestroySecretResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DestroySecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.DestroySecretResponseMessage\n         * @static\n         * @param {agentInterface.IDestroySecretResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.DestroySecretResponseMessage} DestroySecretResponseMessage instance\n         */\n        DestroySecretResponseMessage.create = function create(properties) {\n            return new DestroySecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DestroySecretResponseMessage message. Does not implicitly {@link agentInterface.DestroySecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.DestroySecretResponseMessage\n         * @static\n         * @param {agentInterface.IDestroySecretResponseMessage} m DestroySecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroySecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified DestroySecretResponseMessage message, length delimited. Does not implicitly {@link agentInterface.DestroySecretResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.DestroySecretResponseMessage\n         * @static\n         * @param {agentInterface.IDestroySecretResponseMessage} message DestroySecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DestroySecretResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DestroySecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.DestroySecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.DestroySecretResponseMessage} DestroySecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroySecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.DestroySecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a DestroySecretResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.DestroySecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.DestroySecretResponseMessage} DestroySecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DestroySecretResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return DestroySecretResponseMessage;\n    })();\n\n    agentInterface.GetSecretRequestMessage = (function() {\n\n        /**\n         * Properties of a GetSecretRequestMessage.\n         * @memberof agentInterface\n         * @interface IGetSecretRequestMessage\n         * @property {string|null} [vaultName] GetSecretRequestMessage vaultName\n         * @property {string|null} [secretName] GetSecretRequestMessage secretName\n         */\n\n        /**\n         * Constructs a new GetSecretRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a GetSecretRequestMessage.\n         * @implements IGetSecretRequestMessage\n         * @constructor\n         * @param {agentInterface.IGetSecretRequestMessage=} [p] Properties to set\n         */\n        function GetSecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetSecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agentInterface.GetSecretRequestMessage\n         * @instance\n         */\n        GetSecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * GetSecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agentInterface.GetSecretRequestMessage\n         * @instance\n         */\n        GetSecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * Creates a new GetSecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.GetSecretRequestMessage\n         * @static\n         * @param {agentInterface.IGetSecretRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.GetSecretRequestMessage} GetSecretRequestMessage instance\n         */\n        GetSecretRequestMessage.create = function create(properties) {\n            return new GetSecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetSecretRequestMessage message. Does not implicitly {@link agentInterface.GetSecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.GetSecretRequestMessage\n         * @static\n         * @param {agentInterface.IGetSecretRequestMessage} m GetSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetSecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            return w;\n        };\n\n        /**\n         * Encodes the specified GetSecretRequestMessage message, length delimited. Does not implicitly {@link agentInterface.GetSecretRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.GetSecretRequestMessage\n         * @static\n         * @param {agentInterface.IGetSecretRequestMessage} message GetSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetSecretRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetSecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.GetSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.GetSecretRequestMessage} GetSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetSecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.GetSecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a GetSecretRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.GetSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.GetSecretRequestMessage} GetSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetSecretRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return GetSecretRequestMessage;\n    })();\n\n    agentInterface.GetSecretResponseMessage = (function() {\n\n        /**\n         * Properties of a GetSecretResponseMessage.\n         * @memberof agentInterface\n         * @interface IGetSecretResponseMessage\n         * @property {Uint8Array|null} [secret] GetSecretResponseMessage secret\n         */\n\n        /**\n         * Constructs a new GetSecretResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a GetSecretResponseMessage.\n         * @implements IGetSecretResponseMessage\n         * @constructor\n         * @param {agentInterface.IGetSecretResponseMessage=} [p] Properties to set\n         */\n        function GetSecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetSecretResponseMessage secret.\n         * @member {Uint8Array} secret\n         * @memberof agentInterface.GetSecretResponseMessage\n         * @instance\n         */\n        GetSecretResponseMessage.prototype.secret = $util.newBuffer([]);\n\n        /**\n         * Creates a new GetSecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.GetSecretResponseMessage\n         * @static\n         * @param {agentInterface.IGetSecretResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.GetSecretResponseMessage} GetSecretResponseMessage instance\n         */\n        GetSecretResponseMessage.create = function create(properties) {\n            return new GetSecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetSecretResponseMessage message. Does not implicitly {@link agentInterface.GetSecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.GetSecretResponseMessage\n         * @static\n         * @param {agentInterface.IGetSecretResponseMessage} m GetSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetSecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.secret != null && Object.hasOwnProperty.call(m, \"secret\"))\n                w.uint32(10).bytes(m.secret);\n            return w;\n        };\n\n        /**\n         * Encodes the specified GetSecretResponseMessage message, length delimited. Does not implicitly {@link agentInterface.GetSecretResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.GetSecretResponseMessage\n         * @static\n         * @param {agentInterface.IGetSecretResponseMessage} message GetSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetSecretResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetSecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.GetSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.GetSecretResponseMessage} GetSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetSecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.GetSecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.secret = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a GetSecretResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.GetSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.GetSecretResponseMessage} GetSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetSecretResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return GetSecretResponseMessage;\n    })();\n\n    agentInterface.DeriveKeyRequestMessage = (function() {\n\n        /**\n         * Properties of a DeriveKeyRequestMessage.\n         * @memberof agentInterface\n         * @interface IDeriveKeyRequestMessage\n         * @property {string|null} [vaultName] DeriveKeyRequestMessage vaultName\n         * @property {string|null} [keyName] DeriveKeyRequestMessage keyName\n         * @property {string|null} [passphrase] DeriveKeyRequestMessage passphrase\n         */\n\n        /**\n         * Constructs a new DeriveKeyRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a DeriveKeyRequestMessage.\n         * @implements IDeriveKeyRequestMessage\n         * @constructor\n         * @param {agentInterface.IDeriveKeyRequestMessage=} [p] Properties to set\n         */\n        function DeriveKeyRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DeriveKeyRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agentInterface.DeriveKeyRequestMessage\n         * @instance\n         */\n        DeriveKeyRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * DeriveKeyRequestMessage keyName.\n         * @member {string} keyName\n         * @memberof agentInterface.DeriveKeyRequestMessage\n         * @instance\n         */\n        DeriveKeyRequestMessage.prototype.keyName = \"\";\n\n        /**\n         * DeriveKeyRequestMessage passphrase.\n         * @member {string} passphrase\n         * @memberof agentInterface.DeriveKeyRequestMessage\n         * @instance\n         */\n        DeriveKeyRequestMessage.prototype.passphrase = \"\";\n\n        /**\n         * Creates a new DeriveKeyRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.DeriveKeyRequestMessage\n         * @static\n         * @param {agentInterface.IDeriveKeyRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.DeriveKeyRequestMessage} DeriveKeyRequestMessage instance\n         */\n        DeriveKeyRequestMessage.create = function create(properties) {\n            return new DeriveKeyRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DeriveKeyRequestMessage message. Does not implicitly {@link agentInterface.DeriveKeyRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.DeriveKeyRequestMessage\n         * @static\n         * @param {agentInterface.IDeriveKeyRequestMessage} m DeriveKeyRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeriveKeyRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.keyName != null && Object.hasOwnProperty.call(m, \"keyName\"))\n                w.uint32(18).string(m.keyName);\n            if (m.passphrase != null && Object.hasOwnProperty.call(m, \"passphrase\"))\n                w.uint32(26).string(m.passphrase);\n            return w;\n        };\n\n        /**\n         * Encodes the specified DeriveKeyRequestMessage message, length delimited. Does not implicitly {@link agentInterface.DeriveKeyRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.DeriveKeyRequestMessage\n         * @static\n         * @param {agentInterface.IDeriveKeyRequestMessage} message DeriveKeyRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeriveKeyRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DeriveKeyRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.DeriveKeyRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.DeriveKeyRequestMessage} DeriveKeyRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeriveKeyRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.DeriveKeyRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.keyName = r.string();\n                    break;\n                case 3:\n                    m.passphrase = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a DeriveKeyRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.DeriveKeyRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.DeriveKeyRequestMessage} DeriveKeyRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeriveKeyRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return DeriveKeyRequestMessage;\n    })();\n\n    agentInterface.DeriveKeyResponseMessage = (function() {\n\n        /**\n         * Properties of a DeriveKeyResponseMessage.\n         * @memberof agentInterface\n         * @interface IDeriveKeyResponseMessage\n         * @property {boolean|null} [successful] DeriveKeyResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DeriveKeyResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a DeriveKeyResponseMessage.\n         * @implements IDeriveKeyResponseMessage\n         * @constructor\n         * @param {agentInterface.IDeriveKeyResponseMessage=} [p] Properties to set\n         */\n        function DeriveKeyResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DeriveKeyResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.DeriveKeyResponseMessage\n         * @instance\n         */\n        DeriveKeyResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DeriveKeyResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.DeriveKeyResponseMessage\n         * @static\n         * @param {agentInterface.IDeriveKeyResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.DeriveKeyResponseMessage} DeriveKeyResponseMessage instance\n         */\n        DeriveKeyResponseMessage.create = function create(properties) {\n            return new DeriveKeyResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DeriveKeyResponseMessage message. Does not implicitly {@link agentInterface.DeriveKeyResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.DeriveKeyResponseMessage\n         * @static\n         * @param {agentInterface.IDeriveKeyResponseMessage} m DeriveKeyResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeriveKeyResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified DeriveKeyResponseMessage message, length delimited. Does not implicitly {@link agentInterface.DeriveKeyResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.DeriveKeyResponseMessage\n         * @static\n         * @param {agentInterface.IDeriveKeyResponseMessage} message DeriveKeyResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeriveKeyResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DeriveKeyResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.DeriveKeyResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.DeriveKeyResponseMessage} DeriveKeyResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeriveKeyResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.DeriveKeyResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a DeriveKeyResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.DeriveKeyResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.DeriveKeyResponseMessage} DeriveKeyResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeriveKeyResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return DeriveKeyResponseMessage;\n    })();\n\n    agentInterface.ListKeysRequestMessage = (function() {\n\n        /**\n         * Properties of a ListKeysRequestMessage.\n         * @memberof agentInterface\n         * @interface IListKeysRequestMessage\n         */\n\n        /**\n         * Constructs a new ListKeysRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ListKeysRequestMessage.\n         * @implements IListKeysRequestMessage\n         * @constructor\n         * @param {agentInterface.IListKeysRequestMessage=} [p] Properties to set\n         */\n        function ListKeysRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Creates a new ListKeysRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ListKeysRequestMessage\n         * @static\n         * @param {agentInterface.IListKeysRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.ListKeysRequestMessage} ListKeysRequestMessage instance\n         */\n        ListKeysRequestMessage.create = function create(properties) {\n            return new ListKeysRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListKeysRequestMessage message. Does not implicitly {@link agentInterface.ListKeysRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ListKeysRequestMessage\n         * @static\n         * @param {agentInterface.IListKeysRequestMessage} m ListKeysRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListKeysRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            return w;\n        };\n\n        /**\n         * Encodes the specified ListKeysRequestMessage message, length delimited. Does not implicitly {@link agentInterface.ListKeysRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ListKeysRequestMessage\n         * @static\n         * @param {agentInterface.IListKeysRequestMessage} message ListKeysRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListKeysRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ListKeysRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ListKeysRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ListKeysRequestMessage} ListKeysRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListKeysRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ListKeysRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ListKeysRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ListKeysRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ListKeysRequestMessage} ListKeysRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListKeysRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ListKeysRequestMessage;\n    })();\n\n    agentInterface.ListKeysResponseMessage = (function() {\n\n        /**\n         * Properties of a ListKeysResponseMessage.\n         * @memberof agentInterface\n         * @interface IListKeysResponseMessage\n         * @property {Array.<string>|null} [keyNames] ListKeysResponseMessage keyNames\n         */\n\n        /**\n         * Constructs a new ListKeysResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ListKeysResponseMessage.\n         * @implements IListKeysResponseMessage\n         * @constructor\n         * @param {agentInterface.IListKeysResponseMessage=} [p] Properties to set\n         */\n        function ListKeysResponseMessage(p) {\n            this.keyNames = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListKeysResponseMessage keyNames.\n         * @member {Array.<string>} keyNames\n         * @memberof agentInterface.ListKeysResponseMessage\n         * @instance\n         */\n        ListKeysResponseMessage.prototype.keyNames = $util.emptyArray;\n\n        /**\n         * Creates a new ListKeysResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ListKeysResponseMessage\n         * @static\n         * @param {agentInterface.IListKeysResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.ListKeysResponseMessage} ListKeysResponseMessage instance\n         */\n        ListKeysResponseMessage.create = function create(properties) {\n            return new ListKeysResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListKeysResponseMessage message. Does not implicitly {@link agentInterface.ListKeysResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ListKeysResponseMessage\n         * @static\n         * @param {agentInterface.IListKeysResponseMessage} m ListKeysResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListKeysResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.keyNames != null && m.keyNames.length) {\n                for (var i = 0; i < m.keyNames.length; ++i)\n                    w.uint32(10).string(m.keyNames[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Encodes the specified ListKeysResponseMessage message, length delimited. Does not implicitly {@link agentInterface.ListKeysResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ListKeysResponseMessage\n         * @static\n         * @param {agentInterface.IListKeysResponseMessage} message ListKeysResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListKeysResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ListKeysResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ListKeysResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ListKeysResponseMessage} ListKeysResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListKeysResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ListKeysResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.keyNames && m.keyNames.length))\n                        m.keyNames = [];\n                    m.keyNames.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ListKeysResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ListKeysResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ListKeysResponseMessage} ListKeysResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListKeysResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ListKeysResponseMessage;\n    })();\n\n    agentInterface.GetKeyRequestMessage = (function() {\n\n        /**\n         * Properties of a GetKeyRequestMessage.\n         * @memberof agentInterface\n         * @interface IGetKeyRequestMessage\n         * @property {string|null} [keyName] GetKeyRequestMessage keyName\n         */\n\n        /**\n         * Constructs a new GetKeyRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a GetKeyRequestMessage.\n         * @implements IGetKeyRequestMessage\n         * @constructor\n         * @param {agentInterface.IGetKeyRequestMessage=} [p] Properties to set\n         */\n        function GetKeyRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetKeyRequestMessage keyName.\n         * @member {string} keyName\n         * @memberof agentInterface.GetKeyRequestMessage\n         * @instance\n         */\n        GetKeyRequestMessage.prototype.keyName = \"\";\n\n        /**\n         * Creates a new GetKeyRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.GetKeyRequestMessage\n         * @static\n         * @param {agentInterface.IGetKeyRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.GetKeyRequestMessage} GetKeyRequestMessage instance\n         */\n        GetKeyRequestMessage.create = function create(properties) {\n            return new GetKeyRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetKeyRequestMessage message. Does not implicitly {@link agentInterface.GetKeyRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.GetKeyRequestMessage\n         * @static\n         * @param {agentInterface.IGetKeyRequestMessage} m GetKeyRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetKeyRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.keyName != null && Object.hasOwnProperty.call(m, \"keyName\"))\n                w.uint32(10).string(m.keyName);\n            return w;\n        };\n\n        /**\n         * Encodes the specified GetKeyRequestMessage message, length delimited. Does not implicitly {@link agentInterface.GetKeyRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.GetKeyRequestMessage\n         * @static\n         * @param {agentInterface.IGetKeyRequestMessage} message GetKeyRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetKeyRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetKeyRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.GetKeyRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.GetKeyRequestMessage} GetKeyRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetKeyRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.GetKeyRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.keyName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a GetKeyRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.GetKeyRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.GetKeyRequestMessage} GetKeyRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetKeyRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return GetKeyRequestMessage;\n    })();\n\n    agentInterface.GetKeyResponseMessage = (function() {\n\n        /**\n         * Properties of a GetKeyResponseMessage.\n         * @memberof agentInterface\n         * @interface IGetKeyResponseMessage\n         * @property {string|null} [keyName] GetKeyResponseMessage keyName\n         * @property {string|null} [keyContent] GetKeyResponseMessage keyContent\n         */\n\n        /**\n         * Constructs a new GetKeyResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a GetKeyResponseMessage.\n         * @implements IGetKeyResponseMessage\n         * @constructor\n         * @param {agentInterface.IGetKeyResponseMessage=} [p] Properties to set\n         */\n        function GetKeyResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetKeyResponseMessage keyName.\n         * @member {string} keyName\n         * @memberof agentInterface.GetKeyResponseMessage\n         * @instance\n         */\n        GetKeyResponseMessage.prototype.keyName = \"\";\n\n        /**\n         * GetKeyResponseMessage keyContent.\n         * @member {string} keyContent\n         * @memberof agentInterface.GetKeyResponseMessage\n         * @instance\n         */\n        GetKeyResponseMessage.prototype.keyContent = \"\";\n\n        /**\n         * Creates a new GetKeyResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.GetKeyResponseMessage\n         * @static\n         * @param {agentInterface.IGetKeyResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.GetKeyResponseMessage} GetKeyResponseMessage instance\n         */\n        GetKeyResponseMessage.create = function create(properties) {\n            return new GetKeyResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetKeyResponseMessage message. Does not implicitly {@link agentInterface.GetKeyResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.GetKeyResponseMessage\n         * @static\n         * @param {agentInterface.IGetKeyResponseMessage} m GetKeyResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetKeyResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.keyName != null && Object.hasOwnProperty.call(m, \"keyName\"))\n                w.uint32(10).string(m.keyName);\n            if (m.keyContent != null && Object.hasOwnProperty.call(m, \"keyContent\"))\n                w.uint32(18).string(m.keyContent);\n            return w;\n        };\n\n        /**\n         * Encodes the specified GetKeyResponseMessage message, length delimited. Does not implicitly {@link agentInterface.GetKeyResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.GetKeyResponseMessage\n         * @static\n         * @param {agentInterface.IGetKeyResponseMessage} message GetKeyResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetKeyResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetKeyResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.GetKeyResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.GetKeyResponseMessage} GetKeyResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetKeyResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.GetKeyResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.keyName = r.string();\n                    break;\n                case 2:\n                    m.keyContent = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a GetKeyResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.GetKeyResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.GetKeyResponseMessage} GetKeyResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetKeyResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return GetKeyResponseMessage;\n    })();\n\n    agentInterface.GetPrimaryKeyPairRequestMessage = (function() {\n\n        /**\n         * Properties of a GetPrimaryKeyPairRequestMessage.\n         * @memberof agentInterface\n         * @interface IGetPrimaryKeyPairRequestMessage\n         * @property {boolean|null} [includePrivateKey] GetPrimaryKeyPairRequestMessage includePrivateKey\n         */\n\n        /**\n         * Constructs a new GetPrimaryKeyPairRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a GetPrimaryKeyPairRequestMessage.\n         * @implements IGetPrimaryKeyPairRequestMessage\n         * @constructor\n         * @param {agentInterface.IGetPrimaryKeyPairRequestMessage=} [p] Properties to set\n         */\n        function GetPrimaryKeyPairRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetPrimaryKeyPairRequestMessage includePrivateKey.\n         * @member {boolean} includePrivateKey\n         * @memberof agentInterface.GetPrimaryKeyPairRequestMessage\n         * @instance\n         */\n        GetPrimaryKeyPairRequestMessage.prototype.includePrivateKey = false;\n\n        /**\n         * Creates a new GetPrimaryKeyPairRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.GetPrimaryKeyPairRequestMessage\n         * @static\n         * @param {agentInterface.IGetPrimaryKeyPairRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.GetPrimaryKeyPairRequestMessage} GetPrimaryKeyPairRequestMessage instance\n         */\n        GetPrimaryKeyPairRequestMessage.create = function create(properties) {\n            return new GetPrimaryKeyPairRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetPrimaryKeyPairRequestMessage message. Does not implicitly {@link agentInterface.GetPrimaryKeyPairRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.GetPrimaryKeyPairRequestMessage\n         * @static\n         * @param {agentInterface.IGetPrimaryKeyPairRequestMessage} m GetPrimaryKeyPairRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetPrimaryKeyPairRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.includePrivateKey != null && Object.hasOwnProperty.call(m, \"includePrivateKey\"))\n                w.uint32(8).bool(m.includePrivateKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified GetPrimaryKeyPairRequestMessage message, length delimited. Does not implicitly {@link agentInterface.GetPrimaryKeyPairRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.GetPrimaryKeyPairRequestMessage\n         * @static\n         * @param {agentInterface.IGetPrimaryKeyPairRequestMessage} message GetPrimaryKeyPairRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetPrimaryKeyPairRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetPrimaryKeyPairRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.GetPrimaryKeyPairRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.GetPrimaryKeyPairRequestMessage} GetPrimaryKeyPairRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetPrimaryKeyPairRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.GetPrimaryKeyPairRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.includePrivateKey = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a GetPrimaryKeyPairRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.GetPrimaryKeyPairRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.GetPrimaryKeyPairRequestMessage} GetPrimaryKeyPairRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetPrimaryKeyPairRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return GetPrimaryKeyPairRequestMessage;\n    })();\n\n    agentInterface.GetPrimaryKeyPairResponseMessage = (function() {\n\n        /**\n         * Properties of a GetPrimaryKeyPairResponseMessage.\n         * @memberof agentInterface\n         * @interface IGetPrimaryKeyPairResponseMessage\n         * @property {string|null} [publicKey] GetPrimaryKeyPairResponseMessage publicKey\n         * @property {string|null} [privateKey] GetPrimaryKeyPairResponseMessage privateKey\n         */\n\n        /**\n         * Constructs a new GetPrimaryKeyPairResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a GetPrimaryKeyPairResponseMessage.\n         * @implements IGetPrimaryKeyPairResponseMessage\n         * @constructor\n         * @param {agentInterface.IGetPrimaryKeyPairResponseMessage=} [p] Properties to set\n         */\n        function GetPrimaryKeyPairResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * GetPrimaryKeyPairResponseMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.GetPrimaryKeyPairResponseMessage\n         * @instance\n         */\n        GetPrimaryKeyPairResponseMessage.prototype.publicKey = \"\";\n\n        /**\n         * GetPrimaryKeyPairResponseMessage privateKey.\n         * @member {string} privateKey\n         * @memberof agentInterface.GetPrimaryKeyPairResponseMessage\n         * @instance\n         */\n        GetPrimaryKeyPairResponseMessage.prototype.privateKey = \"\";\n\n        /**\n         * Creates a new GetPrimaryKeyPairResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.GetPrimaryKeyPairResponseMessage\n         * @static\n         * @param {agentInterface.IGetPrimaryKeyPairResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.GetPrimaryKeyPairResponseMessage} GetPrimaryKeyPairResponseMessage instance\n         */\n        GetPrimaryKeyPairResponseMessage.create = function create(properties) {\n            return new GetPrimaryKeyPairResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified GetPrimaryKeyPairResponseMessage message. Does not implicitly {@link agentInterface.GetPrimaryKeyPairResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.GetPrimaryKeyPairResponseMessage\n         * @static\n         * @param {agentInterface.IGetPrimaryKeyPairResponseMessage} m GetPrimaryKeyPairResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetPrimaryKeyPairResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            if (m.privateKey != null && Object.hasOwnProperty.call(m, \"privateKey\"))\n                w.uint32(18).string(m.privateKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified GetPrimaryKeyPairResponseMessage message, length delimited. Does not implicitly {@link agentInterface.GetPrimaryKeyPairResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.GetPrimaryKeyPairResponseMessage\n         * @static\n         * @param {agentInterface.IGetPrimaryKeyPairResponseMessage} message GetPrimaryKeyPairResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetPrimaryKeyPairResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetPrimaryKeyPairResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.GetPrimaryKeyPairResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.GetPrimaryKeyPairResponseMessage} GetPrimaryKeyPairResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetPrimaryKeyPairResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.GetPrimaryKeyPairResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                case 2:\n                    m.privateKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a GetPrimaryKeyPairResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.GetPrimaryKeyPairResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.GetPrimaryKeyPairResponseMessage} GetPrimaryKeyPairResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetPrimaryKeyPairResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return GetPrimaryKeyPairResponseMessage;\n    })();\n\n    agentInterface.UpdateSecretRequestMessage = (function() {\n\n        /**\n         * Properties of an UpdateSecretRequestMessage.\n         * @memberof agentInterface\n         * @interface IUpdateSecretRequestMessage\n         * @property {string|null} [vaultName] UpdateSecretRequestMessage vaultName\n         * @property {string|null} [secretName] UpdateSecretRequestMessage secretName\n         * @property {string|null} [secretPath] UpdateSecretRequestMessage secretPath\n         * @property {Uint8Array|null} [secretContent] UpdateSecretRequestMessage secretContent\n         */\n\n        /**\n         * Constructs a new UpdateSecretRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an UpdateSecretRequestMessage.\n         * @implements IUpdateSecretRequestMessage\n         * @constructor\n         * @param {agentInterface.IUpdateSecretRequestMessage=} [p] Properties to set\n         */\n        function UpdateSecretRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * UpdateSecretRequestMessage vaultName.\n         * @member {string} vaultName\n         * @memberof agentInterface.UpdateSecretRequestMessage\n         * @instance\n         */\n        UpdateSecretRequestMessage.prototype.vaultName = \"\";\n\n        /**\n         * UpdateSecretRequestMessage secretName.\n         * @member {string} secretName\n         * @memberof agentInterface.UpdateSecretRequestMessage\n         * @instance\n         */\n        UpdateSecretRequestMessage.prototype.secretName = \"\";\n\n        /**\n         * UpdateSecretRequestMessage secretPath.\n         * @member {string} secretPath\n         * @memberof agentInterface.UpdateSecretRequestMessage\n         * @instance\n         */\n        UpdateSecretRequestMessage.prototype.secretPath = \"\";\n\n        /**\n         * UpdateSecretRequestMessage secretContent.\n         * @member {Uint8Array} secretContent\n         * @memberof agentInterface.UpdateSecretRequestMessage\n         * @instance\n         */\n        UpdateSecretRequestMessage.prototype.secretContent = $util.newBuffer([]);\n\n        /**\n         * Creates a new UpdateSecretRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.UpdateSecretRequestMessage\n         * @static\n         * @param {agentInterface.IUpdateSecretRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.UpdateSecretRequestMessage} UpdateSecretRequestMessage instance\n         */\n        UpdateSecretRequestMessage.create = function create(properties) {\n            return new UpdateSecretRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified UpdateSecretRequestMessage message. Does not implicitly {@link agentInterface.UpdateSecretRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.UpdateSecretRequestMessage\n         * @static\n         * @param {agentInterface.IUpdateSecretRequestMessage} m UpdateSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UpdateSecretRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.vaultName != null && Object.hasOwnProperty.call(m, \"vaultName\"))\n                w.uint32(10).string(m.vaultName);\n            if (m.secretName != null && Object.hasOwnProperty.call(m, \"secretName\"))\n                w.uint32(18).string(m.secretName);\n            if (m.secretPath != null && Object.hasOwnProperty.call(m, \"secretPath\"))\n                w.uint32(26).string(m.secretPath);\n            if (m.secretContent != null && Object.hasOwnProperty.call(m, \"secretContent\"))\n                w.uint32(34).bytes(m.secretContent);\n            return w;\n        };\n\n        /**\n         * Encodes the specified UpdateSecretRequestMessage message, length delimited. Does not implicitly {@link agentInterface.UpdateSecretRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.UpdateSecretRequestMessage\n         * @static\n         * @param {agentInterface.IUpdateSecretRequestMessage} message UpdateSecretRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UpdateSecretRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an UpdateSecretRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.UpdateSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.UpdateSecretRequestMessage} UpdateSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UpdateSecretRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.UpdateSecretRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.vaultName = r.string();\n                    break;\n                case 2:\n                    m.secretName = r.string();\n                    break;\n                case 3:\n                    m.secretPath = r.string();\n                    break;\n                case 4:\n                    m.secretContent = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an UpdateSecretRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.UpdateSecretRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.UpdateSecretRequestMessage} UpdateSecretRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UpdateSecretRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return UpdateSecretRequestMessage;\n    })();\n\n    agentInterface.UpdateSecretResponseMessage = (function() {\n\n        /**\n         * Properties of an UpdateSecretResponseMessage.\n         * @memberof agentInterface\n         * @interface IUpdateSecretResponseMessage\n         * @property {boolean|null} [successful] UpdateSecretResponseMessage successful\n         */\n\n        /**\n         * Constructs a new UpdateSecretResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an UpdateSecretResponseMessage.\n         * @implements IUpdateSecretResponseMessage\n         * @constructor\n         * @param {agentInterface.IUpdateSecretResponseMessage=} [p] Properties to set\n         */\n        function UpdateSecretResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * UpdateSecretResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.UpdateSecretResponseMessage\n         * @instance\n         */\n        UpdateSecretResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new UpdateSecretResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.UpdateSecretResponseMessage\n         * @static\n         * @param {agentInterface.IUpdateSecretResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.UpdateSecretResponseMessage} UpdateSecretResponseMessage instance\n         */\n        UpdateSecretResponseMessage.create = function create(properties) {\n            return new UpdateSecretResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified UpdateSecretResponseMessage message. Does not implicitly {@link agentInterface.UpdateSecretResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.UpdateSecretResponseMessage\n         * @static\n         * @param {agentInterface.IUpdateSecretResponseMessage} m UpdateSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UpdateSecretResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified UpdateSecretResponseMessage message, length delimited. Does not implicitly {@link agentInterface.UpdateSecretResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.UpdateSecretResponseMessage\n         * @static\n         * @param {agentInterface.IUpdateSecretResponseMessage} message UpdateSecretResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UpdateSecretResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an UpdateSecretResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.UpdateSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.UpdateSecretResponseMessage} UpdateSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UpdateSecretResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.UpdateSecretResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an UpdateSecretResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.UpdateSecretResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.UpdateSecretResponseMessage} UpdateSecretResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UpdateSecretResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return UpdateSecretResponseMessage;\n    })();\n\n    agentInterface.DeleteKeyRequestMessage = (function() {\n\n        /**\n         * Properties of a DeleteKeyRequestMessage.\n         * @memberof agentInterface\n         * @interface IDeleteKeyRequestMessage\n         * @property {string|null} [keyName] DeleteKeyRequestMessage keyName\n         */\n\n        /**\n         * Constructs a new DeleteKeyRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a DeleteKeyRequestMessage.\n         * @implements IDeleteKeyRequestMessage\n         * @constructor\n         * @param {agentInterface.IDeleteKeyRequestMessage=} [p] Properties to set\n         */\n        function DeleteKeyRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DeleteKeyRequestMessage keyName.\n         * @member {string} keyName\n         * @memberof agentInterface.DeleteKeyRequestMessage\n         * @instance\n         */\n        DeleteKeyRequestMessage.prototype.keyName = \"\";\n\n        /**\n         * Creates a new DeleteKeyRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.DeleteKeyRequestMessage\n         * @static\n         * @param {agentInterface.IDeleteKeyRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.DeleteKeyRequestMessage} DeleteKeyRequestMessage instance\n         */\n        DeleteKeyRequestMessage.create = function create(properties) {\n            return new DeleteKeyRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DeleteKeyRequestMessage message. Does not implicitly {@link agentInterface.DeleteKeyRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.DeleteKeyRequestMessage\n         * @static\n         * @param {agentInterface.IDeleteKeyRequestMessage} m DeleteKeyRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeleteKeyRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.keyName != null && Object.hasOwnProperty.call(m, \"keyName\"))\n                w.uint32(10).string(m.keyName);\n            return w;\n        };\n\n        /**\n         * Encodes the specified DeleteKeyRequestMessage message, length delimited. Does not implicitly {@link agentInterface.DeleteKeyRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.DeleteKeyRequestMessage\n         * @static\n         * @param {agentInterface.IDeleteKeyRequestMessage} message DeleteKeyRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeleteKeyRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DeleteKeyRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.DeleteKeyRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.DeleteKeyRequestMessage} DeleteKeyRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeleteKeyRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.DeleteKeyRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.keyName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a DeleteKeyRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.DeleteKeyRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.DeleteKeyRequestMessage} DeleteKeyRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeleteKeyRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return DeleteKeyRequestMessage;\n    })();\n\n    agentInterface.DeleteKeyResponseMessage = (function() {\n\n        /**\n         * Properties of a DeleteKeyResponseMessage.\n         * @memberof agentInterface\n         * @interface IDeleteKeyResponseMessage\n         * @property {boolean|null} [successful] DeleteKeyResponseMessage successful\n         */\n\n        /**\n         * Constructs a new DeleteKeyResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a DeleteKeyResponseMessage.\n         * @implements IDeleteKeyResponseMessage\n         * @constructor\n         * @param {agentInterface.IDeleteKeyResponseMessage=} [p] Properties to set\n         */\n        function DeleteKeyResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * DeleteKeyResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.DeleteKeyResponseMessage\n         * @instance\n         */\n        DeleteKeyResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new DeleteKeyResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.DeleteKeyResponseMessage\n         * @static\n         * @param {agentInterface.IDeleteKeyResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.DeleteKeyResponseMessage} DeleteKeyResponseMessage instance\n         */\n        DeleteKeyResponseMessage.create = function create(properties) {\n            return new DeleteKeyResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified DeleteKeyResponseMessage message. Does not implicitly {@link agentInterface.DeleteKeyResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.DeleteKeyResponseMessage\n         * @static\n         * @param {agentInterface.IDeleteKeyResponseMessage} m DeleteKeyResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeleteKeyResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified DeleteKeyResponseMessage message, length delimited. Does not implicitly {@link agentInterface.DeleteKeyResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.DeleteKeyResponseMessage\n         * @static\n         * @param {agentInterface.IDeleteKeyResponseMessage} message DeleteKeyResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DeleteKeyResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DeleteKeyResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.DeleteKeyResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.DeleteKeyResponseMessage} DeleteKeyResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeleteKeyResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.DeleteKeyResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a DeleteKeyResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.DeleteKeyResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.DeleteKeyResponseMessage} DeleteKeyResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DeleteKeyResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return DeleteKeyResponseMessage;\n    })();\n\n    agentInterface.PeerInfoRequestMessage = (function() {\n\n        /**\n         * Properties of a PeerInfoRequestMessage.\n         * @memberof agentInterface\n         * @interface IPeerInfoRequestMessage\n         * @property {boolean|null} [current] PeerInfoRequestMessage current\n         * @property {string|null} [publicKey] PeerInfoRequestMessage publicKey\n         */\n\n        /**\n         * Constructs a new PeerInfoRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a PeerInfoRequestMessage.\n         * @implements IPeerInfoRequestMessage\n         * @constructor\n         * @param {agentInterface.IPeerInfoRequestMessage=} [p] Properties to set\n         */\n        function PeerInfoRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PeerInfoRequestMessage current.\n         * @member {boolean} current\n         * @memberof agentInterface.PeerInfoRequestMessage\n         * @instance\n         */\n        PeerInfoRequestMessage.prototype.current = false;\n\n        /**\n         * PeerInfoRequestMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.PeerInfoRequestMessage\n         * @instance\n         */\n        PeerInfoRequestMessage.prototype.publicKey = \"\";\n\n        /**\n         * Creates a new PeerInfoRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.PeerInfoRequestMessage\n         * @static\n         * @param {agentInterface.IPeerInfoRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.PeerInfoRequestMessage} PeerInfoRequestMessage instance\n         */\n        PeerInfoRequestMessage.create = function create(properties) {\n            return new PeerInfoRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified PeerInfoRequestMessage message. Does not implicitly {@link agentInterface.PeerInfoRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.PeerInfoRequestMessage\n         * @static\n         * @param {agentInterface.IPeerInfoRequestMessage} m PeerInfoRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerInfoRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.current != null && Object.hasOwnProperty.call(m, \"current\"))\n                w.uint32(8).bool(m.current);\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(18).string(m.publicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PeerInfoRequestMessage message, length delimited. Does not implicitly {@link agentInterface.PeerInfoRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.PeerInfoRequestMessage\n         * @static\n         * @param {agentInterface.IPeerInfoRequestMessage} message PeerInfoRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerInfoRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PeerInfoRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.PeerInfoRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.PeerInfoRequestMessage} PeerInfoRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerInfoRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.PeerInfoRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.current = r.bool();\n                    break;\n                case 2:\n                    m.publicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PeerInfoRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.PeerInfoRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.PeerInfoRequestMessage} PeerInfoRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerInfoRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PeerInfoRequestMessage;\n    })();\n\n    agentInterface.PeerInfoResponseMessage = (function() {\n\n        /**\n         * Properties of a PeerInfoResponseMessage.\n         * @memberof agentInterface\n         * @interface IPeerInfoResponseMessage\n         * @property {string|null} [publicKey] PeerInfoResponseMessage publicKey\n         * @property {string|null} [peerAddress] PeerInfoResponseMessage peerAddress\n         * @property {string|null} [relayPublicKey] PeerInfoResponseMessage relayPublicKey\n         */\n\n        /**\n         * Constructs a new PeerInfoResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a PeerInfoResponseMessage.\n         * @implements IPeerInfoResponseMessage\n         * @constructor\n         * @param {agentInterface.IPeerInfoResponseMessage=} [p] Properties to set\n         */\n        function PeerInfoResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PeerInfoResponseMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.PeerInfoResponseMessage\n         * @instance\n         */\n        PeerInfoResponseMessage.prototype.publicKey = \"\";\n\n        /**\n         * PeerInfoResponseMessage peerAddress.\n         * @member {string} peerAddress\n         * @memberof agentInterface.PeerInfoResponseMessage\n         * @instance\n         */\n        PeerInfoResponseMessage.prototype.peerAddress = \"\";\n\n        /**\n         * PeerInfoResponseMessage relayPublicKey.\n         * @member {string} relayPublicKey\n         * @memberof agentInterface.PeerInfoResponseMessage\n         * @instance\n         */\n        PeerInfoResponseMessage.prototype.relayPublicKey = \"\";\n\n        /**\n         * Creates a new PeerInfoResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.PeerInfoResponseMessage\n         * @static\n         * @param {agentInterface.IPeerInfoResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.PeerInfoResponseMessage} PeerInfoResponseMessage instance\n         */\n        PeerInfoResponseMessage.create = function create(properties) {\n            return new PeerInfoResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified PeerInfoResponseMessage message. Does not implicitly {@link agentInterface.PeerInfoResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.PeerInfoResponseMessage\n         * @static\n         * @param {agentInterface.IPeerInfoResponseMessage} m PeerInfoResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerInfoResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            if (m.peerAddress != null && Object.hasOwnProperty.call(m, \"peerAddress\"))\n                w.uint32(18).string(m.peerAddress);\n            if (m.relayPublicKey != null && Object.hasOwnProperty.call(m, \"relayPublicKey\"))\n                w.uint32(26).string(m.relayPublicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PeerInfoResponseMessage message, length delimited. Does not implicitly {@link agentInterface.PeerInfoResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.PeerInfoResponseMessage\n         * @static\n         * @param {agentInterface.IPeerInfoResponseMessage} message PeerInfoResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PeerInfoResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PeerInfoResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.PeerInfoResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.PeerInfoResponseMessage} PeerInfoResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerInfoResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.PeerInfoResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                case 2:\n                    m.peerAddress = r.string();\n                    break;\n                case 3:\n                    m.relayPublicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PeerInfoResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.PeerInfoResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.PeerInfoResponseMessage} PeerInfoResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PeerInfoResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PeerInfoResponseMessage;\n    })();\n\n    agentInterface.AddPeerRequestMessage = (function() {\n\n        /**\n         * Properties of an AddPeerRequestMessage.\n         * @memberof agentInterface\n         * @interface IAddPeerRequestMessage\n         * @property {string|null} [publicKey] AddPeerRequestMessage publicKey\n         * @property {string|null} [peerAddress] AddPeerRequestMessage peerAddress\n         * @property {string|null} [relayPublicKey] AddPeerRequestMessage relayPublicKey\n         */\n\n        /**\n         * Constructs a new AddPeerRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an AddPeerRequestMessage.\n         * @implements IAddPeerRequestMessage\n         * @constructor\n         * @param {agentInterface.IAddPeerRequestMessage=} [p] Properties to set\n         */\n        function AddPeerRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * AddPeerRequestMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.AddPeerRequestMessage\n         * @instance\n         */\n        AddPeerRequestMessage.prototype.publicKey = \"\";\n\n        /**\n         * AddPeerRequestMessage peerAddress.\n         * @member {string} peerAddress\n         * @memberof agentInterface.AddPeerRequestMessage\n         * @instance\n         */\n        AddPeerRequestMessage.prototype.peerAddress = \"\";\n\n        /**\n         * AddPeerRequestMessage relayPublicKey.\n         * @member {string} relayPublicKey\n         * @memberof agentInterface.AddPeerRequestMessage\n         * @instance\n         */\n        AddPeerRequestMessage.prototype.relayPublicKey = \"\";\n\n        /**\n         * Creates a new AddPeerRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.AddPeerRequestMessage\n         * @static\n         * @param {agentInterface.IAddPeerRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.AddPeerRequestMessage} AddPeerRequestMessage instance\n         */\n        AddPeerRequestMessage.create = function create(properties) {\n            return new AddPeerRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified AddPeerRequestMessage message. Does not implicitly {@link agentInterface.AddPeerRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.AddPeerRequestMessage\n         * @static\n         * @param {agentInterface.IAddPeerRequestMessage} m AddPeerRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AddPeerRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            if (m.peerAddress != null && Object.hasOwnProperty.call(m, \"peerAddress\"))\n                w.uint32(18).string(m.peerAddress);\n            if (m.relayPublicKey != null && Object.hasOwnProperty.call(m, \"relayPublicKey\"))\n                w.uint32(26).string(m.relayPublicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified AddPeerRequestMessage message, length delimited. Does not implicitly {@link agentInterface.AddPeerRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.AddPeerRequestMessage\n         * @static\n         * @param {agentInterface.IAddPeerRequestMessage} message AddPeerRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AddPeerRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AddPeerRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.AddPeerRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.AddPeerRequestMessage} AddPeerRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AddPeerRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.AddPeerRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                case 2:\n                    m.peerAddress = r.string();\n                    break;\n                case 3:\n                    m.relayPublicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an AddPeerRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.AddPeerRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.AddPeerRequestMessage} AddPeerRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AddPeerRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return AddPeerRequestMessage;\n    })();\n\n    agentInterface.AddPeerResponseMessage = (function() {\n\n        /**\n         * Properties of an AddPeerResponseMessage.\n         * @memberof agentInterface\n         * @interface IAddPeerResponseMessage\n         * @property {boolean|null} [successful] AddPeerResponseMessage successful\n         */\n\n        /**\n         * Constructs a new AddPeerResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an AddPeerResponseMessage.\n         * @implements IAddPeerResponseMessage\n         * @constructor\n         * @param {agentInterface.IAddPeerResponseMessage=} [p] Properties to set\n         */\n        function AddPeerResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * AddPeerResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.AddPeerResponseMessage\n         * @instance\n         */\n        AddPeerResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new AddPeerResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.AddPeerResponseMessage\n         * @static\n         * @param {agentInterface.IAddPeerResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.AddPeerResponseMessage} AddPeerResponseMessage instance\n         */\n        AddPeerResponseMessage.create = function create(properties) {\n            return new AddPeerResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified AddPeerResponseMessage message. Does not implicitly {@link agentInterface.AddPeerResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.AddPeerResponseMessage\n         * @static\n         * @param {agentInterface.IAddPeerResponseMessage} m AddPeerResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AddPeerResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified AddPeerResponseMessage message, length delimited. Does not implicitly {@link agentInterface.AddPeerResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.AddPeerResponseMessage\n         * @static\n         * @param {agentInterface.IAddPeerResponseMessage} message AddPeerResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AddPeerResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AddPeerResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.AddPeerResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.AddPeerResponseMessage} AddPeerResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AddPeerResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.AddPeerResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an AddPeerResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.AddPeerResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.AddPeerResponseMessage} AddPeerResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AddPeerResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return AddPeerResponseMessage;\n    })();\n\n    agentInterface.PingPeerRequestMessage = (function() {\n\n        /**\n         * Properties of a PingPeerRequestMessage.\n         * @memberof agentInterface\n         * @interface IPingPeerRequestMessage\n         * @property {string|null} [publicKey] PingPeerRequestMessage publicKey\n         * @property {number|null} [timeout] PingPeerRequestMessage timeout\n         */\n\n        /**\n         * Constructs a new PingPeerRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a PingPeerRequestMessage.\n         * @implements IPingPeerRequestMessage\n         * @constructor\n         * @param {agentInterface.IPingPeerRequestMessage=} [p] Properties to set\n         */\n        function PingPeerRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PingPeerRequestMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.PingPeerRequestMessage\n         * @instance\n         */\n        PingPeerRequestMessage.prototype.publicKey = \"\";\n\n        /**\n         * PingPeerRequestMessage timeout.\n         * @member {number} timeout\n         * @memberof agentInterface.PingPeerRequestMessage\n         * @instance\n         */\n        PingPeerRequestMessage.prototype.timeout = 0;\n\n        /**\n         * Creates a new PingPeerRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.PingPeerRequestMessage\n         * @static\n         * @param {agentInterface.IPingPeerRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.PingPeerRequestMessage} PingPeerRequestMessage instance\n         */\n        PingPeerRequestMessage.create = function create(properties) {\n            return new PingPeerRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified PingPeerRequestMessage message. Does not implicitly {@link agentInterface.PingPeerRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.PingPeerRequestMessage\n         * @static\n         * @param {agentInterface.IPingPeerRequestMessage} m PingPeerRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingPeerRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            if (m.timeout != null && Object.hasOwnProperty.call(m, \"timeout\"))\n                w.uint32(16).int32(m.timeout);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PingPeerRequestMessage message, length delimited. Does not implicitly {@link agentInterface.PingPeerRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.PingPeerRequestMessage\n         * @static\n         * @param {agentInterface.IPingPeerRequestMessage} message PingPeerRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingPeerRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PingPeerRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.PingPeerRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.PingPeerRequestMessage} PingPeerRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingPeerRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.PingPeerRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                case 2:\n                    m.timeout = r.int32();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PingPeerRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.PingPeerRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.PingPeerRequestMessage} PingPeerRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingPeerRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PingPeerRequestMessage;\n    })();\n\n    agentInterface.PingPeerResponseMessage = (function() {\n\n        /**\n         * Properties of a PingPeerResponseMessage.\n         * @memberof agentInterface\n         * @interface IPingPeerResponseMessage\n         * @property {boolean|null} [successful] PingPeerResponseMessage successful\n         */\n\n        /**\n         * Constructs a new PingPeerResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a PingPeerResponseMessage.\n         * @implements IPingPeerResponseMessage\n         * @constructor\n         * @param {agentInterface.IPingPeerResponseMessage=} [p] Properties to set\n         */\n        function PingPeerResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * PingPeerResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.PingPeerResponseMessage\n         * @instance\n         */\n        PingPeerResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new PingPeerResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.PingPeerResponseMessage\n         * @static\n         * @param {agentInterface.IPingPeerResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.PingPeerResponseMessage} PingPeerResponseMessage instance\n         */\n        PingPeerResponseMessage.create = function create(properties) {\n            return new PingPeerResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified PingPeerResponseMessage message. Does not implicitly {@link agentInterface.PingPeerResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.PingPeerResponseMessage\n         * @static\n         * @param {agentInterface.IPingPeerResponseMessage} m PingPeerResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingPeerResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified PingPeerResponseMessage message, length delimited. Does not implicitly {@link agentInterface.PingPeerResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.PingPeerResponseMessage\n         * @static\n         * @param {agentInterface.IPingPeerResponseMessage} message PingPeerResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingPeerResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PingPeerResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.PingPeerResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.PingPeerResponseMessage} PingPeerResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingPeerResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.PingPeerResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a PingPeerResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.PingPeerResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.PingPeerResponseMessage} PingPeerResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingPeerResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return PingPeerResponseMessage;\n    })();\n\n    agentInterface.FindPeerRequestMessage = (function() {\n\n        /**\n         * Properties of a FindPeerRequestMessage.\n         * @memberof agentInterface\n         * @interface IFindPeerRequestMessage\n         * @property {string|null} [publicKey] FindPeerRequestMessage publicKey\n         * @property {number|null} [timeout] FindPeerRequestMessage timeout\n         */\n\n        /**\n         * Constructs a new FindPeerRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a FindPeerRequestMessage.\n         * @implements IFindPeerRequestMessage\n         * @constructor\n         * @param {agentInterface.IFindPeerRequestMessage=} [p] Properties to set\n         */\n        function FindPeerRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * FindPeerRequestMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.FindPeerRequestMessage\n         * @instance\n         */\n        FindPeerRequestMessage.prototype.publicKey = \"\";\n\n        /**\n         * FindPeerRequestMessage timeout.\n         * @member {number} timeout\n         * @memberof agentInterface.FindPeerRequestMessage\n         * @instance\n         */\n        FindPeerRequestMessage.prototype.timeout = 0;\n\n        /**\n         * Creates a new FindPeerRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.FindPeerRequestMessage\n         * @static\n         * @param {agentInterface.IFindPeerRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.FindPeerRequestMessage} FindPeerRequestMessage instance\n         */\n        FindPeerRequestMessage.create = function create(properties) {\n            return new FindPeerRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified FindPeerRequestMessage message. Does not implicitly {@link agentInterface.FindPeerRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.FindPeerRequestMessage\n         * @static\n         * @param {agentInterface.IFindPeerRequestMessage} m FindPeerRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        FindPeerRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            if (m.timeout != null && Object.hasOwnProperty.call(m, \"timeout\"))\n                w.uint32(16).int32(m.timeout);\n            return w;\n        };\n\n        /**\n         * Encodes the specified FindPeerRequestMessage message, length delimited. Does not implicitly {@link agentInterface.FindPeerRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.FindPeerRequestMessage\n         * @static\n         * @param {agentInterface.IFindPeerRequestMessage} message FindPeerRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        FindPeerRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a FindPeerRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.FindPeerRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.FindPeerRequestMessage} FindPeerRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        FindPeerRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.FindPeerRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                case 2:\n                    m.timeout = r.int32();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a FindPeerRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.FindPeerRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.FindPeerRequestMessage} FindPeerRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        FindPeerRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return FindPeerRequestMessage;\n    })();\n\n    agentInterface.FindPeerResponseMessage = (function() {\n\n        /**\n         * Properties of a FindPeerResponseMessage.\n         * @memberof agentInterface\n         * @interface IFindPeerResponseMessage\n         * @property {boolean|null} [successful] FindPeerResponseMessage successful\n         */\n\n        /**\n         * Constructs a new FindPeerResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a FindPeerResponseMessage.\n         * @implements IFindPeerResponseMessage\n         * @constructor\n         * @param {agentInterface.IFindPeerResponseMessage=} [p] Properties to set\n         */\n        function FindPeerResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * FindPeerResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.FindPeerResponseMessage\n         * @instance\n         */\n        FindPeerResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new FindPeerResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.FindPeerResponseMessage\n         * @static\n         * @param {agentInterface.IFindPeerResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.FindPeerResponseMessage} FindPeerResponseMessage instance\n         */\n        FindPeerResponseMessage.create = function create(properties) {\n            return new FindPeerResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified FindPeerResponseMessage message. Does not implicitly {@link agentInterface.FindPeerResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.FindPeerResponseMessage\n         * @static\n         * @param {agentInterface.IFindPeerResponseMessage} m FindPeerResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        FindPeerResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified FindPeerResponseMessage message, length delimited. Does not implicitly {@link agentInterface.FindPeerResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.FindPeerResponseMessage\n         * @static\n         * @param {agentInterface.IFindPeerResponseMessage} message FindPeerResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        FindPeerResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a FindPeerResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.FindPeerResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.FindPeerResponseMessage} FindPeerResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        FindPeerResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.FindPeerResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a FindPeerResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.FindPeerResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.FindPeerResponseMessage} FindPeerResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        FindPeerResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return FindPeerResponseMessage;\n    })();\n\n    agentInterface.FindSocialPeerRequestMessage = (function() {\n\n        /**\n         * Properties of a FindSocialPeerRequestMessage.\n         * @memberof agentInterface\n         * @interface IFindSocialPeerRequestMessage\n         * @property {string|null} [handle] FindSocialPeerRequestMessage handle\n         * @property {string|null} [service] FindSocialPeerRequestMessage service\n         * @property {number|null} [timeout] FindSocialPeerRequestMessage timeout\n         */\n\n        /**\n         * Constructs a new FindSocialPeerRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a FindSocialPeerRequestMessage.\n         * @implements IFindSocialPeerRequestMessage\n         * @constructor\n         * @param {agentInterface.IFindSocialPeerRequestMessage=} [p] Properties to set\n         */\n        function FindSocialPeerRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * FindSocialPeerRequestMessage handle.\n         * @member {string} handle\n         * @memberof agentInterface.FindSocialPeerRequestMessage\n         * @instance\n         */\n        FindSocialPeerRequestMessage.prototype.handle = \"\";\n\n        /**\n         * FindSocialPeerRequestMessage service.\n         * @member {string} service\n         * @memberof agentInterface.FindSocialPeerRequestMessage\n         * @instance\n         */\n        FindSocialPeerRequestMessage.prototype.service = \"\";\n\n        /**\n         * FindSocialPeerRequestMessage timeout.\n         * @member {number} timeout\n         * @memberof agentInterface.FindSocialPeerRequestMessage\n         * @instance\n         */\n        FindSocialPeerRequestMessage.prototype.timeout = 0;\n\n        /**\n         * Creates a new FindSocialPeerRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.FindSocialPeerRequestMessage\n         * @static\n         * @param {agentInterface.IFindSocialPeerRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.FindSocialPeerRequestMessage} FindSocialPeerRequestMessage instance\n         */\n        FindSocialPeerRequestMessage.create = function create(properties) {\n            return new FindSocialPeerRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified FindSocialPeerRequestMessage message. Does not implicitly {@link agentInterface.FindSocialPeerRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.FindSocialPeerRequestMessage\n         * @static\n         * @param {agentInterface.IFindSocialPeerRequestMessage} m FindSocialPeerRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        FindSocialPeerRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.handle != null && Object.hasOwnProperty.call(m, \"handle\"))\n                w.uint32(10).string(m.handle);\n            if (m.service != null && Object.hasOwnProperty.call(m, \"service\"))\n                w.uint32(18).string(m.service);\n            if (m.timeout != null && Object.hasOwnProperty.call(m, \"timeout\"))\n                w.uint32(24).int32(m.timeout);\n            return w;\n        };\n\n        /**\n         * Encodes the specified FindSocialPeerRequestMessage message, length delimited. Does not implicitly {@link agentInterface.FindSocialPeerRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.FindSocialPeerRequestMessage\n         * @static\n         * @param {agentInterface.IFindSocialPeerRequestMessage} message FindSocialPeerRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        FindSocialPeerRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a FindSocialPeerRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.FindSocialPeerRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.FindSocialPeerRequestMessage} FindSocialPeerRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        FindSocialPeerRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.FindSocialPeerRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.handle = r.string();\n                    break;\n                case 2:\n                    m.service = r.string();\n                    break;\n                case 3:\n                    m.timeout = r.int32();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a FindSocialPeerRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.FindSocialPeerRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.FindSocialPeerRequestMessage} FindSocialPeerRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        FindSocialPeerRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return FindSocialPeerRequestMessage;\n    })();\n\n    agentInterface.FindSocialPeerResponseMessage = (function() {\n\n        /**\n         * Properties of a FindSocialPeerResponseMessage.\n         * @memberof agentInterface\n         * @interface IFindSocialPeerResponseMessage\n         * @property {boolean|null} [successful] FindSocialPeerResponseMessage successful\n         */\n\n        /**\n         * Constructs a new FindSocialPeerResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a FindSocialPeerResponseMessage.\n         * @implements IFindSocialPeerResponseMessage\n         * @constructor\n         * @param {agentInterface.IFindSocialPeerResponseMessage=} [p] Properties to set\n         */\n        function FindSocialPeerResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * FindSocialPeerResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.FindSocialPeerResponseMessage\n         * @instance\n         */\n        FindSocialPeerResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new FindSocialPeerResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.FindSocialPeerResponseMessage\n         * @static\n         * @param {agentInterface.IFindSocialPeerResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.FindSocialPeerResponseMessage} FindSocialPeerResponseMessage instance\n         */\n        FindSocialPeerResponseMessage.create = function create(properties) {\n            return new FindSocialPeerResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified FindSocialPeerResponseMessage message. Does not implicitly {@link agentInterface.FindSocialPeerResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.FindSocialPeerResponseMessage\n         * @static\n         * @param {agentInterface.IFindSocialPeerResponseMessage} m FindSocialPeerResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        FindSocialPeerResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified FindSocialPeerResponseMessage message, length delimited. Does not implicitly {@link agentInterface.FindSocialPeerResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.FindSocialPeerResponseMessage\n         * @static\n         * @param {agentInterface.IFindSocialPeerResponseMessage} message FindSocialPeerResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        FindSocialPeerResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a FindSocialPeerResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.FindSocialPeerResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.FindSocialPeerResponseMessage} FindSocialPeerResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        FindSocialPeerResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.FindSocialPeerResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a FindSocialPeerResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.FindSocialPeerResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.FindSocialPeerResponseMessage} FindSocialPeerResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        FindSocialPeerResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return FindSocialPeerResponseMessage;\n    })();\n\n    agentInterface.ListPeersRequestMessage = (function() {\n\n        /**\n         * Properties of a ListPeersRequestMessage.\n         * @memberof agentInterface\n         * @interface IListPeersRequestMessage\n         */\n\n        /**\n         * Constructs a new ListPeersRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ListPeersRequestMessage.\n         * @implements IListPeersRequestMessage\n         * @constructor\n         * @param {agentInterface.IListPeersRequestMessage=} [p] Properties to set\n         */\n        function ListPeersRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Creates a new ListPeersRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ListPeersRequestMessage\n         * @static\n         * @param {agentInterface.IListPeersRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.ListPeersRequestMessage} ListPeersRequestMessage instance\n         */\n        ListPeersRequestMessage.create = function create(properties) {\n            return new ListPeersRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListPeersRequestMessage message. Does not implicitly {@link agentInterface.ListPeersRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ListPeersRequestMessage\n         * @static\n         * @param {agentInterface.IListPeersRequestMessage} m ListPeersRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListPeersRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            return w;\n        };\n\n        /**\n         * Encodes the specified ListPeersRequestMessage message, length delimited. Does not implicitly {@link agentInterface.ListPeersRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ListPeersRequestMessage\n         * @static\n         * @param {agentInterface.IListPeersRequestMessage} message ListPeersRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListPeersRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ListPeersRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ListPeersRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ListPeersRequestMessage} ListPeersRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListPeersRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ListPeersRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ListPeersRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ListPeersRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ListPeersRequestMessage} ListPeersRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListPeersRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ListPeersRequestMessage;\n    })();\n\n    agentInterface.ListPeersResponseMessage = (function() {\n\n        /**\n         * Properties of a ListPeersResponseMessage.\n         * @memberof agentInterface\n         * @interface IListPeersResponseMessage\n         * @property {Array.<string>|null} [publicKeys] ListPeersResponseMessage publicKeys\n         */\n\n        /**\n         * Constructs a new ListPeersResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ListPeersResponseMessage.\n         * @implements IListPeersResponseMessage\n         * @constructor\n         * @param {agentInterface.IListPeersResponseMessage=} [p] Properties to set\n         */\n        function ListPeersResponseMessage(p) {\n            this.publicKeys = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ListPeersResponseMessage publicKeys.\n         * @member {Array.<string>} publicKeys\n         * @memberof agentInterface.ListPeersResponseMessage\n         * @instance\n         */\n        ListPeersResponseMessage.prototype.publicKeys = $util.emptyArray;\n\n        /**\n         * Creates a new ListPeersResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ListPeersResponseMessage\n         * @static\n         * @param {agentInterface.IListPeersResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.ListPeersResponseMessage} ListPeersResponseMessage instance\n         */\n        ListPeersResponseMessage.create = function create(properties) {\n            return new ListPeersResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ListPeersResponseMessage message. Does not implicitly {@link agentInterface.ListPeersResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ListPeersResponseMessage\n         * @static\n         * @param {agentInterface.IListPeersResponseMessage} m ListPeersResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListPeersResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKeys != null && m.publicKeys.length) {\n                for (var i = 0; i < m.publicKeys.length; ++i)\n                    w.uint32(10).string(m.publicKeys[i]);\n            }\n            return w;\n        };\n\n        /**\n         * Encodes the specified ListPeersResponseMessage message, length delimited. Does not implicitly {@link agentInterface.ListPeersResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ListPeersResponseMessage\n         * @static\n         * @param {agentInterface.IListPeersResponseMessage} message ListPeersResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ListPeersResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ListPeersResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ListPeersResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ListPeersResponseMessage} ListPeersResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListPeersResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ListPeersResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.publicKeys && m.publicKeys.length))\n                        m.publicKeys = [];\n                    m.publicKeys.push(r.string());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ListPeersResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ListPeersResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ListPeersResponseMessage} ListPeersResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ListPeersResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ListPeersResponseMessage;\n    })();\n\n    agentInterface.ToggleStealthRequestMessage = (function() {\n\n        /**\n         * Properties of a ToggleStealthRequestMessage.\n         * @memberof agentInterface\n         * @interface IToggleStealthRequestMessage\n         * @property {boolean|null} [active] ToggleStealthRequestMessage active\n         */\n\n        /**\n         * Constructs a new ToggleStealthRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ToggleStealthRequestMessage.\n         * @implements IToggleStealthRequestMessage\n         * @constructor\n         * @param {agentInterface.IToggleStealthRequestMessage=} [p] Properties to set\n         */\n        function ToggleStealthRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ToggleStealthRequestMessage active.\n         * @member {boolean} active\n         * @memberof agentInterface.ToggleStealthRequestMessage\n         * @instance\n         */\n        ToggleStealthRequestMessage.prototype.active = false;\n\n        /**\n         * Creates a new ToggleStealthRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ToggleStealthRequestMessage\n         * @static\n         * @param {agentInterface.IToggleStealthRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.ToggleStealthRequestMessage} ToggleStealthRequestMessage instance\n         */\n        ToggleStealthRequestMessage.create = function create(properties) {\n            return new ToggleStealthRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ToggleStealthRequestMessage message. Does not implicitly {@link agentInterface.ToggleStealthRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ToggleStealthRequestMessage\n         * @static\n         * @param {agentInterface.IToggleStealthRequestMessage} m ToggleStealthRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ToggleStealthRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.active != null && Object.hasOwnProperty.call(m, \"active\"))\n                w.uint32(8).bool(m.active);\n            return w;\n        };\n\n        /**\n         * Encodes the specified ToggleStealthRequestMessage message, length delimited. Does not implicitly {@link agentInterface.ToggleStealthRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ToggleStealthRequestMessage\n         * @static\n         * @param {agentInterface.IToggleStealthRequestMessage} message ToggleStealthRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ToggleStealthRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ToggleStealthRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ToggleStealthRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ToggleStealthRequestMessage} ToggleStealthRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ToggleStealthRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ToggleStealthRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.active = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ToggleStealthRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ToggleStealthRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ToggleStealthRequestMessage} ToggleStealthRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ToggleStealthRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ToggleStealthRequestMessage;\n    })();\n\n    agentInterface.ToggleStealthResponseMessage = (function() {\n\n        /**\n         * Properties of a ToggleStealthResponseMessage.\n         * @memberof agentInterface\n         * @interface IToggleStealthResponseMessage\n         * @property {boolean|null} [successful] ToggleStealthResponseMessage successful\n         */\n\n        /**\n         * Constructs a new ToggleStealthResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a ToggleStealthResponseMessage.\n         * @implements IToggleStealthResponseMessage\n         * @constructor\n         * @param {agentInterface.IToggleStealthResponseMessage=} [p] Properties to set\n         */\n        function ToggleStealthResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * ToggleStealthResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.ToggleStealthResponseMessage\n         * @instance\n         */\n        ToggleStealthResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new ToggleStealthResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.ToggleStealthResponseMessage\n         * @static\n         * @param {agentInterface.IToggleStealthResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.ToggleStealthResponseMessage} ToggleStealthResponseMessage instance\n         */\n        ToggleStealthResponseMessage.create = function create(properties) {\n            return new ToggleStealthResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified ToggleStealthResponseMessage message. Does not implicitly {@link agentInterface.ToggleStealthResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.ToggleStealthResponseMessage\n         * @static\n         * @param {agentInterface.IToggleStealthResponseMessage} m ToggleStealthResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ToggleStealthResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified ToggleStealthResponseMessage message, length delimited. Does not implicitly {@link agentInterface.ToggleStealthResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.ToggleStealthResponseMessage\n         * @static\n         * @param {agentInterface.IToggleStealthResponseMessage} message ToggleStealthResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ToggleStealthResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ToggleStealthResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.ToggleStealthResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.ToggleStealthResponseMessage} ToggleStealthResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ToggleStealthResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.ToggleStealthResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a ToggleStealthResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.ToggleStealthResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.ToggleStealthResponseMessage} ToggleStealthResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ToggleStealthResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return ToggleStealthResponseMessage;\n    })();\n\n    agentInterface.UpdatePeerInfoRequestMessage = (function() {\n\n        /**\n         * Properties of an UpdatePeerInfoRequestMessage.\n         * @memberof agentInterface\n         * @interface IUpdatePeerInfoRequestMessage\n         * @property {string|null} [publicKey] UpdatePeerInfoRequestMessage publicKey\n         * @property {boolean|null} [currentNode] UpdatePeerInfoRequestMessage currentNode\n         * @property {string|null} [peerHost] UpdatePeerInfoRequestMessage peerHost\n         * @property {number|null} [peerPort] UpdatePeerInfoRequestMessage peerPort\n         * @property {string|null} [relayPublicKey] UpdatePeerInfoRequestMessage relayPublicKey\n         */\n\n        /**\n         * Constructs a new UpdatePeerInfoRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an UpdatePeerInfoRequestMessage.\n         * @implements IUpdatePeerInfoRequestMessage\n         * @constructor\n         * @param {agentInterface.IUpdatePeerInfoRequestMessage=} [p] Properties to set\n         */\n        function UpdatePeerInfoRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * UpdatePeerInfoRequestMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.UpdatePeerInfoRequestMessage\n         * @instance\n         */\n        UpdatePeerInfoRequestMessage.prototype.publicKey = \"\";\n\n        /**\n         * UpdatePeerInfoRequestMessage currentNode.\n         * @member {boolean} currentNode\n         * @memberof agentInterface.UpdatePeerInfoRequestMessage\n         * @instance\n         */\n        UpdatePeerInfoRequestMessage.prototype.currentNode = false;\n\n        /**\n         * UpdatePeerInfoRequestMessage peerHost.\n         * @member {string} peerHost\n         * @memberof agentInterface.UpdatePeerInfoRequestMessage\n         * @instance\n         */\n        UpdatePeerInfoRequestMessage.prototype.peerHost = \"\";\n\n        /**\n         * UpdatePeerInfoRequestMessage peerPort.\n         * @member {number} peerPort\n         * @memberof agentInterface.UpdatePeerInfoRequestMessage\n         * @instance\n         */\n        UpdatePeerInfoRequestMessage.prototype.peerPort = 0;\n\n        /**\n         * UpdatePeerInfoRequestMessage relayPublicKey.\n         * @member {string} relayPublicKey\n         * @memberof agentInterface.UpdatePeerInfoRequestMessage\n         * @instance\n         */\n        UpdatePeerInfoRequestMessage.prototype.relayPublicKey = \"\";\n\n        /**\n         * Creates a new UpdatePeerInfoRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.UpdatePeerInfoRequestMessage\n         * @static\n         * @param {agentInterface.IUpdatePeerInfoRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.UpdatePeerInfoRequestMessage} UpdatePeerInfoRequestMessage instance\n         */\n        UpdatePeerInfoRequestMessage.create = function create(properties) {\n            return new UpdatePeerInfoRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified UpdatePeerInfoRequestMessage message. Does not implicitly {@link agentInterface.UpdatePeerInfoRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.UpdatePeerInfoRequestMessage\n         * @static\n         * @param {agentInterface.IUpdatePeerInfoRequestMessage} m UpdatePeerInfoRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UpdatePeerInfoRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            if (m.currentNode != null && Object.hasOwnProperty.call(m, \"currentNode\"))\n                w.uint32(16).bool(m.currentNode);\n            if (m.peerHost != null && Object.hasOwnProperty.call(m, \"peerHost\"))\n                w.uint32(26).string(m.peerHost);\n            if (m.peerPort != null && Object.hasOwnProperty.call(m, \"peerPort\"))\n                w.uint32(32).int32(m.peerPort);\n            if (m.relayPublicKey != null && Object.hasOwnProperty.call(m, \"relayPublicKey\"))\n                w.uint32(42).string(m.relayPublicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified UpdatePeerInfoRequestMessage message, length delimited. Does not implicitly {@link agentInterface.UpdatePeerInfoRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.UpdatePeerInfoRequestMessage\n         * @static\n         * @param {agentInterface.IUpdatePeerInfoRequestMessage} message UpdatePeerInfoRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UpdatePeerInfoRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an UpdatePeerInfoRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.UpdatePeerInfoRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.UpdatePeerInfoRequestMessage} UpdatePeerInfoRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UpdatePeerInfoRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.UpdatePeerInfoRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                case 2:\n                    m.currentNode = r.bool();\n                    break;\n                case 3:\n                    m.peerHost = r.string();\n                    break;\n                case 4:\n                    m.peerPort = r.int32();\n                    break;\n                case 5:\n                    m.relayPublicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an UpdatePeerInfoRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.UpdatePeerInfoRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.UpdatePeerInfoRequestMessage} UpdatePeerInfoRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UpdatePeerInfoRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return UpdatePeerInfoRequestMessage;\n    })();\n\n    agentInterface.UpdatePeerInfoResponseMessage = (function() {\n\n        /**\n         * Properties of an UpdatePeerInfoResponseMessage.\n         * @memberof agentInterface\n         * @interface IUpdatePeerInfoResponseMessage\n         * @property {boolean|null} [successful] UpdatePeerInfoResponseMessage successful\n         */\n\n        /**\n         * Constructs a new UpdatePeerInfoResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents an UpdatePeerInfoResponseMessage.\n         * @implements IUpdatePeerInfoResponseMessage\n         * @constructor\n         * @param {agentInterface.IUpdatePeerInfoResponseMessage=} [p] Properties to set\n         */\n        function UpdatePeerInfoResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * UpdatePeerInfoResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.UpdatePeerInfoResponseMessage\n         * @instance\n         */\n        UpdatePeerInfoResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new UpdatePeerInfoResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.UpdatePeerInfoResponseMessage\n         * @static\n         * @param {agentInterface.IUpdatePeerInfoResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.UpdatePeerInfoResponseMessage} UpdatePeerInfoResponseMessage instance\n         */\n        UpdatePeerInfoResponseMessage.create = function create(properties) {\n            return new UpdatePeerInfoResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified UpdatePeerInfoResponseMessage message. Does not implicitly {@link agentInterface.UpdatePeerInfoResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.UpdatePeerInfoResponseMessage\n         * @static\n         * @param {agentInterface.IUpdatePeerInfoResponseMessage} m UpdatePeerInfoResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UpdatePeerInfoResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified UpdatePeerInfoResponseMessage message, length delimited. Does not implicitly {@link agentInterface.UpdatePeerInfoResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.UpdatePeerInfoResponseMessage\n         * @static\n         * @param {agentInterface.IUpdatePeerInfoResponseMessage} message UpdatePeerInfoResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UpdatePeerInfoResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an UpdatePeerInfoResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.UpdatePeerInfoResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.UpdatePeerInfoResponseMessage} UpdatePeerInfoResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UpdatePeerInfoResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.UpdatePeerInfoResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes an UpdatePeerInfoResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.UpdatePeerInfoResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.UpdatePeerInfoResponseMessage} UpdatePeerInfoResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UpdatePeerInfoResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return UpdatePeerInfoResponseMessage;\n    })();\n\n    agentInterface.RequestRelayRequestMessage = (function() {\n\n        /**\n         * Properties of a RequestRelayRequestMessage.\n         * @memberof agentInterface\n         * @interface IRequestRelayRequestMessage\n         * @property {string|null} [publicKey] RequestRelayRequestMessage publicKey\n         */\n\n        /**\n         * Constructs a new RequestRelayRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a RequestRelayRequestMessage.\n         * @implements IRequestRelayRequestMessage\n         * @constructor\n         * @param {agentInterface.IRequestRelayRequestMessage=} [p] Properties to set\n         */\n        function RequestRelayRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RequestRelayRequestMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.RequestRelayRequestMessage\n         * @instance\n         */\n        RequestRelayRequestMessage.prototype.publicKey = \"\";\n\n        /**\n         * Creates a new RequestRelayRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.RequestRelayRequestMessage\n         * @static\n         * @param {agentInterface.IRequestRelayRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.RequestRelayRequestMessage} RequestRelayRequestMessage instance\n         */\n        RequestRelayRequestMessage.create = function create(properties) {\n            return new RequestRelayRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified RequestRelayRequestMessage message. Does not implicitly {@link agentInterface.RequestRelayRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.RequestRelayRequestMessage\n         * @static\n         * @param {agentInterface.IRequestRelayRequestMessage} m RequestRelayRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RequestRelayRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified RequestRelayRequestMessage message, length delimited. Does not implicitly {@link agentInterface.RequestRelayRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.RequestRelayRequestMessage\n         * @static\n         * @param {agentInterface.IRequestRelayRequestMessage} message RequestRelayRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RequestRelayRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RequestRelayRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.RequestRelayRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.RequestRelayRequestMessage} RequestRelayRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RequestRelayRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.RequestRelayRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a RequestRelayRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.RequestRelayRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.RequestRelayRequestMessage} RequestRelayRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RequestRelayRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return RequestRelayRequestMessage;\n    })();\n\n    agentInterface.RequestRelayResponseMessage = (function() {\n\n        /**\n         * Properties of a RequestRelayResponseMessage.\n         * @memberof agentInterface\n         * @interface IRequestRelayResponseMessage\n         * @property {boolean|null} [successful] RequestRelayResponseMessage successful\n         */\n\n        /**\n         * Constructs a new RequestRelayResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a RequestRelayResponseMessage.\n         * @implements IRequestRelayResponseMessage\n         * @constructor\n         * @param {agentInterface.IRequestRelayResponseMessage=} [p] Properties to set\n         */\n        function RequestRelayResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RequestRelayResponseMessage successful.\n         * @member {boolean} successful\n         * @memberof agentInterface.RequestRelayResponseMessage\n         * @instance\n         */\n        RequestRelayResponseMessage.prototype.successful = false;\n\n        /**\n         * Creates a new RequestRelayResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.RequestRelayResponseMessage\n         * @static\n         * @param {agentInterface.IRequestRelayResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.RequestRelayResponseMessage} RequestRelayResponseMessage instance\n         */\n        RequestRelayResponseMessage.create = function create(properties) {\n            return new RequestRelayResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified RequestRelayResponseMessage message. Does not implicitly {@link agentInterface.RequestRelayResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.RequestRelayResponseMessage\n         * @static\n         * @param {agentInterface.IRequestRelayResponseMessage} m RequestRelayResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RequestRelayResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.successful != null && Object.hasOwnProperty.call(m, \"successful\"))\n                w.uint32(8).bool(m.successful);\n            return w;\n        };\n\n        /**\n         * Encodes the specified RequestRelayResponseMessage message, length delimited. Does not implicitly {@link agentInterface.RequestRelayResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.RequestRelayResponseMessage\n         * @static\n         * @param {agentInterface.IRequestRelayResponseMessage} message RequestRelayResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RequestRelayResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RequestRelayResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.RequestRelayResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.RequestRelayResponseMessage} RequestRelayResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RequestRelayResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.RequestRelayResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.successful = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a RequestRelayResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.RequestRelayResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.RequestRelayResponseMessage} RequestRelayResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RequestRelayResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return RequestRelayResponseMessage;\n    })();\n\n    agentInterface.RequestPunchRequestMessage = (function() {\n\n        /**\n         * Properties of a RequestPunchRequestMessage.\n         * @memberof agentInterface\n         * @interface IRequestPunchRequestMessage\n         * @property {string|null} [publicKey] RequestPunchRequestMessage publicKey\n         */\n\n        /**\n         * Constructs a new RequestPunchRequestMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a RequestPunchRequestMessage.\n         * @implements IRequestPunchRequestMessage\n         * @constructor\n         * @param {agentInterface.IRequestPunchRequestMessage=} [p] Properties to set\n         */\n        function RequestPunchRequestMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RequestPunchRequestMessage publicKey.\n         * @member {string} publicKey\n         * @memberof agentInterface.RequestPunchRequestMessage\n         * @instance\n         */\n        RequestPunchRequestMessage.prototype.publicKey = \"\";\n\n        /**\n         * Creates a new RequestPunchRequestMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.RequestPunchRequestMessage\n         * @static\n         * @param {agentInterface.IRequestPunchRequestMessage=} [properties] Properties to set\n         * @returns {agentInterface.RequestPunchRequestMessage} RequestPunchRequestMessage instance\n         */\n        RequestPunchRequestMessage.create = function create(properties) {\n            return new RequestPunchRequestMessage(properties);\n        };\n\n        /**\n         * Encodes the specified RequestPunchRequestMessage message. Does not implicitly {@link agentInterface.RequestPunchRequestMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.RequestPunchRequestMessage\n         * @static\n         * @param {agentInterface.IRequestPunchRequestMessage} m RequestPunchRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RequestPunchRequestMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n                w.uint32(10).string(m.publicKey);\n            return w;\n        };\n\n        /**\n         * Encodes the specified RequestPunchRequestMessage message, length delimited. Does not implicitly {@link agentInterface.RequestPunchRequestMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.RequestPunchRequestMessage\n         * @static\n         * @param {agentInterface.IRequestPunchRequestMessage} message RequestPunchRequestMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RequestPunchRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RequestPunchRequestMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.RequestPunchRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.RequestPunchRequestMessage} RequestPunchRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RequestPunchRequestMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.RequestPunchRequestMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.publicKey = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a RequestPunchRequestMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.RequestPunchRequestMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.RequestPunchRequestMessage} RequestPunchRequestMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RequestPunchRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return RequestPunchRequestMessage;\n    })();\n\n    agentInterface.RequestPunchResponseMessage = (function() {\n\n        /**\n         * Properties of a RequestPunchResponseMessage.\n         * @memberof agentInterface\n         * @interface IRequestPunchResponseMessage\n         * @property {string|null} [address] RequestPunchResponseMessage address\n         */\n\n        /**\n         * Constructs a new RequestPunchResponseMessage.\n         * @memberof agentInterface\n         * @classdesc Represents a RequestPunchResponseMessage.\n         * @implements IRequestPunchResponseMessage\n         * @constructor\n         * @param {agentInterface.IRequestPunchResponseMessage=} [p] Properties to set\n         */\n        function RequestPunchResponseMessage(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RequestPunchResponseMessage address.\n         * @member {string} address\n         * @memberof agentInterface.RequestPunchResponseMessage\n         * @instance\n         */\n        RequestPunchResponseMessage.prototype.address = \"\";\n\n        /**\n         * Creates a new RequestPunchResponseMessage instance using the specified properties.\n         * @function create\n         * @memberof agentInterface.RequestPunchResponseMessage\n         * @static\n         * @param {agentInterface.IRequestPunchResponseMessage=} [properties] Properties to set\n         * @returns {agentInterface.RequestPunchResponseMessage} RequestPunchResponseMessage instance\n         */\n        RequestPunchResponseMessage.create = function create(properties) {\n            return new RequestPunchResponseMessage(properties);\n        };\n\n        /**\n         * Encodes the specified RequestPunchResponseMessage message. Does not implicitly {@link agentInterface.RequestPunchResponseMessage.verify|verify} messages.\n         * @function encode\n         * @memberof agentInterface.RequestPunchResponseMessage\n         * @static\n         * @param {agentInterface.IRequestPunchResponseMessage} m RequestPunchResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RequestPunchResponseMessage.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.address != null && Object.hasOwnProperty.call(m, \"address\"))\n                w.uint32(10).string(m.address);\n            return w;\n        };\n\n        /**\n         * Encodes the specified RequestPunchResponseMessage message, length delimited. Does not implicitly {@link agentInterface.RequestPunchResponseMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof agentInterface.RequestPunchResponseMessage\n         * @static\n         * @param {agentInterface.IRequestPunchResponseMessage} message RequestPunchResponseMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RequestPunchResponseMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RequestPunchResponseMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof agentInterface.RequestPunchResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {agentInterface.RequestPunchResponseMessage} RequestPunchResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RequestPunchResponseMessage.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.agentInterface.RequestPunchResponseMessage();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.address = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Decodes a RequestPunchResponseMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof agentInterface.RequestPunchResponseMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {agentInterface.RequestPunchResponseMessage} RequestPunchResponseMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RequestPunchResponseMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        return RequestPunchResponseMessage;\n    })();\n\n    return agentInterface;\n})();\n\nmodule.exports = $root;\n"],"sourceRoot":""}